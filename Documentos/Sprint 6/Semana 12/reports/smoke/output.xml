<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.13.2 on win32)" generated="2025-09-09T16:53:15.833436" rpa="false" schemaversion="5">
<suite id="s1" name="Suites" source="c:\Users\ercli\IdeaProjects\COMPASS-UOL-PBAIJUN25\Documentos\Sprint 6\Semana 12\tests\suites">
<suite id="s1-s1" name="Health" source="c:\Users\ercli\IdeaProjects\COMPASS-UOL-PBAIJUN25\Documentos\Sprint 6\Semana 12\tests\suites\health.robot">
<kw name="Create Session" owner="RequestsLibrary" type="SETUP">
<msg time="2025-09-09T16:53:15.995680" level="INFO">Creating Session using : alias=booker, url=http://54.147.59.9:3000, headers={'Content-Type': 'application/json', 'Accept': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>booker</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${BASE_HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-09-09T16:53:15.995335" elapsed="0.000554"/>
</kw>
<test id="s1-s1-t1" name="SRV-health-200-positivo" line="7">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:53:16.599088" level="INFO">GET Request : url=http://54.147.59.9:3000/status 
 path_url=/status 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-09T16:53:16.599496" level="INFO">GET Response : url=http://54.147.59.9:3000/status 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'text/html; charset=utf-8', 'Content-Length': '15999', 'Date': 'Tue, 09 Sep 2025 19:53:16 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body=&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;ServeRest Status&lt;/title&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.2.2/Chart.bundle.min.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.4.5/socket.io.min.js"&gt;&lt;/script&gt;
    &lt;style&gt;
      * {
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
}

body.hide-cpu .container.cpu,
body.hide-mem .container.mem,
body.hide-load .container.load,
body.hide-responseTime .container.responseTime,
body.hide-rps .container.rps,
body.hide-statusCodes .container.statusCodes {
  display: none;
}

h1 {
  font-size: 3em;
  color: #222;
  margin: 0;
}

h5 {
  margin: 0;
  color: #888;
}

h6 {
  margin: 0;
}

p {
  font-size: 0.7em;
  color: #888;
}

span {
  cursor: pointer;
  font-size: 10px;
  margin-left: 5px;
  border: 1px solid #DDD;
  padding: 3px 10px 4px 10px;
}

canvas {
  width: 400px;
  height: 100px;
}

.content {
  width: 600px;
  margin: auto;
}

.active {
  background: #eeeeee;
}

.stats-column {
  flex: 0 0 200px;
}

.container {
  display: flex;
  flex-direction: row;
  margin-top: 20px;
  height: 100px;
}

.chart-container {
  width: 400px;
  height: 100px;
}

.container.healthChecks {
  display: block;
  height: auto;
}

.health-check-row {
  align-items: center;
  border: 1px solid #eee;
  border-radius: 4px;
  display: flex;
  margin: 0 0 10px 0;
  width: 100%;
}

.health-check-title-column {
  flex: 0 0 400px;
  display: flex;
  align-items: center;
  padding: 0 10px;
}

.health-check-title-column h5 a {
  color: #888;
  cursor: pointer;
  text-decoration: none;
}

.health-check-title-column h5 a:hover {
  text-decoration: underline;
}

.health-check-status-container {
  align-items: center;
  border-radius: 0 4px 4px 0;
  display: flex;
  justify-content: center;
  height: 2em;
  text-align: center;
  width: 200px;
}

.health-check-status-container.ok {
  background: #75D701;
}

.health-check-status-container.failed {
  background: #E53A40;
}

.health-check-status-container h1 {
  line-height: 2em;
  font-size: 1.5em;
  color: #fff;
  text-align: center;
  text-transform: uppercase;
}

.footer {
  text-align: center;
}

.span-controls {
  float: right;
}

.status-code {
  margin-top: 2px;
}

.status-code:before {
  content: '';
  display: inline-block;
  width: 8px;
  height: 8px;
  border-radius: 8px;
  margin-right: 10px;
}

.status-code-2xx:before {
  background-color: #75D701;
}

.status-code-3xx:before {
  background-color: #47b8e0;
}

.status-code-4xx:before {
  background-color: #ffc952;
}

.status-code-5xx:before {
  background-color: #E53A40;
}

    &lt;/style&gt;
  &lt;/head&gt;
  &lt;body class=""&gt;
    &lt;div class="content"&gt;
      &lt;div class="header"&gt;
        &lt;b&gt;ServeRest Status&lt;/b&gt;
        &lt;div id="span-controls" class="span-controls"&gt;&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container cpu"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;CPU Usage&lt;/h5&gt;
          &lt;h1 id="cpuStat"&gt;- %&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="cpuChart" width="400" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container mem"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Memory Usage&lt;/h5&gt;
          &lt;h1 id="memStat"&gt;- %&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="memChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container heap-size"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Heap Usage&lt;/h5&gt;
          &lt;h1 id="heapStat"&gt;- %&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="heapChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container load"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;One Minute Load Avg&lt;/h5&gt;
          &lt;h1 id="loadStat"&gt;-&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="loadChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container eventLoop"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Spent in Event Loop&lt;/h5&gt;
          &lt;h1 id="eventLoopStat"&gt;ms&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="eventLoopChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container responseTime"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Response Time&lt;/h5&gt;
          &lt;h1 id="responseTimeStat"&gt;-&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="responseTimeChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container rps"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Requests per Second&lt;/h5&gt;
          &lt;h1 id="rpsStat"&gt;-&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="rpsChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container statusCodes"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Status Codes&lt;/h5&gt;
          &lt;h6 class="status-code status-code-2xx"&gt;2xx&lt;/h6&gt;
          &lt;h6 class="status-code status-code-3xx"&gt;3xx&lt;/h6&gt;
          &lt;h6 class="status-code status-code-4xx"&gt;4xx&lt;/h6&gt;
          &lt;h6 class="status-code status-code-5xx"&gt;5xx&lt;/h6&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="statusCodesChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container healthChecks"&gt;
      &lt;/div&gt;
      &lt;div class="footer"&gt;
        &lt;p&gt;Status page made by &lt;a href="https://dynobase.dev"&gt;Dynobase&lt;/a&gt; with &amp;#9829; with Socket.io &amp; Chart.js&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;script&gt;
      var port = '';
      var socketPath = '/socket.io';
      /*
  eslint-disable no-plusplus, no-var, strict, vars-on-top, prefer-template,
  func-names, prefer-arrow-callback, no-loop-func
*/
/* global Chart, location, document, port, socketPath, parseInt, io */

'use strict';

Chart.defaults.global.defaultFontSize = 8;
Chart.defaults.global.animation.duration = 500;
Chart.defaults.global.legend.display = false;
Chart.defaults.global.elements.line.backgroundColor = 'rgba(0,0,0,0)';
Chart.defaults.global.elements.line.borderColor = 'rgba(0,0,0,0.9)';
Chart.defaults.global.elements.line.borderWidth = 2;

var socket = io(location.protocol + '//' + location.hostname + ':' + (port || location.port), {
  path: socketPath,
});
var defaultSpan = 0;
var spans = [];
var statusCodesColors = ['#75D701', '#47b8e0', '#ffc952', '#E53A40'];

var defaultDataset = {
  label: '',
  data: [],
  lineTension: 0.2,
  pointRadius: 0,
};

var defaultOptions = {
  scales: {
    yAxes: [
      {
        ticks: {
          beginAtZero: true,
        },
      },
    ],
    xAxes: [
      {
        type: 'time',
        time: {
          unitStepSize: 30,
        },
        gridLines: {
          display: false,
        },
      },
    ],
  },
  tooltips: {
    enabled: false,
  },
  responsive: true,
  maintainAspectRatio: false,
  animation: false,
};

var createChart = function (ctx, dataset) {
  return new Chart(ctx, {
    type: 'line',
    data: {
      labels: [],
      datasets: dataset,
    },
    options: defaultOptions,
  });
};

var addTimestamp = function (point) {
  return point.timestamp;
};

var cpuDataset = [Object.create(defaultDataset)];
var memDataset = [Object.create(defaultDataset)];
var loadDataset = [Object.create(defaultDataset)];
var heapDataset = [Object.create(defaultDataset)];
var eventLoopDataset = [Object.create(defaultDataset)];
var responseTimeDataset = [Object.create(defaultDataset)];
var rpsDataset = [Object.create(defaultDataset)];

var cpuStat = document.getElementById('cpuStat');
var memStat = document.getElementById('memStat');
var loadStat = document.getElementById('loadStat');
var heapStat = document.getElementById('heapStat');
var eventLoopStat = document.getElementById('eventLoopStat');
var responseTimeStat = document.getElementById('responseTimeStat');
var rpsStat = document.getElementById('rpsStat');

var cpuChartCtx = document.getElementById('cpuChart');
var memChartCtx = document.getElementById('memChart');
var loadChartCtx = document.getElementById('loadChart');
var heapChartCtx = document.getElementById('heapChart');
var eventLoopChartCtx = document.getElementById('eventLoopChart');
var responseTimeChartCtx = document.getElementById('responseTimeChart');
var rpsChartCtx = document.getElementById('rpsChart');
var statusCodesChartCtx = document.getElementById('statusCodesChart');

var cpuChart = createChart(cpuChartCtx, cpuDataset);
var memChart = createChart(memChartCtx, memDataset);
var heapChart = createChart(heapChartCtx, heapDataset);
var eventLoopChart = createChart(eventLoopChartCtx, eventLoopDataset);
var loadChart = createChart(loadChartCtx, loadDataset);
var responseTimeChart = createChart(responseTimeChartCtx, responseTimeDataset);
var rpsChart = createChart(rpsChartCtx, rpsDataset);
var statusCodesChart = new Chart(statusCodesChartCtx, {
  type: 'line',
  data: {
    labels: [],
    datasets: [
      Object.create(defaultDataset),
      Object.create(defaultDataset),
      Object.create(defaultDataset),
      Object.create(defaultDataset),
    ],
  },
  options: defaultOptions,
});

statusCodesChart.data.datasets.forEach(function (dataset, index) {
  dataset.borderColor = statusCodesColors[index];
});

var charts = [
  cpuChart,
  memChart,
  loadChart,
  responseTimeChart,
  rpsChart,
  statusCodesChart,
  heapChart,
  eventLoopChart,
];

var onSpanChange = function (e) {
  e.target.classList.add('active');
  defaultSpan = parseInt(e.target.id, 10);

  var otherSpans = document.getElementsByTagName('span');

  for (var i = 0; i &lt; otherSpans.length; i++) {
    if (otherSpans[i] !== e.target) otherSpans[i].classList.remove('active');
  }

  socket.emit('esm_change');
};

socket.on('esm_start', function (data) {
  // Remove last element of Array because it contains malformed responses data.
  // To keep consistency we also remove os data.
  data[defaultSpan].responses.pop();
  da... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2025-09-09T16:53:16.600867" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>${HEALTH_PATH}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:53:15.996495" elapsed="0.604444"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-09T16:53:16.602339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-09T16:53:16.601247" elapsed="0.001250"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Dictionary Should Contain Key">
<msg time="2025-09-09T16:53:16.604615" level="FAIL">No keyword with name 'Dictionary Should Contain Key' found.</msg>
<arg>${resp.json()}</arg>
<arg>status</arg>
<status status="FAIL" start="2025-09-09T16:53:16.604540" elapsed="0.000174">No keyword with name 'Dictionary Should Contain Key' found.</status>
</kw>
<arg>Dictionary Should Contain Key</arg>
<arg>${resp.json()}</arg>
<arg>status</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-09-09T16:53:16.602755" elapsed="0.002104"/>
</kw>
<doc>Verifica se o endpoint de saúde retorna 200</doc>
<tag>health</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-09T16:53:15.996044" elapsed="0.609079"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-09-09T16:53:16.606348" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-09-09T16:53:16.606176" elapsed="0.000345"/>
</kw>
<status status="PASS" start="2025-09-09T16:53:15.867616" elapsed="0.738981"/>
</suite>
<suite id="s1-s2" name="Login" source="c:\Users\ercli\IdeaProjects\COMPASS-UOL-PBAIJUN25\Documentos\Sprint 6\Semana 12\tests\suites\login.robot">
<kw name="Create Session" owner="RequestsLibrary" type="SETUP">
<msg time="2025-09-09T16:53:16.619568" level="INFO">Creating Session using : alias=booker, url=http://54.147.59.9:3000, headers={'Content-Type': 'application/json', 'Accept': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>booker</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${BASE_HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-09-09T16:53:16.619351" elapsed="0.000355"/>
</kw>
<test id="s1-s2-t1" name="SRV-login-token-positivo" line="12">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:53:17.017965" level="INFO">POST Request : url=http://54.147.59.9:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '53'} 
 body=b'{"email": "admin@serverest.com", "password": "admin"}' 
 </msg>
<msg time="2025-09-09T16:53:17.018158" level="INFO">POST Response : url=http://54.147.59.9:3000/login 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '48', 'Date': 'Tue, 09 Sep 2025 19:53:16 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Email e/ou senha inválidos"
} 
 </msg>
<msg time="2025-09-09T16:53:17.018466" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/login</arg>
<arg>json=${LOGIN_VAL}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:53:16.620120" elapsed="0.398410"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-09T16:53:17.020589" level="INFO">Login response: 401 - {
    "message": "Email e/ou senha inválidos"
}</msg>
<arg>Login response: ${resp.status_code} - ${resp.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-09T16:53:17.018838" elapsed="0.001868"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} in [200, 401]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-09T16:53:17.020959" elapsed="0.001055"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${resp.status_code} == 200</arg>
<arg>Dictionary Should Contain Key</arg>
<arg>${resp.json()}</arg>
<arg>authorization</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-09-09T16:53:17.022314" elapsed="0.000931"/>
</kw>
<doc>Login válido deve retornar token de autorização</doc>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-09T16:53:16.619788" elapsed="0.403707"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-09-09T16:53:17.024398" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-09-09T16:53:17.024237" elapsed="0.000350"/>
</kw>
<status status="PASS" start="2025-09-09T16:53:16.607483" elapsed="0.417179"/>
</suite>
<suite id="s1-s3" name="Produtos" source="c:\Users\ercli\IdeaProjects\COMPASS-UOL-PBAIJUN25\Documentos\Sprint 6\Semana 12\tests\suites\produtos.robot">
<kw name="Create Session" owner="RequestsLibrary" type="SETUP">
<msg time="2025-09-09T16:53:17.039082" level="INFO">Creating Session using : alias=booker, url=http://54.147.59.9:3000, headers={'Content-Type': 'application/json', 'Accept': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>booker</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${BASE_HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-09-09T16:53:17.038780" elapsed="0.000531"/>
</kw>
<test id="s1-s3-t1" name="SRV-produtos-criar-positivo" line="22">
<kw name="Get Auth Token">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-09T16:53:17.040661" level="INFO">&amp;{login_data} = { email=admin@serverest.com | password=admin }</msg>
<var>&amp;{login_data}</var>
<arg>email=admin@serverest.com</arg>
<arg>password=admin</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-09T16:53:17.040413" elapsed="0.000288"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:53:17.437702" level="INFO">POST Request : url=http://54.147.59.9:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '53'} 
 body=b'{"email": "admin@serverest.com", "password": "admin"}' 
 </msg>
<msg time="2025-09-09T16:53:17.437868" level="INFO">POST Response : url=http://54.147.59.9:3000/login 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '48', 'Date': 'Tue, 09 Sep 2025 19:53:17 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Email e/ou senha inválidos"
} 
 </msg>
<msg time="2025-09-09T16:53:17.438491" level="FAIL">HTTPError: 401 Client Error: Unauthorized for url: http://54.147.59.9:3000/login</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/login</arg>
<arg>json=${login_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-09-09T16:53:17.040860" elapsed="0.402432">HTTPError: 401 Client Error: Unauthorized for url: http://54.147.59.9:3000/login</status>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.443780" elapsed="0.000067"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${token}</var>
<arg>${resp.json()}</arg>
<arg>authorization</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.444049" elapsed="0.000038"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${AUTH_TOKEN}</arg>
<arg>${token}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.444362" elapsed="0.000041"/>
</kw>
<return>
<value>${token}</value>
<status status="NOT RUN" start="2025-09-09T16:53:17.444506" elapsed="0.000044"/>
</return>
<var>${token}</var>
<status status="FAIL" start="2025-09-09T16:53:17.040111" elapsed="0.404646">HTTPError: 401 Client Error: Unauthorized for url: http://54.147.59.9:3000/login</status>
</kw>
<kw name="Generate Random String" owner="String">
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.444932" elapsed="0.000033"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>&amp;{produto_data}</var>
<arg>nome=Produto Teste ${uuid}</arg>
<arg>preco=100</arg>
<arg>descricao=Produto para teste automatizado</arg>
<arg>quantidade=50</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.445144" elapsed="0.000028"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.445324" elapsed="0.000027"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos</arg>
<arg>json=${produto_data}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.445481" elapsed="0.000033"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${resp.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.445712" elapsed="0.000041"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.445947" elapsed="0.000042"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.446133" elapsed="0.000027"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${PRODUTO_ID}</arg>
<arg>${body['_id']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.446292" elapsed="0.000025"/>
</kw>
<doc>Criar produto com nome único deve retornar 201</doc>
<tag>produtos</tag>
<tag>smoke</tag>
<status status="FAIL" start="2025-09-09T16:53:17.039428" elapsed="0.407205">HTTPError: 401 Client Error: Unauthorized for url: http://54.147.59.9:3000/login</status>
</test>
<test id="s1-s3-t2" name="SRV-produtos-listar-positivo" line="45">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:53:17.655305" level="INFO">GET Request : url=http://54.147.59.9:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-09T16:53:17.655483" level="INFO">GET Response : url=http://54.147.59.9:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '435', 'Date': 'Tue, 09 Sep 2025 19:53:17 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 2,
    "produtos": [
        {
            "nome": "Logitech MX Vertical",
            "preco": 470,
            "descricao": "Mouse",
            "quantidade": 382,
            "_id": "BeeJh5lz3k6kSIzA"
        },
        {
            "nome": "Samsung 60 polegadas",
            "preco": 5240,
            "descricao": "TV",
            "quantidade": 49977,
            "_id": "K6leHdftCeOJj8BJ"
        }
    ]
} 
 </msg>
<msg time="2025-09-09T16:53:17.655716" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:53:17.447463" elapsed="0.208306"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-09T16:53:17.657001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-09T16:53:17.656032" elapsed="0.001091"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-09T16:53:17.658413" level="INFO">${body} = {'quantidade': 2, 'produtos': [{'nome': 'Logitech MX Vertical', 'preco': 470, 'descricao': 'Mouse', 'quantidade': 382, '_id': 'BeeJh5lz3k6kSIzA'}, {'nome': 'Samsung 60 polegadas', 'preco': 5240, 'desc...</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-09T16:53:17.657353" elapsed="0.001118"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>produtos</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-09T16:53:17.658708" elapsed="0.000299"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>len($body['produtos']) &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-09T16:53:17.659204" elapsed="0.000508"/>
</kw>
<doc>Listar produtos deve retornar 200 e lista</doc>
<tag>produtos</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-09T16:53:17.447027" elapsed="0.213064"/>
</test>
<test id="s1-s3-t3" name="SRV-produtos-obter-por-id-positivo" line="54">
<kw name="Skip If" owner="BuiltIn">
<msg time="2025-09-09T16:53:17.662757" level="SKIP">Produto não foi criado</msg>
<arg>'${PRODUTO_ID}' == '${EMPTY}'</arg>
<arg>Produto não foi criado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="SKIP" start="2025-09-09T16:53:17.661402" elapsed="0.001544">Produto não foi criado</status>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos/${PRODUTO_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.663200" elapsed="0.000199"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.663636" elapsed="0.000038"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.663818" elapsed="0.000030"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>nome</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.663979" elapsed="0.000028"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>preco</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.664181" elapsed="0.000032"/>
</kw>
<doc>Obter produto por ID deve retornar 200</doc>
<tag>produtos</tag>
<tag>smoke</tag>
<status status="SKIP" start="2025-09-09T16:53:17.660536" elapsed="0.004011">Produto não foi criado</status>
</test>
<test id="s1-s3-t4" name="SRV-produtos-atualizar-positivo" line="65">
<kw name="Skip If" owner="BuiltIn">
<msg time="2025-09-09T16:53:17.667497" level="SKIP">Produto não foi criado</msg>
<arg>'${PRODUTO_ID}' == '${EMPTY}'</arg>
<arg>Produto não foi criado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="SKIP" start="2025-09-09T16:53:17.666059" elapsed="0.001598">Produto não foi criado</status>
</kw>
<kw name="Skip If" owner="BuiltIn">
<arg>'${AUTH_TOKEN}' == '${EMPTY}'</arg>
<arg>Token não disponível</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.667903" elapsed="0.000045"/>
</kw>
<kw name="Generate Random String" owner="String">
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.668128" elapsed="0.000031"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>&amp;{produto_update}</var>
<arg>nome=Produto Atualizado ${uuid}</arg>
<arg>preco=150</arg>
<arg>descricao=Produto atualizado por teste</arg>
<arg>quantidade=30</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.668319" elapsed="0.000028"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.668494" elapsed="0.000027"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos/${PRODUTO_ID}</arg>
<arg>json=${produto_update}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.668685" elapsed="0.000026"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.668843" elapsed="0.000026"/>
</kw>
<doc>Atualizar produto deve retornar 200</doc>
<tag>produtos</tag>
<tag>smoke</tag>
<status status="SKIP" start="2025-09-09T16:53:17.665136" elapsed="0.003989">Produto não foi criado</status>
</test>
<test id="s1-s3-t5" name="SRV-produtos-deletar-positivo" line="86">
<kw name="Skip If" owner="BuiltIn">
<msg time="2025-09-09T16:53:17.670563" level="SKIP">Produto não foi criado</msg>
<arg>'${PRODUTO_ID}' == '${EMPTY}'</arg>
<arg>Produto não foi criado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="SKIP" start="2025-09-09T16:53:17.669805" elapsed="0.000865">Produto não foi criado</status>
</kw>
<kw name="Skip If" owner="BuiltIn">
<arg>'${AUTH_TOKEN}' == '${EMPTY}'</arg>
<arg>Token não disponível</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.670821" elapsed="0.000027"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.670963" elapsed="0.000020"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos/${PRODUTO_ID}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.671071" elapsed="0.000016"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} in [200, 204]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="NOT RUN" start="2025-09-09T16:53:17.671169" elapsed="0.000016"/>
</kw>
<doc>Deletar produto deve retornar 200</doc>
<tag>produtos</tag>
<tag>smoke</tag>
<status status="SKIP" start="2025-09-09T16:53:17.669400" elapsed="0.001949">Produto não foi criado</status>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-09-09T16:53:17.671914" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-09-09T16:53:17.671802" elapsed="0.000201"/>
</kw>
<status status="FAIL" start="2025-09-09T16:53:17.025763" elapsed="0.646273"/>
</suite>
<suite id="s1-s4" name="Usuarios" source="c:\Users\ercli\IdeaProjects\COMPASS-UOL-PBAIJUN25\Documentos\Sprint 6\Semana 12\tests\suites\usuarios.robot">
<kw name="Create Session" owner="RequestsLibrary" type="SETUP">
<msg time="2025-09-09T16:53:17.676012" level="INFO">Creating Session using : alias=booker, url=http://54.147.59.9:3000, headers={'Content-Type': 'application/json', 'Accept': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>booker</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${BASE_HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-09-09T16:53:17.675825" elapsed="0.000319"/>
</kw>
<test id="s1-s4-t1" name="SRV-usuarios-criar-positivo" line="12">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-09T16:53:17.676819" level="INFO">${uuid} = kEnbraMW</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-09T16:53:17.676517" elapsed="0.000333"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-09T16:53:17.677223" level="INFO">&amp;{usuario_data} = { nome=Usuario Teste kEnbraMW | email=testekEnbraMW@qa.com | password=teste123 | administrador=true }</msg>
<var>&amp;{usuario_data}</var>
<arg>nome=Usuario Teste ${uuid}</arg>
<arg>email=teste${uuid}@qa.com</arg>
<arg>password=teste123</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-09T16:53:17.676964" elapsed="0.000282"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:53:18.056540" level="INFO">POST Request : url=http://54.147.59.9:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '116'} 
 body=b'{"nome": "Usuario Teste kEnbraMW", "email": "testekEnbraMW@qa.com", "password": "teste123", "administrador": "true"}' 
 </msg>
<msg time="2025-09-09T16:53:18.056763" level="INFO">POST Response : url=http://54.147.59.9:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Tue, 09 Sep 2025 19:53:17 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "9CBMi6ei7jIofbNr"
} 
 </msg>
<msg time="2025-09-09T16:53:18.056894" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${usuario_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:53:17.677337" elapsed="0.379582"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-09T16:53:18.057412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-09T16:53:18.057047" elapsed="0.000409"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-09T16:53:18.057878" level="INFO">${body} = {'message': 'Cadastro realizado com sucesso', '_id': '9CBMi6ei7jIofbNr'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-09T16:53:18.057547" elapsed="0.000351"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-09T16:53:18.057986" elapsed="0.000118"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-09T16:53:18.058708" level="INFO">${USUARIO_ID} = 9CBMi6ei7jIofbNr</msg>
<arg>${USUARIO_ID}</arg>
<arg>${body['_id']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-09T16:53:18.058192" elapsed="0.000587"/>
</kw>
<doc>Criar usuário com email único deve retornar 201</doc>
<tag>smoke</tag>
<tag>usuarios</tag>
<status status="PASS" start="2025-09-09T16:53:17.676208" elapsed="0.382722"/>
</test>
<test id="s1-s4-t2" name="SRV-usuarios-obter-por-id-positivo" line="28">
<kw name="Skip If" owner="BuiltIn">
<arg>'${USUARIO_ID}' == '${EMPTY}'</arg>
<arg>Usuário não foi criado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-09T16:53:18.059707" elapsed="0.000917"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:53:18.249890" level="INFO">GET Request : url=http://54.147.59.9:3000/usuarios/9CBMi6ei7jIofbNr 
 path_url=/usuarios/9CBMi6ei7jIofbNr 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-09T16:53:18.250053" level="INFO">GET Response : url=http://54.147.59.9:3000/usuarios/9CBMi6ei7jIofbNr 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '165', 'Date': 'Tue, 09 Sep 2025 19:53:18 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Usuario Teste kEnbraMW",
    "email": "testekEnbraMW@qa.com",
    "password": "teste123",
    "administrador": "true",
    "_id": "9CBMi6ei7jIofbNr"
} 
 </msg>
<msg time="2025-09-09T16:53:18.250227" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/usuarios/${USUARIO_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:53:18.060845" elapsed="0.189415"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-09T16:53:18.251116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-09T16:53:18.250484" elapsed="0.000713"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-09T16:53:18.252959" level="INFO">${body} = {'nome': 'Usuario Teste kEnbraMW', 'email': 'testekEnbraMW@qa.com', 'password': 'teste123', 'administrador': 'true', '_id': '9CBMi6ei7jIofbNr'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-09T16:53:18.251366" elapsed="0.001635"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>nome</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-09T16:53:18.253166" elapsed="0.000193"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-09T16:53:18.253485" elapsed="0.000116"/>
</kw>
<doc>Obter usuário por ID deve retornar 200</doc>
<tag>smoke</tag>
<tag>usuarios</tag>
<status status="PASS" start="2025-09-09T16:53:18.059211" elapsed="0.194474"/>
</test>
<test id="s1-s4-t3" name="SRV-usuarios-atualizar-positivo" line="39">
<kw name="Skip If" owner="BuiltIn">
<arg>'${USUARIO_ID}' == '${EMPTY}'</arg>
<arg>Usuário não foi criado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-09T16:53:18.254287" elapsed="0.000636"/>
</kw>
<kw name="Generate Random String" owner="String">
<msg time="2025-09-09T16:53:18.255351" level="INFO">${uuid} = MVaBgafs</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-09T16:53:18.255066" elapsed="0.000320"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-09T16:53:18.255829" level="INFO">&amp;{usuario_update} = { nome=Usuario Atualizado MVaBgafs | email=atualizadoMVaBgafs@qa.com | password=nova123 | administrador=true }</msg>
<var>&amp;{usuario_update}</var>
<arg>nome=Usuario Atualizado ${uuid}</arg>
<arg>email=atualizado${uuid}@qa.com</arg>
<arg>password=nova123</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-09T16:53:18.255533" elapsed="0.000324"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:53:18.495333" level="INFO">PUT Request : url=http://54.147.59.9:3000/usuarios/9CBMi6ei7jIofbNr 
 path_url=/usuarios/9CBMi6ei7jIofbNr 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '125'} 
 body=b'{"nome": "Usuario Atualizado MVaBgafs", "email": "atualizadoMVaBgafs@qa.com", "password": "nova123", "administrador": "true"}' 
 </msg>
<msg time="2025-09-09T16:53:18.495407" level="INFO">PUT Response : url=http://54.147.59.9:3000/usuarios/9CBMi6ei7jIofbNr 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Tue, 09 Sep 2025 19:53:18 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg time="2025-09-09T16:53:18.495633" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/usuarios/${USUARIO_ID}</arg>
<arg>json=${usuario_update}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:53:18.255974" elapsed="0.239682"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-09T16:53:18.496143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-09T16:53:18.495777" elapsed="0.000408"/>
</kw>
<doc>Atualizar usuário deve retornar 200</doc>
<tag>smoke</tag>
<tag>usuarios</tag>
<status status="PASS" start="2025-09-09T16:53:18.253900" elapsed="0.242368"/>
</test>
<test id="s1-s4-t4" name="SRV-usuarios-deletar-positivo" line="54">
<kw name="Skip If" owner="BuiltIn">
<arg>'${USUARIO_ID}' == '${EMPTY}'</arg>
<arg>Usuário não foi criado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-09T16:53:18.496711" elapsed="0.000462"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:53:18.706141" level="INFO">DELETE Request : url=http://54.147.59.9:3000/usuarios/9CBMi6ei7jIofbNr 
 path_url=/usuarios/9CBMi6ei7jIofbNr 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-09T16:53:18.706314" level="INFO">DELETE Response : url=http://54.147.59.9:3000/usuarios/9CBMi6ei7jIofbNr 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Tue, 09 Sep 2025 19:53:18 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg time="2025-09-09T16:53:18.706548" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/usuarios/${USUARIO_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:53:18.497311" elapsed="0.209290"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} in [200, 204]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-09T16:53:18.706892" elapsed="0.001045"/>
</kw>
<doc>Deletar usuário deve retornar 200</doc>
<tag>smoke</tag>
<tag>usuarios</tag>
<status status="PASS" start="2025-09-09T16:53:18.496434" elapsed="0.211729"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-09-09T16:53:18.709100" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-09-09T16:53:18.708937" elapsed="0.000286"/>
</kw>
<status status="PASS" start="2025-09-09T16:53:17.672471" elapsed="1.036819"/>
</suite>
<status status="FAIL" start="2025-09-09T16:53:15.834851" elapsed="2.875701"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="1" skip="3">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">health</stat>
<stat pass="1" fail="0" skip="0">login</stat>
<stat pass="1" fail="1" skip="3">produtos</stat>
<stat pass="7" fail="1" skip="3">smoke</stat>
<stat pass="4" fail="0" skip="0">usuarios</stat>
</tag>
<suite>
<stat name="Suites" id="s1" pass="7" fail="1" skip="3">Suites</stat>
<stat name="Health" id="s1-s1" pass="1" fail="0" skip="0">Suites.Health</stat>
<stat name="Login" id="s1-s2" pass="1" fail="0" skip="0">Suites.Login</stat>
<stat name="Produtos" id="s1-s3" pass="1" fail="1" skip="3">Suites.Produtos</stat>
<stat name="Usuarios" id="s1-s4" pass="4" fail="0" skip="0">Suites.Usuarios</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
