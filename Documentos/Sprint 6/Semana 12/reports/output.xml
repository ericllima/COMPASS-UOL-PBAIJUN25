<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.13.2 on win32)" generated="2025-09-12T16:11:24.471589" rpa="false" schemaversion="5">
<suite id="s1" name="Tests" source="C:\Users\ercli\IdeaProjects\COMPASS-UOL-PBAIJUN25\Documentos\Sprint 6\Semana 12\tests">
<suite id="s1-s1" name="Suites" source="C:\Users\ercli\IdeaProjects\COMPASS-UOL-PBAIJUN25\Documentos\Sprint 6\Semana 12\tests\suites">
<suite id="s1-s1-s1" name="Carrinhos" source="C:\Users\ercli\IdeaProjects\COMPASS-UOL-PBAIJUN25\Documentos\Sprint 6\Semana 12\tests\suites\carrinhos.robot">
<kw name="Create Session" owner="RequestsLibrary" type="SETUP">
<msg time="2025-09-12T16:11:24.636826" level="INFO">Creating Session using : alias=booker, url=http://98.88.16.61:3000, headers={'Content-Type': 'application/json', 'Accept': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>booker</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${BASE_HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-09-12T16:11:24.636471" elapsed="0.000596"/>
</kw>
<test id="s1-s1-s1-t1" name="C001 - Criar carrinho com produto existente" line="15">
<kw name="Get Auth Token" owner="keywords">
<kw name="Get Valid Auth Token" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:24.638614" level="INFO">&amp;{admin_user} = { nome=QA Test | email=qatest@qa.com.br | password=qateste | administrador=true }</msg>
<var>&amp;{admin_user}</var>
<arg>nome=QA Test</arg>
<arg>email=qatest@qa.com.br</arg>
<arg>password=qateste</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:24.638395" elapsed="0.000249"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:25.186074" level="INFO">POST Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '96'} 
 body=b'{"nome": "QA Test", "email": "qatest@qa.com.br", "password": "qateste", "administrador": "true"}' 
 </msg>
<msg time="2025-09-12T16:11:25.186176" level="INFO">POST Response : url=http://98.88.16.61:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Fri, 12 Sep 2025 19:11:26 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg time="2025-09-12T16:11:25.186287" level="INFO">${resp_user} = &lt;Response [400]&gt;</msg>
<var>${resp_user}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${admin_user}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:24.638739" elapsed="0.547569"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp_user.status_code} in [201, 400]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:25.186450" elapsed="0.000445"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.187178" level="INFO">&amp;{login_data} = { email=qatest@qa.com.br | password=qateste }</msg>
<var>&amp;{login_data}</var>
<arg>email=qatest@qa.com.br</arg>
<arg>password=qateste</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:25.187003" elapsed="0.000196"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:25.395824" level="INFO">POST Request : url=http://98.88.16.61:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '52'} 
 body=b'{"email": "qatest@qa.com.br", "password": "qateste"}' 
 </msg>
<msg time="2025-09-12T16:11:25.396007" level="INFO">POST Response : url=http://98.88.16.61:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '272', 'Date': 'Fri, 12 Sep 2025 19:11:26 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyODYsImV4cCI6MTc1NzcwNDg4Nn0.iqAv3MS9gGrfEDwycXs8snHHtT9oEkct93yoqc-Cwc0"
} 
 </msg>
<msg time="2025-09-12T16:11:25.396213" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/login</arg>
<arg>json=${login_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:25.187288" elapsed="0.208964"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.397276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:25.396528" elapsed="0.000825"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:25.398226" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyODYsImV4cCI6MTc1NzcwNDg4Nn0.iqAv3MS9gGrfEDwycXs8snHHtT9oEkct93yoqc-Cwc0</msg>
<var>${token}</var>
<arg>${resp.json()}</arg>
<arg>authorization</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:25.397503" elapsed="0.000756"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-09-12T16:11:25.398342" elapsed="0.000052"/>
</return>
<msg time="2025-09-12T16:11:25.398515" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyODYsImV4cCI6MTc1NzcwNDg4Nn0.iqAv3MS9gGrfEDwycXs8snHHtT9oEkct93yoqc-Cwc0</msg>
<var>${token}</var>
<doc>Obtém token de autenticação válido usando usuário padrão</doc>
<status status="PASS" start="2025-09-12T16:11:24.638174" elapsed="0.760363"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-09-12T16:11:25.398579" elapsed="0.000025"/>
</return>
<msg time="2025-09-12T16:11:25.398708" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyODYsImV4cCI6MTc1NzcwNDg4Nn0.iqAv3MS9gGrfEDwycXs8snHHtT9oEkct93yoqc-Cwc0</msg>
<var>${token}</var>
<doc>Alias para Get Valid Auth Token (compatibilidade)</doc>
<status status="PASS" start="2025-09-12T16:11:24.637891" elapsed="0.760844"/>
</kw>
<kw name="Create Test Product" owner="keywords">
<kw name="Generate Unique Name" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:25.400379" level="INFO">${uuid} = bsJuRFrE</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:25.399863" elapsed="0.000596"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.401094" level="INFO">${name} = Produto bsJuRFrE</msg>
<var>${name}</var>
<arg>${prefix} ${uuid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:25.400938" elapsed="0.000176"/>
</kw>
<return>
<value>${name}</value>
<status status="PASS" start="2025-09-12T16:11:25.401163" elapsed="0.000028"/>
</return>
<msg time="2025-09-12T16:11:25.401274" level="INFO">${name} = Produto bsJuRFrE</msg>
<var>${name}</var>
<arg>Produto</arg>
<doc>Gera nome único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:25.399509" elapsed="0.001782"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.401582" level="INFO">&amp;{product_data} = { nome=Produto bsJuRFrE | preco=100 | descricao=Produto para teste automatizado | quantidade=50 }</msg>
<var>&amp;{product_data}</var>
<arg>nome=${name}</arg>
<arg>preco=100</arg>
<arg>descricao=Produto para teste automatizado</arg>
<arg>quantidade=50</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:25.401369" elapsed="0.000234"/>
</kw>
<kw name="Create Auth Headers" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.402084" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MD...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:25.401930" elapsed="0.000182"/>
</kw>
<return>
<value>${headers}</value>
<status status="PASS" start="2025-09-12T16:11:25.402151" elapsed="0.000024"/>
</return>
<msg time="2025-09-12T16:11:25.402261" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQ...</msg>
<var>${headers}</var>
<arg>${token}</arg>
<doc>Cria headers com autenticação</doc>
<status status="PASS" start="2025-09-12T16:11:25.401728" elapsed="0.000550"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:25.622275" level="INFO">POST Request : url=http://98.88.16.61:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyODYsImV4cCI6MTc1NzcwNDg4Nn0.iqAv3MS9gGrfEDwycXs8snHHtT9oEkct93yoqc-Cwc0', 'Content-Length': '112'} 
 body=b'{"nome": "Produto bsJuRFrE", "preco": "100", "descricao": "Produto para teste automatizado", "quantidade": "50"}' 
 </msg>
<msg time="2025-09-12T16:11:25.622384" level="INFO">POST Response : url=http://98.88.16.61:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 12 Sep 2025 19:11:26 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "dd7qQfsgUE6J8RVP"
} 
 </msg>
<msg time="2025-09-12T16:11:25.622517" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos</arg>
<arg>json=${product_data}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:25.402347" elapsed="0.220201"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.623152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:25.622697" elapsed="0.000516"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:25.623901" level="INFO">${product_id} = dd7qQfsgUE6J8RVP</msg>
<var>${product_id}</var>
<arg>${resp.json()}</arg>
<arg>_id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:25.623361" elapsed="0.000562"/>
</kw>
<return>
<value>${product_id}</value>
<status status="PASS" start="2025-09-12T16:11:25.623970" elapsed="0.000029"/>
</return>
<msg time="2025-09-12T16:11:25.624105" level="INFO">${produto_id} = dd7qQfsgUE6J8RVP</msg>
<var>${produto_id}</var>
<arg>${token}</arg>
<doc>Cria produto para testes e retorna ID</doc>
<status status="PASS" start="2025-09-12T16:11:25.399175" elapsed="0.224947"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.624570" level="INFO">&amp;{produto_carrinho} = { idProduto=dd7qQfsgUE6J8RVP | quantidade=1 }</msg>
<var>&amp;{produto_carrinho}</var>
<arg>idProduto=${produto_id}</arg>
<arg>quantidade=1</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:25.624357" elapsed="0.000234"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.624874" level="INFO">@{produtos_lista} = [ {'idProduto': 'dd7qQfsgUE6J8RVP', 'quantidade': '1'} ]</msg>
<var>@{produtos_lista}</var>
<arg>${produto_carrinho}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-09-12T16:11:25.624729" elapsed="0.000164"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.625232" level="INFO">&amp;{carrinho_data} = { produtos=[{'idProduto': 'dd7qQfsgUE6J8RVP', 'quantidade': '1'}] }</msg>
<var>&amp;{carrinho_data}</var>
<arg>produtos=${produtos_lista}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:25.625049" elapsed="0.000202"/>
</kw>
<kw name="Create Auth Headers" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.625793" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MD...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:25.625640" elapsed="0.000173"/>
</kw>
<return>
<value>${headers}</value>
<status status="PASS" start="2025-09-12T16:11:25.625851" elapsed="0.000027"/>
</return>
<msg time="2025-09-12T16:11:25.625971" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQ...</msg>
<var>${headers}</var>
<arg>${token}</arg>
<doc>Cria headers com autenticação</doc>
<status status="PASS" start="2025-09-12T16:11:25.625445" elapsed="0.000543"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:25.854843" level="INFO">POST Request : url=http://98.88.16.61:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyODYsImV4cCI6MTc1NzcwNDg4Nn0.iqAv3MS9gGrfEDwycXs8snHHtT9oEkct93yoqc-Cwc0', 'Content-Length': '68'} 
 body=b'{"produtos": [{"idProduto": "dd7qQfsgUE6J8RVP", "quantidade": "1"}]}' 
 </msg>
<msg time="2025-09-12T16:11:25.855174" level="INFO">POST Response : url=http://98.88.16.61:3000/carrinhos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 12 Sep 2025 19:11:26 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "gneeuyIpXAFwYVio"
} 
 </msg>
<msg time="2025-09-12T16:11:25.855381" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/carrinhos</arg>
<arg>json=${carrinho_data}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:25.626137" elapsed="0.229286"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.856962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:25.855915" elapsed="0.001180"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.858571" level="INFO">${body} = {'message': 'Cadastro realizado com sucesso', '_id': 'gneeuyIpXAFwYVio'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:25.857700" elapsed="0.000910"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:25.859363" elapsed="0.000244"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:25.859895" elapsed="0.000273"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.861334" level="INFO">${CARRINHO_ID} = gneeuyIpXAFwYVio</msg>
<arg>${CARRINHO_ID}</arg>
<arg>${body['_id']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-12T16:11:25.860598" elapsed="0.000810"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.861911" level="INFO">${PRODUTO_ID} = dd7qQfsgUE6J8RVP</msg>
<arg>${PRODUTO_ID}</arg>
<arg>${produto_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-12T16:11:25.861700" elapsed="0.000257"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.862542" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyODYsImV4cCI6MTc1NzcwNDg4Nn0.iqAv3MS9gGrfEDwycXs8snHHtT9oEkct93yoqc-Cwc0</msg>
<arg>${AUTH_TOKEN}</arg>
<arg>${token}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-12T16:11:25.862311" elapsed="0.000282"/>
</kw>
<doc>Criar carrinho com produto existente deve retornar 201</doc>
<tag>C001</tag>
<tag>carrinhos</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-12T16:11:24.637220" elapsed="1.225733"/>
</test>
<test id="s1-s1-s1-t2" name="C002 - Impedir produto inexistente" line="39">
<kw name="Skip If" owner="BuiltIn">
<arg>'${AUTH_TOKEN}' == '${EMPTY}'</arg>
<arg>Token não disponível</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-12T16:11:25.864605" elapsed="0.000649"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.865796" level="INFO">${id_inexistente} = 507f1f77bcf86cd799439011</msg>
<var>${id_inexistente}</var>
<arg>507f1f77bcf86cd799439011</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:25.865661" elapsed="0.000158"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.866399" level="INFO">&amp;{produto_inexistente} = { idProduto=507f1f77bcf86cd799439011 | quantidade=1 }</msg>
<var>&amp;{produto_inexistente}</var>
<arg>idProduto=${id_inexistente}</arg>
<arg>quantidade=1</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:25.866139" elapsed="0.000284"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.866882" level="INFO">@{produtos_lista} = [ {'idProduto': '507f1f77bcf86cd799439011', 'quantidade': '1'} ]</msg>
<var>@{produtos_lista}</var>
<arg>${produto_inexistente}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-09-12T16:11:25.866708" elapsed="0.000197"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.867291" level="INFO">&amp;{carrinho_data} = { produtos=[{'idProduto': '507f1f77bcf86cd799439011', 'quantidade': '1'}] }</msg>
<var>&amp;{carrinho_data}</var>
<arg>produtos=${produtos_lista}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:25.867109" elapsed="0.000201"/>
</kw>
<kw name="Create Auth Headers" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:25.868539" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MD...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:25.867940" elapsed="0.000628"/>
</kw>
<return>
<value>${headers}</value>
<status status="PASS" start="2025-09-12T16:11:25.868621" elapsed="0.000030"/>
</return>
<msg time="2025-09-12T16:11:25.868738" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQ...</msg>
<var>${headers}</var>
<arg>${AUTH_TOKEN}</arg>
<doc>Cria headers com autenticação</doc>
<status status="PASS" start="2025-09-12T16:11:25.867679" elapsed="0.001076"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:26.080783" level="INFO">POST Request : url=http://98.88.16.61:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyODYsImV4cCI6MTc1NzcwNDg4Nn0.iqAv3MS9gGrfEDwycXs8snHHtT9oEkct93yoqc-Cwc0', 'Content-Length': '76'} 
 body=b'{"produtos": [{"idProduto": "507f1f77bcf86cd799439011", "quantidade": "1"}]}' 
 </msg>
<msg time="2025-09-12T16:11:26.081167" level="INFO">POST Response : url=http://98.88.16.61:3000/carrinhos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '61', 'Date': 'Fri, 12 Sep 2025 19:11:27 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Não é permitido ter mais de 1 carrinho"
} 
 </msg>
<msg time="2025-09-12T16:11:26.081463" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/carrinhos</arg>
<arg>json=${carrinho_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:25.869106" elapsed="0.212418"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:26.082946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:26.082088" elapsed="0.000943"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:26.084335" level="INFO">${body} = {'message': 'Não é permitido ter mais de 1 carrinho'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:26.083531" elapsed="0.000847"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:26.085348" elapsed="0.000262"/>
</kw>
<doc>Carrinho com produto inexistente deve retornar 400</doc>
<tag>C002</tag>
<tag>carrinhos</tag>
<tag>negativo</tag>
<status status="PASS" start="2025-09-12T16:11:25.863881" elapsed="0.222128"/>
</test>
<test id="s1-s1-s1-t3" name="C003 - Listar carrinhos" line="59">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:26.297954" level="INFO">GET Request : url=http://98.88.16.61:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:26.298154" level="INFO">GET Response : url=http://98.88.16.61:3000/carrinhos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '977', 'Date': 'Fri, 12 Sep 2025 19:11:27 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 2,
    "carrinhos": [
        {
            "produtos": [
                {
                    "idProduto": "dd7qQfsgUE6J8RVP",
                    "quantidade": "1",
                    "precoUnitario": 100
                }
            ],
            "precoTotal": 100,
            "quantidadeTotal": "01",
            "idUsuario": "iKVm2yXWmtvBFcPR",
            "_id": "gneeuyIpXAFwYVio"
        },
        {
            "produtos": [
                {
                    "idProduto": "BeeJh5lz3k6kSIzA",
                    "quantidade": 2,
                    "precoUnitario": 470
                },
                {
                    "idProduto": "K6leHdftCeOJj8BJ",
                    "quantidade": 1,
                    "precoUnitario": 5240
                }
            ],
            "precoTotal": 6180,
            "quantidadeTotal": 3,
            "idUsuario": "0uxuPY0cbmQhpEz1",
            "_id": "qbMqntef4iTOwWfg"
        }
    ]
} 
 </msg>
<msg time="2025-09-12T16:11:26.298486" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/carrinhos</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:26.087814" elapsed="0.210767"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:26.299939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:26.299177" elapsed="0.000876"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:26.301394" level="INFO">${body} = {'quantidade': 2, 'carrinhos': [{'produtos': [{'idProduto': 'dd7qQfsgUE6J8RVP', 'quantidade': '1', 'precoUnitario': 100}], 'precoTotal': 100, 'quantidadeTotal': '01', 'idUsuario': 'iKVm2yXWmtvBFcPR', ...</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:26.300624" elapsed="0.000809"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>carrinhos</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:26.301845" elapsed="0.000181"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>quantidade</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:26.302349" elapsed="0.000171"/>
</kw>
<doc>Listar carrinhos deve retornar 200 e lista</doc>
<tag>C003</tag>
<tag>carrinhos</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-12T16:11:26.087179" elapsed="0.215700"/>
</test>
<test id="s1-s1-s1-t4" name="C004 - Buscar carrinho por ID" line="68">
<kw name="Skip If" owner="BuiltIn">
<arg>'${CARRINHO_ID}' == '${EMPTY}'</arg>
<arg>Carrinho não foi criado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-12T16:11:26.304423" elapsed="0.000682"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:26.522933" level="INFO">GET Request : url=http://98.88.16.61:3000/carrinhos/gneeuyIpXAFwYVio 
 path_url=/carrinhos/gneeuyIpXAFwYVio 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:26.523078" level="INFO">GET Response : url=http://98.88.16.61:3000/carrinhos/gneeuyIpXAFwYVio 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '276', 'Date': 'Fri, 12 Sep 2025 19:11:27 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "produtos": [
        {
            "idProduto": "dd7qQfsgUE6J8RVP",
            "quantidade": "1",
            "precoUnitario": 100
        }
    ],
    "precoTotal": 100,
    "quantidadeTotal": "01",
    "idUsuario": "iKVm2yXWmtvBFcPR",
    "_id": "gneeuyIpXAFwYVio"
} 
 </msg>
<msg time="2025-09-12T16:11:26.523268" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/carrinhos/${CARRINHO_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:26.305439" elapsed="0.217934"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:26.525015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:26.524221" elapsed="0.000875"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:26.526312" level="INFO">${body} = {'produtos': [{'idProduto': 'dd7qQfsgUE6J8RVP', 'quantidade': '1', 'precoUnitario': 100}], 'precoTotal': 100, 'quantidadeTotal': '01', 'idUsuario': 'iKVm2yXWmtvBFcPR', '_id': 'gneeuyIpXAFwYVio'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:26.525638" elapsed="0.000711"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>produtos</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:26.526940" elapsed="0.000467"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>precoTotal</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:26.528049" elapsed="0.000299"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>quantidadeTotal</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:26.528737" elapsed="0.000253"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>idUsuario</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:26.529300" elapsed="0.000179"/>
</kw>
<doc>Buscar carrinho por ID deve retornar 200</doc>
<tag>C004</tag>
<tag>carrinhos</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-12T16:11:26.303838" elapsed="0.225996"/>
</test>
<test id="s1-s1-s1-t5" name="C005 - Remover carrinho e restaurar estoque" line="81">
<kw name="Skip If" owner="BuiltIn">
<arg>'${CARRINHO_ID}' == '${EMPTY}'</arg>
<arg>Carrinho não foi criado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-12T16:11:26.531675" elapsed="0.001180"/>
</kw>
<kw name="Skip If" owner="BuiltIn">
<arg>'${AUTH_TOKEN}' == '${EMPTY}'</arg>
<arg>Token não disponível</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-12T16:11:26.533369" elapsed="0.000574"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:26.756366" level="INFO">GET Request : url=http://98.88.16.61:3000/produtos/dd7qQfsgUE6J8RVP 
 path_url=/produtos/dd7qQfsgUE6J8RVP 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:26.756589" level="INFO">GET Response : url=http://98.88.16.61:3000/produtos/dd7qQfsgUE6J8RVP 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '157', 'Date': 'Fri, 12 Sep 2025 19:11:27 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Produto bsJuRFrE",
    "preco": 100,
    "descricao": "Produto para teste automatizado",
    "quantidade": 49,
    "_id": "dd7qQfsgUE6J8RVP"
} 
 </msg>
<msg time="2025-09-12T16:11:26.756881" level="INFO">${resp_produto_antes} = &lt;Response [200]&gt;</msg>
<var>${resp_produto_antes}</var>
<arg>booker</arg>
<arg>/produtos/${PRODUTO_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:26.534402" elapsed="0.222539"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:26.758664" level="INFO">${estoque_antes} = 49</msg>
<var>${estoque_antes}</var>
<arg>${resp_produto_antes.json()}</arg>
<arg>quantidade</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:26.757507" elapsed="0.001206"/>
</kw>
<kw name="Create Auth Headers" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:26.760095" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MD...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:26.759677" elapsed="0.000466"/>
</kw>
<return>
<value>${headers}</value>
<status status="PASS" start="2025-09-12T16:11:26.760235" elapsed="0.000057"/>
</return>
<msg time="2025-09-12T16:11:26.760493" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQ...</msg>
<var>${headers}</var>
<arg>${AUTH_TOKEN}</arg>
<doc>Cria headers com autenticação</doc>
<status status="PASS" start="2025-09-12T16:11:26.759196" elapsed="0.001338"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:26.963297" level="INFO">DELETE Request : url=http://98.88.16.61:3000/carrinhos/concluir-compra 
 path_url=/carrinhos/concluir-compra 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyODYsImV4cCI6MTc1NzcwNDg4Nn0.iqAv3MS9gGrfEDwycXs8snHHtT9oEkct93yoqc-Cwc0', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:26.963442" level="INFO">DELETE Response : url=http://98.88.16.61:3000/carrinhos/concluir-compra 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 12 Sep 2025 19:11:28 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg time="2025-09-12T16:11:26.963606" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/carrinhos/concluir-compra</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:26.760926" elapsed="0.202710"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} in [200, 204]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:26.963887" elapsed="0.000449"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:27.168887" level="INFO">DELETE Request : url=http://98.88.16.61:3000/carrinhos/cancelar-compra 
 path_url=/carrinhos/cancelar-compra 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyODYsImV4cCI6MTc1NzcwNDg4Nn0.iqAv3MS9gGrfEDwycXs8snHHtT9oEkct93yoqc-Cwc0', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:27.169083" level="INFO">DELETE Response : url=http://98.88.16.61:3000/carrinhos/cancelar-compra 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '68', 'Date': 'Fri, 12 Sep 2025 19:11:28 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Não foi encontrado carrinho para esse usuário"
} 
 </msg>
<msg time="2025-09-12T16:11:27.169251" level="INFO">${resp_cancelar} = &lt;Response [200]&gt;</msg>
<var>${resp_cancelar}</var>
<arg>booker</arg>
<arg>/carrinhos/cancelar-compra</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:26.964533" elapsed="0.204747"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp_cancelar.status_code} in [200, 400]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:27.169705" elapsed="0.000833"/>
</kw>
<doc>Exclusão do carrinho deve restaurar estoque dos produtos</doc>
<tag>C005</tag>
<tag>carrinhos</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-12T16:11:26.530738" elapsed="0.640240"/>
</test>
<test id="s1-s1-s1-t6" name="C006 - Acesso sem autenticação" line="101">
<kw name="Generate Unique Name" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:27.173181" level="INFO">${uuid} = GQo8TdFi</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:27.172962" elapsed="0.000247"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:27.173439" level="INFO">${name} = Produto Carrinho GQo8TdFi</msg>
<var>${name}</var>
<arg>${prefix} ${uuid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:27.173301" elapsed="0.000164"/>
</kw>
<return>
<value>${name}</value>
<status status="PASS" start="2025-09-12T16:11:27.173521" elapsed="0.000047"/>
</return>
<msg time="2025-09-12T16:11:27.173672" level="INFO">${nome} = Produto Carrinho GQo8TdFi</msg>
<var>${nome}</var>
<arg>Produto Carrinho</arg>
<doc>Gera nome único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:27.172622" elapsed="0.001069"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:27.174396" level="INFO">&amp;{produto_data} = { idProduto=507f1f77bcf86cd799439011 | quantidade=1 }</msg>
<var>&amp;{produto_data}</var>
<arg>idProduto=507f1f77bcf86cd799439011</arg>
<arg>quantidade=1</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:27.174001" elapsed="0.000436"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-09-12T16:11:27.175172" level="INFO">@{produtos_lista} = [ {'idProduto': '507f1f77bcf86cd799439011', 'quantidade': '1'} ]</msg>
<var>@{produtos_lista}</var>
<arg>${produto_data}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-09-12T16:11:27.174932" elapsed="0.000268"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:27.175825" level="INFO">&amp;{carrinho_data} = { produtos=[{'idProduto': '507f1f77bcf86cd799439011', 'quantidade': '1'}] }</msg>
<var>&amp;{carrinho_data}</var>
<arg>produtos=${produtos_lista}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:27.175593" elapsed="0.000260"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:27.387234" level="INFO">POST Request : url=http://98.88.16.61:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '76'} 
 body=b'{"produtos": [{"idProduto": "507f1f77bcf86cd799439011", "quantidade": "1"}]}' 
 </msg>
<msg time="2025-09-12T16:11:27.387315" level="INFO">POST Response : url=http://98.88.16.61:3000/carrinhos 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '103', 'Date': 'Fri, 12 Sep 2025 19:11:28 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg time="2025-09-12T16:11:27.387433" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/carrinhos</arg>
<arg>json=${carrinho_data}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:27.176143" elapsed="0.211316"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:27.388418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:27.387916" elapsed="0.000546"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:27.389148" level="INFO">${body} = {'message': 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:27.388736" elapsed="0.000433"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:27.389584" elapsed="0.000285"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${body['message']}</arg>
<arg>Token de acesso ausente</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-09-12T16:11:27.390046" elapsed="0.000430"/>
</kw>
<doc>Operações de carrinho sem token devem retornar 401</doc>
<tag>C006</tag>
<tag>carrinhos</tag>
<tag>negativo</tag>
<status status="PASS" start="2025-09-12T16:11:27.171864" elapsed="0.219060"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-09-12T16:11:27.392286" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-09-12T16:11:27.392189" elapsed="0.000162"/>
</kw>
<status status="PASS" start="2025-09-12T16:11:24.505283" elapsed="2.887095"/>
</suite>
<suite id="s1-s1-s2" name="Data Driven" source="C:\Users\ercli\IdeaProjects\COMPASS-UOL-PBAIJUN25\Documentos\Sprint 6\Semana 12\tests\suites\data_driven.robot">
<kw name="Create Session" owner="RequestsLibrary" type="SETUP">
<msg time="2025-09-12T16:11:27.399629" level="INFO">Creating Session using : alias=booker, url=http://98.88.16.61:3000, headers={'Content-Type': 'application/json', 'Accept': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>booker</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${BASE_HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-09-12T16:11:27.399382" elapsed="0.000406"/>
</kw>
<test id="s1-s1-s2-t1" name="DD001 - Criar usuários com dados parametrizados" line="11">
<for flavor="IN">
<iter>
<kw name="Create User With Template">
<kw name="Split String" owner="String">
<msg time="2025-09-12T16:11:27.401264" level="INFO">@{user_parts} = [ João Silva | joao@teste.com | senha123 | false ]</msg>
<var>@{user_parts}</var>
<arg>${user_data_string}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="PASS" start="2025-09-12T16:11:27.401107" elapsed="0.000184"/>
</kw>
<kw name="Generate Unique Email" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:27.401752" level="INFO">${uuid} = rNmuhjnE</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:27.401586" elapsed="0.000185"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:27.401998" level="INFO">${email} = testerNmuhjnE@qa.com</msg>
<var>${email}</var>
<arg>teste${uuid}@qa.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:27.401869" elapsed="0.000152"/>
</kw>
<return>
<value>${email}</value>
<status status="PASS" start="2025-09-12T16:11:27.402059" elapsed="0.000031"/>
</return>
<msg time="2025-09-12T16:11:27.402186" level="INFO">${email} = testerNmuhjnE@qa.com</msg>
<var>${email}</var>
<doc>Gera email único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:27.401429" elapsed="0.000774"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:27.402573" level="INFO">&amp;{user_data} = { nome=João Silva | email=testerNmuhjnE@qa.com | password=senha123 | administrador=false }</msg>
<var>&amp;{user_data}</var>
<arg>nome=${user_parts}[0]</arg>
<arg>email=${email}</arg>
<arg>password=${user_parts}[2]</arg>
<arg>administrador=${user_parts}[3]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:27.402283" elapsed="0.000313"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:27.808488" level="INFO">POST Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "Jo\\u00e3o Silva", "email": "testerNmuhjnE@qa.com", "password": "senha123", "administrador": "false"}' 
 </msg>
<msg time="2025-09-12T16:11:27.808605" level="INFO">POST Response : url=http://98.88.16.61:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 12 Sep 2025 19:11:28 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "Nrm9njDm6npIKOKS"
} 
 </msg>
<msg time="2025-09-12T16:11:27.808763" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${user_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:27.402679" elapsed="0.406112"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:27.810417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:27.808987" elapsed="0.001516"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:27.811376" level="INFO">${body} = {'message': 'Cadastro realizado com sucesso', '_id': 'Nrm9njDm6npIKOKS'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:27.810694" elapsed="0.000715"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:27.811536" elapsed="0.000182"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:27.811854" elapsed="0.000139"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:27.812787" level="INFO">${user_id} = Nrm9njDm6npIKOKS</msg>
<var>${user_id}</var>
<arg>${resp.json()}</arg>
<arg>_id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:27.812155" elapsed="0.000669"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:28.095318" level="INFO">DELETE Request : url=http://98.88.16.61:3000/usuarios/Nrm9njDm6npIKOKS 
 path_url=/usuarios/Nrm9njDm6npIKOKS 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:28.095452" level="INFO">DELETE Response : url=http://98.88.16.61:3000/usuarios/Nrm9njDm6npIKOKS 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 12 Sep 2025 19:11:29 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<arg>booker</arg>
<arg>/usuarios/${user_id}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:27.812979" elapsed="0.282570"/>
</kw>
<arg>${user_data}</arg>
<status status="PASS" start="2025-09-12T16:11:27.400824" elapsed="0.694841"/>
</kw>
<var name="${user_data}">João Silva|joao@teste.com|senha123|false</var>
<status status="PASS" start="2025-09-12T16:11:27.400657" elapsed="0.695048"/>
</iter>
<iter>
<kw name="Create User With Template">
<kw name="Split String" owner="String">
<msg time="2025-09-12T16:11:28.096833" level="INFO">@{user_parts} = [ Maria Santos | maria@teste.com | senha456 | true ]</msg>
<var>@{user_parts}</var>
<arg>${user_data_string}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="PASS" start="2025-09-12T16:11:28.096586" elapsed="0.000287"/>
</kw>
<kw name="Generate Unique Email" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:28.097630" level="INFO">${uuid} = aUxotPgx</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:28.097366" elapsed="0.000295"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:28.097996" level="INFO">${email} = testeaUxotPgx@qa.com</msg>
<var>${email}</var>
<arg>teste${uuid}@qa.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:28.097800" elapsed="0.000322"/>
</kw>
<return>
<value>${email}</value>
<status status="PASS" start="2025-09-12T16:11:28.098189" elapsed="0.000078"/>
</return>
<msg time="2025-09-12T16:11:28.098424" level="INFO">${email} = testeaUxotPgx@qa.com</msg>
<var>${email}</var>
<doc>Gera email único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:28.097081" elapsed="0.001371"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:28.099046" level="INFO">&amp;{user_data} = { nome=Maria Santos | email=testeaUxotPgx@qa.com | password=senha456 | administrador=true }</msg>
<var>&amp;{user_data}</var>
<arg>nome=${user_parts}[0]</arg>
<arg>email=${email}</arg>
<arg>password=${user_parts}[2]</arg>
<arg>administrador=${user_parts}[3]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:28.098620" elapsed="0.000460"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:28.305499" level="INFO">POST Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '106'} 
 body=b'{"nome": "Maria Santos", "email": "testeaUxotPgx@qa.com", "password": "senha456", "administrador": "true"}' 
 </msg>
<msg time="2025-09-12T16:11:28.305626" level="INFO">POST Response : url=http://98.88.16.61:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 12 Sep 2025 19:11:29 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "xdTQC3fd9ZXkRute"
} 
 </msg>
<msg time="2025-09-12T16:11:28.305820" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${user_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:28.099261" elapsed="0.206599"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:28.306799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:28.306071" elapsed="0.000817"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:28.307839" level="INFO">${body} = {'message': 'Cadastro realizado com sucesso', '_id': 'xdTQC3fd9ZXkRute'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:28.307081" elapsed="0.000804"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:28.308120" elapsed="0.000229"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:28.308491" elapsed="0.000137"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:28.309308" level="INFO">${user_id} = xdTQC3fd9ZXkRute</msg>
<var>${user_id}</var>
<arg>${resp.json()}</arg>
<arg>_id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:28.308741" elapsed="0.000608"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:28.507503" level="INFO">DELETE Request : url=http://98.88.16.61:3000/usuarios/xdTQC3fd9ZXkRute 
 path_url=/usuarios/xdTQC3fd9ZXkRute 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:28.507652" level="INFO">DELETE Response : url=http://98.88.16.61:3000/usuarios/xdTQC3fd9ZXkRute 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 12 Sep 2025 19:11:29 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<arg>booker</arg>
<arg>/usuarios/${user_id}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:28.309515" elapsed="0.198235"/>
</kw>
<arg>${user_data}</arg>
<status status="PASS" start="2025-09-12T16:11:28.096156" elapsed="0.411698"/>
</kw>
<var name="${user_data}">Maria Santos|maria@teste.com|senha456|true</var>
<status status="PASS" start="2025-09-12T16:11:28.095902" elapsed="0.411988"/>
</iter>
<iter>
<kw name="Create User With Template">
<kw name="Split String" owner="String">
<msg time="2025-09-12T16:11:28.508966" level="INFO">@{user_parts} = [ Pedro Costa | pedro@teste.com | senha789 | false ]</msg>
<var>@{user_parts}</var>
<arg>${user_data_string}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="PASS" start="2025-09-12T16:11:28.508692" elapsed="0.000335"/>
</kw>
<kw name="Generate Unique Email" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:28.510671" level="INFO">${uuid} = fgVODxJn</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:28.509855" elapsed="0.000914"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:28.511443" level="INFO">${email} = testefgVODxJn@qa.com</msg>
<var>${email}</var>
<arg>teste${uuid}@qa.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:28.511072" elapsed="0.000431"/>
</kw>
<return>
<value>${email}</value>
<status status="PASS" start="2025-09-12T16:11:28.511701" elapsed="0.000137"/>
</return>
<msg time="2025-09-12T16:11:28.512272" level="INFO">${email} = testefgVODxJn@qa.com</msg>
<var>${email}</var>
<doc>Gera email único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:28.509314" elapsed="0.003027"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:28.514901" level="INFO">&amp;{user_data} = { nome=Pedro Costa | email=testefgVODxJn@qa.com | password=senha789 | administrador=false }</msg>
<var>&amp;{user_data}</var>
<arg>nome=${user_parts}[0]</arg>
<arg>email=${email}</arg>
<arg>password=${user_parts}[2]</arg>
<arg>administrador=${user_parts}[3]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:28.512847" elapsed="0.002248"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:28.725817" level="INFO">POST Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '106'} 
 body=b'{"nome": "Pedro Costa", "email": "testefgVODxJn@qa.com", "password": "senha789", "administrador": "false"}' 
 </msg>
<msg time="2025-09-12T16:11:28.725980" level="INFO">POST Response : url=http://98.88.16.61:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 12 Sep 2025 19:11:29 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "dXPx6wTD4AK7yma8"
} 
 </msg>
<msg time="2025-09-12T16:11:28.726227" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${user_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:28.515845" elapsed="0.210433"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:28.727546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:28.726547" elapsed="0.001104"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:28.728649" level="INFO">${body} = {'message': 'Cadastro realizado com sucesso', '_id': 'dXPx6wTD4AK7yma8'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:28.727824" elapsed="0.000869"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:28.728860" elapsed="0.000227"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:28.729285" elapsed="0.000187"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:28.730368" level="INFO">${user_id} = dXPx6wTD4AK7yma8</msg>
<var>${user_id}</var>
<arg>${resp.json()}</arg>
<arg>_id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:28.729612" elapsed="0.000797"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:28.932326" level="INFO">DELETE Request : url=http://98.88.16.61:3000/usuarios/dXPx6wTD4AK7yma8 
 path_url=/usuarios/dXPx6wTD4AK7yma8 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:28.932737" level="INFO">DELETE Response : url=http://98.88.16.61:3000/usuarios/dXPx6wTD4AK7yma8 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 12 Sep 2025 19:11:30 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<arg>booker</arg>
<arg>/usuarios/${user_id}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:28.730571" elapsed="0.202655"/>
</kw>
<arg>${user_data}</arg>
<status status="PASS" start="2025-09-12T16:11:28.508281" elapsed="0.425382"/>
</kw>
<var name="${user_data}">Pedro Costa|pedro@teste.com|senha789|false</var>
<status status="PASS" start="2025-09-12T16:11:28.508057" elapsed="0.425712"/>
</iter>
<var>${user_data}</var>
<value>@{USUARIOS_VALIDOS}</value>
<status status="PASS" start="2025-09-12T16:11:27.400520" elapsed="1.533328"/>
</for>
<doc>Testa criação de usuários usando dados parametrizados</doc>
<tag>data-driven</tag>
<tag>DD001</tag>
<tag>usuarios</tag>
<status status="PASS" start="2025-09-12T16:11:27.399967" elapsed="1.534506"/>
</test>
<test id="s1-s1-s2-t2" name="DD002 - Criar produtos com dados parametrizados" line="19">
<for flavor="IN">
<iter>
<kw name="Create Product With Template">
<kw name="Get Valid Auth Token" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:28.937321" level="INFO">&amp;{admin_user} = { nome=QA Test | email=qatest@qa.com.br | password=qateste | administrador=true }</msg>
<var>&amp;{admin_user}</var>
<arg>nome=QA Test</arg>
<arg>email=qatest@qa.com.br</arg>
<arg>password=qateste</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:28.937118" elapsed="0.000235"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:29.137312" level="INFO">POST Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '96'} 
 body=b'{"nome": "QA Test", "email": "qatest@qa.com.br", "password": "qateste", "administrador": "true"}' 
 </msg>
<msg time="2025-09-12T16:11:29.137385" level="INFO">POST Response : url=http://98.88.16.61:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Fri, 12 Sep 2025 19:11:30 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg time="2025-09-12T16:11:29.137506" level="INFO">${resp_user} = &lt;Response [400]&gt;</msg>
<var>${resp_user}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${admin_user}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:28.937446" elapsed="0.200083"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp_user.status_code} in [201, 400]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:29.137652" elapsed="0.000425"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:29.138356" level="INFO">&amp;{login_data} = { email=qatest@qa.com.br | password=qateste }</msg>
<var>&amp;{login_data}</var>
<arg>email=qatest@qa.com.br</arg>
<arg>password=qateste</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:29.138194" elapsed="0.000183"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:29.347763" level="INFO">POST Request : url=http://98.88.16.61:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '52'} 
 body=b'{"email": "qatest@qa.com.br", "password": "qateste"}' 
 </msg>
<msg time="2025-09-12T16:11:29.348038" level="INFO">POST Response : url=http://98.88.16.61:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '272', 'Date': 'Fri, 12 Sep 2025 19:11:30 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTAsImV4cCI6MTc1NzcwNDg5MH0.USHeCogkwLXSjd0sZ3FL5tv-Afb_wRxABspR9ThUPuk"
} 
 </msg>
<msg time="2025-09-12T16:11:29.348212" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/login</arg>
<arg>json=${login_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:29.138462" elapsed="0.209782"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:29.349289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:29.348465" elapsed="0.000905"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:29.350318" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTAsImV4cCI6MTc1NzcwNDg5MH0.USHeCogkwLXSjd0sZ3FL5tv-Afb_wRxABspR9ThUPuk</msg>
<var>${token}</var>
<arg>${resp.json()}</arg>
<arg>authorization</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:29.349546" elapsed="0.000820"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-09-12T16:11:29.350459" elapsed="0.000061"/>
</return>
<msg time="2025-09-12T16:11:29.350693" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTAsImV4cCI6MTc1NzcwNDg5MH0.USHeCogkwLXSjd0sZ3FL5tv-Afb_wRxABspR9ThUPuk</msg>
<var>${token}</var>
<doc>Obtém token de autenticação válido usando usuário padrão</doc>
<status status="PASS" start="2025-09-12T16:11:28.936951" elapsed="0.413776"/>
</kw>
<kw name="Split String" owner="String">
<msg time="2025-09-12T16:11:29.351126" level="INFO">@{product_parts} = [ Notebook Dell | 2500 | Notebook para trabalho | 5 ]</msg>
<var>@{product_parts}</var>
<arg>${product_data_string}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="PASS" start="2025-09-12T16:11:29.350890" elapsed="0.000275"/>
</kw>
<kw name="Generate Unique Name" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:29.352100" level="INFO">${uuid} = 2TF0q15N</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:29.351820" elapsed="0.000314"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:29.352456" level="INFO">${name} = Notebook Dell 2TF0q15N</msg>
<var>${name}</var>
<arg>${prefix} ${uuid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:29.352263" elapsed="0.000220"/>
</kw>
<return>
<value>${name}</value>
<status status="PASS" start="2025-09-12T16:11:29.352537" elapsed="0.000045"/>
</return>
<msg time="2025-09-12T16:11:29.352712" level="INFO">${nome} = Notebook Dell 2TF0q15N</msg>
<var>${nome}</var>
<arg>${product_parts}[0]</arg>
<doc>Gera nome único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:29.351409" elapsed="0.001341"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:29.353313" level="INFO">&amp;{product_data} = { nome=Notebook Dell 2TF0q15N | preco=2500 | descricao=Notebook para trabalho | quantidade=5 }</msg>
<var>&amp;{product_data}</var>
<arg>nome=${nome}</arg>
<arg>preco=${product_parts}[1]</arg>
<arg>descricao=${product_parts}[2]</arg>
<arg>quantidade=${product_parts}[3]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:29.352888" elapsed="0.000455"/>
</kw>
<kw name="Create Auth Headers" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:29.354176" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MD...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:29.353884" elapsed="0.000328"/>
</kw>
<return>
<value>${headers}</value>
<status status="PASS" start="2025-09-12T16:11:29.354283" elapsed="0.000047"/>
</return>
<msg time="2025-09-12T16:11:29.354479" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQ...</msg>
<var>${headers}</var>
<arg>${token}</arg>
<doc>Cria headers com autenticação</doc>
<status status="PASS" start="2025-09-12T16:11:29.353552" elapsed="0.000956"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:29.557888" level="INFO">POST Request : url=http://98.88.16.61:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTAsImV4cCI6MTc1NzcwNDg5MH0.USHeCogkwLXSjd0sZ3FL5tv-Afb_wRxABspR9ThUPuk', 'Content-Length': '109'} 
 body=b'{"nome": "Notebook Dell 2TF0q15N", "preco": "2500", "descricao": "Notebook para trabalho", "quantidade": "5"}' 
 </msg>
<msg time="2025-09-12T16:11:29.558024" level="INFO">POST Response : url=http://98.88.16.61:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 12 Sep 2025 19:11:30 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "YACK84QC80txMXCV"
} 
 </msg>
<msg time="2025-09-12T16:11:29.558190" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos</arg>
<arg>json=${product_data}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:29.354801" elapsed="0.203417"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:29.559437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:29.558536" elapsed="0.001001"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:29.560640" level="INFO">${body} = {'message': 'Cadastro realizado com sucesso', '_id': 'YACK84QC80txMXCV'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:29.559780" elapsed="0.000891"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:29.560826" elapsed="0.000150"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:29.561074" elapsed="0.000124"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:29.561860" level="INFO">${product_id} = YACK84QC80txMXCV</msg>
<var>${product_id}</var>
<arg>${resp.json()}</arg>
<arg>_id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:29.561312" elapsed="0.000572"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:29.769019" level="INFO">DELETE Request : url=http://98.88.16.61:3000/produtos/YACK84QC80txMXCV 
 path_url=/produtos/YACK84QC80txMXCV 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTAsImV4cCI6MTc1NzcwNDg5MH0.USHeCogkwLXSjd0sZ3FL5tv-Afb_wRxABspR9ThUPuk', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:29.769230" level="INFO">DELETE Response : url=http://98.88.16.61:3000/produtos/YACK84QC80txMXCV 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 12 Sep 2025 19:11:30 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<arg>booker</arg>
<arg>/produtos/${product_id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:29.561982" elapsed="0.207396"/>
</kw>
<arg>${product_data}</arg>
<status status="PASS" start="2025-09-12T16:11:28.936645" elapsed="0.832952"/>
</kw>
<var name="${product_data}">Notebook Dell|2500|Notebook para trabalho|5</var>
<status status="PASS" start="2025-09-12T16:11:28.936462" elapsed="0.833235"/>
</iter>
<iter>
<kw name="Create Product With Template">
<kw name="Get Valid Auth Token" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:29.772806" level="INFO">&amp;{admin_user} = { nome=QA Test | email=qatest@qa.com.br | password=qateste | administrador=true }</msg>
<var>&amp;{admin_user}</var>
<arg>nome=QA Test</arg>
<arg>email=qatest@qa.com.br</arg>
<arg>password=qateste</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:29.772127" elapsed="0.000778"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:29.976837" level="INFO">POST Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '96'} 
 body=b'{"nome": "QA Test", "email": "qatest@qa.com.br", "password": "qateste", "administrador": "true"}' 
 </msg>
<msg time="2025-09-12T16:11:29.977005" level="INFO">POST Response : url=http://98.88.16.61:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Fri, 12 Sep 2025 19:11:31 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg time="2025-09-12T16:11:29.977297" level="INFO">${resp_user} = &lt;Response [400]&gt;</msg>
<var>${resp_user}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${admin_user}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:29.773278" elapsed="0.204082"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp_user.status_code} in [201, 400]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:29.977711" elapsed="0.001196"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:29.979583" level="INFO">&amp;{login_data} = { email=qatest@qa.com.br | password=qateste }</msg>
<var>&amp;{login_data}</var>
<arg>email=qatest@qa.com.br</arg>
<arg>password=qateste</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:29.979182" elapsed="0.000473"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:30.215321" level="INFO">POST Request : url=http://98.88.16.61:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '52'} 
 body=b'{"email": "qatest@qa.com.br", "password": "qateste"}' 
 </msg>
<msg time="2025-09-12T16:11:30.215410" level="INFO">POST Response : url=http://98.88.16.61:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '272', 'Date': 'Fri, 12 Sep 2025 19:11:31 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTEsImV4cCI6MTc1NzcwNDg5MX0.B1f2Rox6opN5lTlJIcld0YlecGqFZJVqcRNKMtkL-KU"
} 
 </msg>
<msg time="2025-09-12T16:11:30.215518" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/login</arg>
<arg>json=${login_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:29.979917" elapsed="0.235620"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:30.216147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:30.215660" elapsed="0.000534"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:30.216852" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTEsImV4cCI6MTc1NzcwNDg5MX0.B1f2Rox6opN5lTlJIcld0YlecGqFZJVqcRNKMtkL-KU</msg>
<var>${token}</var>
<arg>${resp.json()}</arg>
<arg>authorization</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:30.216294" elapsed="0.000604"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-09-12T16:11:30.216961" elapsed="0.000035"/>
</return>
<msg time="2025-09-12T16:11:30.217118" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTEsImV4cCI6MTc1NzcwNDg5MX0.B1f2Rox6opN5lTlJIcld0YlecGqFZJVqcRNKMtkL-KU</msg>
<var>${token}</var>
<doc>Obtém token de autenticação válido usando usuário padrão</doc>
<status status="PASS" start="2025-09-12T16:11:29.771445" elapsed="0.445692"/>
</kw>
<kw name="Split String" owner="String">
<msg time="2025-09-12T16:11:30.217441" level="INFO">@{product_parts} = [ Mouse Logitech | 50 | Mouse sem fio | 20 ]</msg>
<var>@{product_parts}</var>
<arg>${product_data_string}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="PASS" start="2025-09-12T16:11:30.217238" elapsed="0.000225"/>
</kw>
<kw name="Generate Unique Name" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:30.218563" level="INFO">${uuid} = tg3KvVEu</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:30.217930" elapsed="0.000666"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:30.218859" level="INFO">${name} = Mouse Logitech tg3KvVEu</msg>
<var>${name}</var>
<arg>${prefix} ${uuid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:30.218724" elapsed="0.000155"/>
</kw>
<return>
<value>${name}</value>
<status status="PASS" start="2025-09-12T16:11:30.218915" elapsed="0.000025"/>
</return>
<msg time="2025-09-12T16:11:30.219031" level="INFO">${nome} = Mouse Logitech tg3KvVEu</msg>
<var>${nome}</var>
<arg>${product_parts}[0]</arg>
<doc>Gera nome único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:30.217686" elapsed="0.001362"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:30.219397" level="INFO">&amp;{product_data} = { nome=Mouse Logitech tg3KvVEu | preco=50 | descricao=Mouse sem fio | quantidade=20 }</msg>
<var>&amp;{product_data}</var>
<arg>nome=${nome}</arg>
<arg>preco=${product_parts}[1]</arg>
<arg>descricao=${product_parts}[2]</arg>
<arg>quantidade=${product_parts}[3]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:30.219128" elapsed="0.000288"/>
</kw>
<kw name="Create Auth Headers" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:30.219992" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MD...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:30.219812" elapsed="0.000203"/>
</kw>
<return>
<value>${headers}</value>
<status status="PASS" start="2025-09-12T16:11:30.220057" elapsed="0.000025"/>
</return>
<msg time="2025-09-12T16:11:30.220166" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQ...</msg>
<var>${headers}</var>
<arg>${token}</arg>
<doc>Cria headers com autenticação</doc>
<status status="PASS" start="2025-09-12T16:11:30.219542" elapsed="0.000641"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:30.455608" level="INFO">POST Request : url=http://98.88.16.61:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTEsImV4cCI6MTc1NzcwNDg5MX0.B1f2Rox6opN5lTlJIcld0YlecGqFZJVqcRNKMtkL-KU', 'Content-Length': '100'} 
 body=b'{"nome": "Mouse Logitech tg3KvVEu", "preco": "50", "descricao": "Mouse sem fio", "quantidade": "20"}' 
 </msg>
<msg time="2025-09-12T16:11:30.455763" level="INFO">POST Response : url=http://98.88.16.61:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 12 Sep 2025 19:11:31 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "A97sHzBfWE8Nh1FM"
} 
 </msg>
<msg time="2025-09-12T16:11:30.455987" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos</arg>
<arg>json=${product_data}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:30.220254" elapsed="0.235788"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:30.457285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:30.456332" elapsed="0.001037"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:30.458421" level="INFO">${body} = {'message': 'Cadastro realizado com sucesso', '_id': 'A97sHzBfWE8Nh1FM'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:30.457547" elapsed="0.000920"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:30.458622" elapsed="0.000188"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:30.458924" elapsed="0.000136"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:30.459907" level="INFO">${product_id} = A97sHzBfWE8Nh1FM</msg>
<var>${product_id}</var>
<arg>${resp.json()}</arg>
<arg>_id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:30.459163" elapsed="0.000794"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:30.659876" level="INFO">DELETE Request : url=http://98.88.16.61:3000/produtos/A97sHzBfWE8Nh1FM 
 path_url=/produtos/A97sHzBfWE8Nh1FM 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTEsImV4cCI6MTc1NzcwNDg5MX0.B1f2Rox6opN5lTlJIcld0YlecGqFZJVqcRNKMtkL-KU', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:30.660002" level="INFO">DELETE Response : url=http://98.88.16.61:3000/produtos/A97sHzBfWE8Nh1FM 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 12 Sep 2025 19:11:31 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<arg>booker</arg>
<arg>/produtos/${product_id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:30.460488" elapsed="0.199588"/>
</kw>
<arg>${product_data}</arg>
<status status="PASS" start="2025-09-12T16:11:29.770481" elapsed="0.889676"/>
</kw>
<var name="${product_data}">Mouse Logitech|50|Mouse sem fio|20</var>
<status status="PASS" start="2025-09-12T16:11:29.770017" elapsed="0.890168"/>
</iter>
<iter>
<kw name="Create Product With Template">
<kw name="Get Valid Auth Token" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:30.661001" level="INFO">&amp;{admin_user} = { nome=QA Test | email=qatest@qa.com.br | password=qateste | administrador=true }</msg>
<var>&amp;{admin_user}</var>
<arg>nome=QA Test</arg>
<arg>email=qatest@qa.com.br</arg>
<arg>password=qateste</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:30.660846" elapsed="0.000177"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:30.872922" level="INFO">POST Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '96'} 
 body=b'{"nome": "QA Test", "email": "qatest@qa.com.br", "password": "qateste", "administrador": "true"}' 
 </msg>
<msg time="2025-09-12T16:11:30.873112" level="INFO">POST Response : url=http://98.88.16.61:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Fri, 12 Sep 2025 19:11:31 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg time="2025-09-12T16:11:30.873393" level="INFO">${resp_user} = &lt;Response [400]&gt;</msg>
<var>${resp_user}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${admin_user}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:30.661099" elapsed="0.212366"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp_user.status_code} in [201, 400]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:30.873815" elapsed="0.001266"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:30.875643" level="INFO">&amp;{login_data} = { email=qatest@qa.com.br | password=qateste }</msg>
<var>&amp;{login_data}</var>
<arg>email=qatest@qa.com.br</arg>
<arg>password=qateste</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:30.875311" elapsed="0.000378"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:31.086991" level="INFO">POST Request : url=http://98.88.16.61:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '52'} 
 body=b'{"email": "qatest@qa.com.br", "password": "qateste"}' 
 </msg>
<msg time="2025-09-12T16:11:31.087168" level="INFO">POST Response : url=http://98.88.16.61:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '272', 'Date': 'Fri, 12 Sep 2025 19:11:32 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTIsImV4cCI6MTc1NzcwNDg5Mn0.BUMP_vYwtfMlGRVrhaQU1cVwLtnbbhyLJtvMwpAGp6A"
} 
 </msg>
<msg time="2025-09-12T16:11:31.087362" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/login</arg>
<arg>json=${login_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:30.875935" elapsed="0.211471"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:31.088593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:31.087703" elapsed="0.000989"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:31.089750" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTIsImV4cCI6MTc1NzcwNDg5Mn0.BUMP_vYwtfMlGRVrhaQU1cVwLtnbbhyLJtvMwpAGp6A</msg>
<var>${token}</var>
<arg>${resp.json()}</arg>
<arg>authorization</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:31.088875" elapsed="0.000933"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-09-12T16:11:31.089890" elapsed="0.000068"/>
</return>
<msg time="2025-09-12T16:11:31.090154" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTIsImV4cCI6MTc1NzcwNDg5Mn0.BUMP_vYwtfMlGRVrhaQU1cVwLtnbbhyLJtvMwpAGp6A</msg>
<var>${token}</var>
<doc>Obtém token de autenticação válido usando usuário padrão</doc>
<status status="PASS" start="2025-09-12T16:11:30.660700" elapsed="0.429489"/>
</kw>
<kw name="Split String" owner="String">
<msg time="2025-09-12T16:11:31.090634" level="INFO">@{product_parts} = [ Teclado Mecânico | 200 | Teclado para gaming | 10 ]</msg>
<var>@{product_parts}</var>
<arg>${product_data_string}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="PASS" start="2025-09-12T16:11:31.090372" elapsed="0.000393"/>
</kw>
<kw name="Generate Unique Name" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:31.091712" level="INFO">${uuid} = Gwy7KfUs</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:31.091428" elapsed="0.000316"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:31.092110" level="INFO">${name} = Teclado Mecânico Gwy7KfUs</msg>
<var>${name}</var>
<arg>${prefix} ${uuid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:31.091890" elapsed="0.000264"/>
</kw>
<return>
<value>${name}</value>
<status status="PASS" start="2025-09-12T16:11:31.092213" elapsed="0.000039"/>
</return>
<msg time="2025-09-12T16:11:31.092389" level="INFO">${nome} = Teclado Mecânico Gwy7KfUs</msg>
<var>${nome}</var>
<arg>${product_parts}[0]</arg>
<doc>Gera nome único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:31.091028" elapsed="0.001390"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:31.092963" level="INFO">&amp;{product_data} = { nome=Teclado Mecânico Gwy7KfUs | preco=200 | descricao=Teclado para gaming | quantidade=10 }</msg>
<var>&amp;{product_data}</var>
<arg>nome=${nome}</arg>
<arg>preco=${product_parts}[1]</arg>
<arg>descricao=${product_parts}[2]</arg>
<arg>quantidade=${product_parts}[3]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:31.092547" elapsed="0.000448"/>
</kw>
<kw name="Create Auth Headers" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:31.093715" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MD...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:31.093468" elapsed="0.000279"/>
</kw>
<return>
<value>${headers}</value>
<status status="PASS" start="2025-09-12T16:11:31.093804" elapsed="0.000032"/>
</return>
<msg time="2025-09-12T16:11:31.093974" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQ...</msg>
<var>${headers}</var>
<arg>${token}</arg>
<doc>Cria headers com autenticação</doc>
<status status="PASS" start="2025-09-12T16:11:31.093177" elapsed="0.000825"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:31.298099" level="INFO">POST Request : url=http://98.88.16.61:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTIsImV4cCI6MTc1NzcwNDg5Mn0.BUMP_vYwtfMlGRVrhaQU1cVwLtnbbhyLJtvMwpAGp6A', 'Content-Length': '114'} 
 body=b'{"nome": "Teclado Mec\\u00e2nico Gwy7KfUs", "preco": "200", "descricao": "Teclado para gaming", "quantidade": "10"}' 
 </msg>
<msg time="2025-09-12T16:11:31.298393" level="INFO">POST Response : url=http://98.88.16.61:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 12 Sep 2025 19:11:32 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "4UL32atUNQxA336X"
} 
 </msg>
<msg time="2025-09-12T16:11:31.298756" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos</arg>
<arg>json=${product_data}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:31.094109" elapsed="0.204725"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:31.300988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:31.299313" elapsed="0.001808"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:31.302317" level="INFO">${body} = {'message': 'Cadastro realizado com sucesso', '_id': '4UL32atUNQxA336X'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:31.301451" elapsed="0.000912"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:31.302542" elapsed="0.000236"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:31.302934" elapsed="0.000185"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:31.304074" level="INFO">${product_id} = 4UL32atUNQxA336X</msg>
<var>${product_id}</var>
<arg>${resp.json()}</arg>
<arg>_id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:31.303285" elapsed="0.000825"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:31.515202" level="INFO">DELETE Request : url=http://98.88.16.61:3000/produtos/4UL32atUNQxA336X 
 path_url=/produtos/4UL32atUNQxA336X 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTIsImV4cCI6MTc1NzcwNDg5Mn0.BUMP_vYwtfMlGRVrhaQU1cVwLtnbbhyLJtvMwpAGp6A', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:31.515409" level="INFO">DELETE Response : url=http://98.88.16.61:3000/produtos/4UL32atUNQxA336X 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 12 Sep 2025 19:11:32 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<arg>booker</arg>
<arg>/produtos/${product_id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:31.304244" elapsed="0.211306"/>
</kw>
<arg>${product_data}</arg>
<status status="PASS" start="2025-09-12T16:11:30.660447" elapsed="0.855390"/>
</kw>
<var name="${product_data}">Teclado Mecânico|200|Teclado para gaming|10</var>
<status status="PASS" start="2025-09-12T16:11:30.660302" elapsed="0.855598"/>
</iter>
<var>${product_data}</var>
<value>@{PRODUTOS_VALIDOS}</value>
<status status="PASS" start="2025-09-12T16:11:28.936231" elapsed="2.579736"/>
</for>
<doc>Testa criação de produtos usando dados parametrizados</doc>
<tag>data-driven</tag>
<tag>DD002</tag>
<tag>produtos</tag>
<status status="PASS" start="2025-09-12T16:11:28.935463" elapsed="2.581086"/>
</test>
<test id="s1-s1-s2-t3" name="DD003 - Teste de performance múltiplas requisições" line="27">
<kw name="Get Valid Auth Token" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:31.520489" level="INFO">&amp;{admin_user} = { nome=QA Test | email=qatest@qa.com.br | password=qateste | administrador=true }</msg>
<var>&amp;{admin_user}</var>
<arg>nome=QA Test</arg>
<arg>email=qatest@qa.com.br</arg>
<arg>password=qateste</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:31.520048" elapsed="0.000502"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:31.727049" level="INFO">POST Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '96'} 
 body=b'{"nome": "QA Test", "email": "qatest@qa.com.br", "password": "qateste", "administrador": "true"}' 
 </msg>
<msg time="2025-09-12T16:11:31.727217" level="INFO">POST Response : url=http://98.88.16.61:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Fri, 12 Sep 2025 19:11:32 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg time="2025-09-12T16:11:31.727480" level="INFO">${resp_user} = &lt;Response [400]&gt;</msg>
<var>${resp_user}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${admin_user}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:31.520735" elapsed="0.206809"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp_user.status_code} in [201, 400]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:31.727864" elapsed="0.001408"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:31.730180" level="INFO">&amp;{login_data} = { email=qatest@qa.com.br | password=qateste }</msg>
<var>&amp;{login_data}</var>
<arg>email=qatest@qa.com.br</arg>
<arg>password=qateste</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:31.729626" elapsed="0.000624"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:31.935333" level="INFO">POST Request : url=http://98.88.16.61:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '52'} 
 body=b'{"email": "qatest@qa.com.br", "password": "qateste"}' 
 </msg>
<msg time="2025-09-12T16:11:31.935455" level="INFO">POST Response : url=http://98.88.16.61:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '272', 'Date': 'Fri, 12 Sep 2025 19:11:33 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTMsImV4cCI6MTc1NzcwNDg5M30.r40J4kgcgMNd-fC3tj3_Cl_gUGo1k3c2M447bfPo0jE"
} 
 </msg>
<msg time="2025-09-12T16:11:31.935615" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/login</arg>
<arg>json=${login_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:31.730498" elapsed="0.205175"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:31.936641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:31.935868" elapsed="0.000850"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:31.937568" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTMsImV4cCI6MTc1NzcwNDg5M30.r40J4kgcgMNd-fC3tj3_Cl_gUGo1k3c2M447bfPo0jE</msg>
<var>${token}</var>
<arg>${resp.json()}</arg>
<arg>authorization</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:31.936899" elapsed="0.000702"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-09-12T16:11:31.937667" elapsed="0.000041"/>
</return>
<msg time="2025-09-12T16:11:31.937853" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTMsImV4cCI6MTc1NzcwNDg5M30.r40J4kgcgMNd-fC3tj3_Cl_gUGo1k3c2M447bfPo0jE</msg>
<var>${token}</var>
<doc>Obtém token de autenticação válido usando usuário padrão</doc>
<status status="PASS" start="2025-09-12T16:11:31.519575" elapsed="0.418307"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Measure Response Time" owner="keywords">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-09-12T16:11:31.940194" level="INFO">${start_time} = 1757704291</msg>
<var>${start_time}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-09-12T16:11:31.939898" elapsed="0.000338"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:32.138023" level="INFO">GET Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:32.138194" level="INFO">GET Response : url=http://98.88.16.61:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '7227', 'Date': 'Fri, 12 Sep 2025 19:11:33 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 33,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Usuario PUT 5J8lp5Pq",
            "email": "testejKifj2RV@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "2oHQmf3N96mh2w9v"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeUfMmU4MG@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "54Yu7IdARkCnFvPV"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testesdRh3ysU@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "69Ob0UqwkGrwl5Yo"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeZU8PJf0G@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "7az1oGdXVqajYrsc"
        },
        {
            "nome": "Usuario PUT zbjgRh8h",
            "email": "testezsKzmbLK@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "ArhvKbyQInX3APHR"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeMqaAxJ1f@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "EGu58ncHRJkMNr3l"
        },
        {
            "nome": "Usuario PUT DQEO5AoE",
            "email": "testeS3ijkhgA@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "EZoRzRJY7g6NzrlO"
        },
        {
            "nome": "Usuario PUT FJvpg9vt",
            "email": "testeWLhXyuv4@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "GdPdF5yoO4owYVjF"
        },
        {
            "nome": "Usuario PUT exJT0fnY",
            "email": "testezg5eCxdz@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "KR7xhJiJv95BoHDE"
        },
        {
            "nome": "Usuario PUT P0THOMFE",
            "email": "testedb3beVYY@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "KTIgR7vWbejcZ3uV"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeOoT84KAA@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "LXrxOGPQ7tIS4QOM"
        },
        {
            "nome": "Usuario PUT J3nAIrWj",
            "email": "testejPf3Ce0r@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "P4Rr7w3qSRCYfYvi"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "teste6pdpx2RA@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "UNYaBocYpUJwfheQ"
        },
        {
            "nome": "João Silva",
            "email": "testel71G6NPh@qa.com",
            "password": "senha123",
            "administrador": "false",
            "_id": "Xm1byt2CaigNiwV1"
        },
        {
            "nome": "Usuario PUT B6MyDQW5",
            "email": "testehEpvSHLf@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "ZDrgjVyiZwz1fGHR"
        },
        {
            "nome": "Usuario PUT HyHqLKNs",
            "email": "testeDQ3OfnRA@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "aR8fAt5NDvXI6fJ2"
        },
        {
            "nome": "Pedro Costa",
            "email": "testenQzKAbZc@qa.com",
            "password": "senha789",
            "administrador": "false",
            "_id": "bCOeuoVi4DHrqKrF"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeSLbl2hvL@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "cSOKjqaBjrf3ducI"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeyLhAjAMZ@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "eCuboLI2DH7929G0"
        },
        {
            "nome": "Usuario Gmail",
            "email": "teste@gmail.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "eLXNHdt4ET7uQij0"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testelFvSWc0R@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "fMmSxVkaSVPyJ6uC"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeqvWIeaDU@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "fgbO6TmaLCFUybq7"
        },
        {
            "nome": "Usuario Hotmail",
            "email": "teste@hotmail.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "hyiaI0OH2kA6MsGd"
        },
        {
            "nome": "QA Test",
            "email": "qatest@qa.com.br",
            "password": "qateste",
            "administrador": "true",
            "_id": "iKVm2yXWmtvBFcPR"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testegDE7VgUz@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "ktYYlHGd6Nt5diM5"
        },
        {
            "nome": "Usuario PUT gHPlE8ex",
            "email": "testemofWh5CA@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "lmth1P6ttnVXT8Kd"
        },
        {
            "nome": "Usuario PUT Znfkmaic",
            "email": "testeLfTdFldz@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "u2jAmjFbucUxYmF7"
        },
        {
            "nome": "Maria Santos",
            "email": "testecQPdGBvd@qa.com",
            "password": "senha456",
            "administrador": "true",
            "_id": "uIN3JjKB9JzKMoTm"
        },
        {
            "nome": "Usuario PUT EyNOyzo6",
            "email": "testevstkPJgU@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "w4sB27C9QIK0y0UW"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeTTDlccTx@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "xZeENRCx7IwSA05d"
        },
        {
            "nome": "Usuario PUT BkcDcDfJ",
            "email": "testeH4jTZtKt@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "xbKhdKw31neyJ3wf"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "teste2p1NdNHj@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "yhAKhkOxeF71l5hd"
        }
    ]
} 
 </msg>
<arg>booker</arg>
<arg>${endpoint}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:31.940808" elapsed="0.197777"/>
</kw>
<arg>'${method}' == 'GET'</arg>
<arg>GET On Session</arg>
<arg>booker</arg>
<arg>${endpoint}</arg>
<arg>ELSE IF</arg>
<arg>'${method}' == 'POST'</arg>
<arg>POST On Session</arg>
<arg>booker</arg>
<arg>${endpoint}</arg>
<arg>json=${json}</arg>
<arg>headers=${headers}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-09-12T16:11:31.940423" elapsed="0.198336"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-09-12T16:11:32.139773" level="INFO">${end_time} = 1757704292</msg>
<var>${end_time}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-09-12T16:11:32.139196" elapsed="0.000655"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-09-12T16:11:32.140834" level="INFO">${response_time} = 1</msg>
<var>${response_time}</var>
<arg>${end_time} - ${start_time}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-09-12T16:11:32.140230" elapsed="0.000696"/>
</kw>
<return>
<value>${response_time}</value>
<status status="PASS" start="2025-09-12T16:11:32.141047" elapsed="0.000066"/>
</return>
<msg time="2025-09-12T16:11:32.141338" level="INFO">${response_time} = 1</msg>
<var>${response_time}</var>
<arg>GET</arg>
<arg>/usuarios</arg>
<doc>Mede tempo de resposta de uma requisição</doc>
<status status="PASS" start="2025-09-12T16:11:31.938804" elapsed="0.202573"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${response_time} &lt; ${MAX_RESPONSE_TIME}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:32.141565" elapsed="0.000366"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-12T16:11:32.142783" level="INFO">Request 1 response time: 1s</msg>
<arg>Request ${i+1} response time: ${response_time}s</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-12T16:11:32.142098" elapsed="0.000743"/>
</kw>
<var name="${i}">0</var>
<status status="PASS" start="2025-09-12T16:11:31.938612" elapsed="0.204290"/>
</iter>
<iter>
<kw name="Measure Response Time" owner="keywords">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-09-12T16:11:32.144566" level="INFO">${start_time} = 1757704292</msg>
<var>${start_time}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-09-12T16:11:32.144336" elapsed="0.000266"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:32.348114" level="INFO">GET Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:32.348306" level="INFO">GET Response : url=http://98.88.16.61:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '7227', 'Date': 'Fri, 12 Sep 2025 19:11:33 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 33,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Usuario PUT 5J8lp5Pq",
            "email": "testejKifj2RV@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "2oHQmf3N96mh2w9v"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeUfMmU4MG@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "54Yu7IdARkCnFvPV"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testesdRh3ysU@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "69Ob0UqwkGrwl5Yo"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeZU8PJf0G@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "7az1oGdXVqajYrsc"
        },
        {
            "nome": "Usuario PUT zbjgRh8h",
            "email": "testezsKzmbLK@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "ArhvKbyQInX3APHR"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeMqaAxJ1f@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "EGu58ncHRJkMNr3l"
        },
        {
            "nome": "Usuario PUT DQEO5AoE",
            "email": "testeS3ijkhgA@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "EZoRzRJY7g6NzrlO"
        },
        {
            "nome": "Usuario PUT FJvpg9vt",
            "email": "testeWLhXyuv4@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "GdPdF5yoO4owYVjF"
        },
        {
            "nome": "Usuario PUT exJT0fnY",
            "email": "testezg5eCxdz@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "KR7xhJiJv95BoHDE"
        },
        {
            "nome": "Usuario PUT P0THOMFE",
            "email": "testedb3beVYY@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "KTIgR7vWbejcZ3uV"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeOoT84KAA@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "LXrxOGPQ7tIS4QOM"
        },
        {
            "nome": "Usuario PUT J3nAIrWj",
            "email": "testejPf3Ce0r@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "P4Rr7w3qSRCYfYvi"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "teste6pdpx2RA@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "UNYaBocYpUJwfheQ"
        },
        {
            "nome": "João Silva",
            "email": "testel71G6NPh@qa.com",
            "password": "senha123",
            "administrador": "false",
            "_id": "Xm1byt2CaigNiwV1"
        },
        {
            "nome": "Usuario PUT B6MyDQW5",
            "email": "testehEpvSHLf@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "ZDrgjVyiZwz1fGHR"
        },
        {
            "nome": "Usuario PUT HyHqLKNs",
            "email": "testeDQ3OfnRA@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "aR8fAt5NDvXI6fJ2"
        },
        {
            "nome": "Pedro Costa",
            "email": "testenQzKAbZc@qa.com",
            "password": "senha789",
            "administrador": "false",
            "_id": "bCOeuoVi4DHrqKrF"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeSLbl2hvL@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "cSOKjqaBjrf3ducI"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeyLhAjAMZ@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "eCuboLI2DH7929G0"
        },
        {
            "nome": "Usuario Gmail",
            "email": "teste@gmail.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "eLXNHdt4ET7uQij0"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testelFvSWc0R@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "fMmSxVkaSVPyJ6uC"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeqvWIeaDU@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "fgbO6TmaLCFUybq7"
        },
        {
            "nome": "Usuario Hotmail",
            "email": "teste@hotmail.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "hyiaI0OH2kA6MsGd"
        },
        {
            "nome": "QA Test",
            "email": "qatest@qa.com.br",
            "password": "qateste",
            "administrador": "true",
            "_id": "iKVm2yXWmtvBFcPR"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testegDE7VgUz@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "ktYYlHGd6Nt5diM5"
        },
        {
            "nome": "Usuario PUT gHPlE8ex",
            "email": "testemofWh5CA@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "lmth1P6ttnVXT8Kd"
        },
        {
            "nome": "Usuario PUT Znfkmaic",
            "email": "testeLfTdFldz@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "u2jAmjFbucUxYmF7"
        },
        {
            "nome": "Maria Santos",
            "email": "testecQPdGBvd@qa.com",
            "password": "senha456",
            "administrador": "true",
            "_id": "uIN3JjKB9JzKMoTm"
        },
        {
            "nome": "Usuario PUT EyNOyzo6",
            "email": "testevstkPJgU@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "w4sB27C9QIK0y0UW"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeTTDlccTx@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "xZeENRCx7IwSA05d"
        },
        {
            "nome": "Usuario PUT BkcDcDfJ",
            "email": "testeH4jTZtKt@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "xbKhdKw31neyJ3wf"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "teste2p1NdNHj@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "yhAKhkOxeF71l5hd"
        }
    ]
} 
 </msg>
<arg>booker</arg>
<arg>${endpoint}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:32.145204" elapsed="0.203516"/>
</kw>
<arg>'${method}' == 'GET'</arg>
<arg>GET On Session</arg>
<arg>booker</arg>
<arg>${endpoint}</arg>
<arg>ELSE IF</arg>
<arg>'${method}' == 'POST'</arg>
<arg>POST On Session</arg>
<arg>booker</arg>
<arg>${endpoint}</arg>
<arg>json=${json}</arg>
<arg>headers=${headers}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-09-12T16:11:32.144757" elapsed="0.204124"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-09-12T16:11:32.349637" level="INFO">${end_time} = 1757704292</msg>
<var>${end_time}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-09-12T16:11:32.349196" elapsed="0.000494"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-09-12T16:11:32.350328" level="INFO">${response_time} = 0</msg>
<var>${response_time}</var>
<arg>${end_time} - ${start_time}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-09-12T16:11:32.349900" elapsed="0.000474"/>
</kw>
<return>
<value>${response_time}</value>
<status status="PASS" start="2025-09-12T16:11:32.350459" elapsed="0.000062"/>
</return>
<msg time="2025-09-12T16:11:32.350736" level="INFO">${response_time} = 0</msg>
<var>${response_time}</var>
<arg>GET</arg>
<arg>/usuarios</arg>
<doc>Mede tempo de resposta de uma requisição</doc>
<status status="PASS" start="2025-09-12T16:11:32.143242" elapsed="0.207534"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${response_time} &lt; ${MAX_RESPONSE_TIME}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:32.350982" elapsed="0.000341"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-12T16:11:32.352206" level="INFO">Request 2 response time: 0s</msg>
<arg>Request ${i+1} response time: ${response_time}s</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-12T16:11:32.351496" elapsed="0.000777"/>
</kw>
<var name="${i}">1</var>
<status status="PASS" start="2025-09-12T16:11:32.143046" elapsed="0.209284"/>
</iter>
<iter>
<kw name="Measure Response Time" owner="keywords">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-09-12T16:11:32.354093" level="INFO">${start_time} = 1757704292</msg>
<var>${start_time}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-09-12T16:11:32.353859" elapsed="0.000269"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:32.576327" level="INFO">GET Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:32.576521" level="INFO">GET Response : url=http://98.88.16.61:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '7227', 'Date': 'Fri, 12 Sep 2025 19:11:33 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 33,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Usuario PUT 5J8lp5Pq",
            "email": "testejKifj2RV@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "2oHQmf3N96mh2w9v"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeUfMmU4MG@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "54Yu7IdARkCnFvPV"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testesdRh3ysU@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "69Ob0UqwkGrwl5Yo"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeZU8PJf0G@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "7az1oGdXVqajYrsc"
        },
        {
            "nome": "Usuario PUT zbjgRh8h",
            "email": "testezsKzmbLK@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "ArhvKbyQInX3APHR"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeMqaAxJ1f@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "EGu58ncHRJkMNr3l"
        },
        {
            "nome": "Usuario PUT DQEO5AoE",
            "email": "testeS3ijkhgA@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "EZoRzRJY7g6NzrlO"
        },
        {
            "nome": "Usuario PUT FJvpg9vt",
            "email": "testeWLhXyuv4@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "GdPdF5yoO4owYVjF"
        },
        {
            "nome": "Usuario PUT exJT0fnY",
            "email": "testezg5eCxdz@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "KR7xhJiJv95BoHDE"
        },
        {
            "nome": "Usuario PUT P0THOMFE",
            "email": "testedb3beVYY@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "KTIgR7vWbejcZ3uV"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeOoT84KAA@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "LXrxOGPQ7tIS4QOM"
        },
        {
            "nome": "Usuario PUT J3nAIrWj",
            "email": "testejPf3Ce0r@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "P4Rr7w3qSRCYfYvi"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "teste6pdpx2RA@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "UNYaBocYpUJwfheQ"
        },
        {
            "nome": "João Silva",
            "email": "testel71G6NPh@qa.com",
            "password": "senha123",
            "administrador": "false",
            "_id": "Xm1byt2CaigNiwV1"
        },
        {
            "nome": "Usuario PUT B6MyDQW5",
            "email": "testehEpvSHLf@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "ZDrgjVyiZwz1fGHR"
        },
        {
            "nome": "Usuario PUT HyHqLKNs",
            "email": "testeDQ3OfnRA@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "aR8fAt5NDvXI6fJ2"
        },
        {
            "nome": "Pedro Costa",
            "email": "testenQzKAbZc@qa.com",
            "password": "senha789",
            "administrador": "false",
            "_id": "bCOeuoVi4DHrqKrF"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeSLbl2hvL@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "cSOKjqaBjrf3ducI"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeyLhAjAMZ@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "eCuboLI2DH7929G0"
        },
        {
            "nome": "Usuario Gmail",
            "email": "teste@gmail.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "eLXNHdt4ET7uQij0"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testelFvSWc0R@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "fMmSxVkaSVPyJ6uC"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeqvWIeaDU@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "fgbO6TmaLCFUybq7"
        },
        {
            "nome": "Usuario Hotmail",
            "email": "teste@hotmail.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "hyiaI0OH2kA6MsGd"
        },
        {
            "nome": "QA Test",
            "email": "qatest@qa.com.br",
            "password": "qateste",
            "administrador": "true",
            "_id": "iKVm2yXWmtvBFcPR"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testegDE7VgUz@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "ktYYlHGd6Nt5diM5"
        },
        {
            "nome": "Usuario PUT gHPlE8ex",
            "email": "testemofWh5CA@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "lmth1P6ttnVXT8Kd"
        },
        {
            "nome": "Usuario PUT Znfkmaic",
            "email": "testeLfTdFldz@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "u2jAmjFbucUxYmF7"
        },
        {
            "nome": "Maria Santos",
            "email": "testecQPdGBvd@qa.com",
            "password": "senha456",
            "administrador": "true",
            "_id": "uIN3JjKB9JzKMoTm"
        },
        {
            "nome": "Usuario PUT EyNOyzo6",
            "email": "testevstkPJgU@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "w4sB27C9QIK0y0UW"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeTTDlccTx@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "xZeENRCx7IwSA05d"
        },
        {
            "nome": "Usuario PUT BkcDcDfJ",
            "email": "testeH4jTZtKt@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "xbKhdKw31neyJ3wf"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "teste2p1NdNHj@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "yhAKhkOxeF71l5hd"
        }
    ]
} 
 </msg>
<arg>booker</arg>
<arg>${endpoint}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:32.354588" elapsed="0.222369"/>
</kw>
<arg>'${method}' == 'GET'</arg>
<arg>GET On Session</arg>
<arg>booker</arg>
<arg>${endpoint}</arg>
<arg>ELSE IF</arg>
<arg>'${method}' == 'POST'</arg>
<arg>POST On Session</arg>
<arg>booker</arg>
<arg>${endpoint}</arg>
<arg>json=${json}</arg>
<arg>headers=${headers}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-09-12T16:11:32.354276" elapsed="0.222823"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-09-12T16:11:32.577935" level="INFO">${end_time} = 1757704292</msg>
<var>${end_time}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-09-12T16:11:32.577439" elapsed="0.000554"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-09-12T16:11:32.578711" level="INFO">${response_time} = 0</msg>
<var>${response_time}</var>
<arg>${end_time} - ${start_time}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-09-12T16:11:32.578234" elapsed="0.000531"/>
</kw>
<return>
<value>${response_time}</value>
<status status="PASS" start="2025-09-12T16:11:32.578864" elapsed="0.000068"/>
</return>
<msg time="2025-09-12T16:11:32.579180" level="INFO">${response_time} = 0</msg>
<var>${response_time}</var>
<arg>GET</arg>
<arg>/usuarios</arg>
<doc>Mede tempo de resposta de uma requisição</doc>
<status status="PASS" start="2025-09-12T16:11:32.352708" elapsed="0.226518"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${response_time} &lt; ${MAX_RESPONSE_TIME}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:32.579444" elapsed="0.000506"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-12T16:11:32.581113" level="INFO">Request 3 response time: 0s</msg>
<arg>Request ${i+1} response time: ${response_time}s</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-12T16:11:32.580258" elapsed="0.000923"/>
</kw>
<var name="${i}">2</var>
<status status="PASS" start="2025-09-12T16:11:32.352491" elapsed="0.228745"/>
</iter>
<iter>
<kw name="Measure Response Time" owner="keywords">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-09-12T16:11:32.583898" level="INFO">${start_time} = 1757704292</msg>
<var>${start_time}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-09-12T16:11:32.583532" elapsed="0.000449"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:32.800236" level="INFO">GET Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:32.800417" level="INFO">GET Response : url=http://98.88.16.61:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '7227', 'Date': 'Fri, 12 Sep 2025 19:11:33 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 33,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Usuario PUT 5J8lp5Pq",
            "email": "testejKifj2RV@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "2oHQmf3N96mh2w9v"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeUfMmU4MG@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "54Yu7IdARkCnFvPV"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testesdRh3ysU@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "69Ob0UqwkGrwl5Yo"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeZU8PJf0G@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "7az1oGdXVqajYrsc"
        },
        {
            "nome": "Usuario PUT zbjgRh8h",
            "email": "testezsKzmbLK@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "ArhvKbyQInX3APHR"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeMqaAxJ1f@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "EGu58ncHRJkMNr3l"
        },
        {
            "nome": "Usuario PUT DQEO5AoE",
            "email": "testeS3ijkhgA@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "EZoRzRJY7g6NzrlO"
        },
        {
            "nome": "Usuario PUT FJvpg9vt",
            "email": "testeWLhXyuv4@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "GdPdF5yoO4owYVjF"
        },
        {
            "nome": "Usuario PUT exJT0fnY",
            "email": "testezg5eCxdz@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "KR7xhJiJv95BoHDE"
        },
        {
            "nome": "Usuario PUT P0THOMFE",
            "email": "testedb3beVYY@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "KTIgR7vWbejcZ3uV"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeOoT84KAA@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "LXrxOGPQ7tIS4QOM"
        },
        {
            "nome": "Usuario PUT J3nAIrWj",
            "email": "testejPf3Ce0r@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "P4Rr7w3qSRCYfYvi"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "teste6pdpx2RA@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "UNYaBocYpUJwfheQ"
        },
        {
            "nome": "João Silva",
            "email": "testel71G6NPh@qa.com",
            "password": "senha123",
            "administrador": "false",
            "_id": "Xm1byt2CaigNiwV1"
        },
        {
            "nome": "Usuario PUT B6MyDQW5",
            "email": "testehEpvSHLf@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "ZDrgjVyiZwz1fGHR"
        },
        {
            "nome": "Usuario PUT HyHqLKNs",
            "email": "testeDQ3OfnRA@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "aR8fAt5NDvXI6fJ2"
        },
        {
            "nome": "Pedro Costa",
            "email": "testenQzKAbZc@qa.com",
            "password": "senha789",
            "administrador": "false",
            "_id": "bCOeuoVi4DHrqKrF"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeSLbl2hvL@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "cSOKjqaBjrf3ducI"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeyLhAjAMZ@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "eCuboLI2DH7929G0"
        },
        {
            "nome": "Usuario Gmail",
            "email": "teste@gmail.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "eLXNHdt4ET7uQij0"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testelFvSWc0R@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "fMmSxVkaSVPyJ6uC"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeqvWIeaDU@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "fgbO6TmaLCFUybq7"
        },
        {
            "nome": "Usuario Hotmail",
            "email": "teste@hotmail.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "hyiaI0OH2kA6MsGd"
        },
        {
            "nome": "QA Test",
            "email": "qatest@qa.com.br",
            "password": "qateste",
            "administrador": "true",
            "_id": "iKVm2yXWmtvBFcPR"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testegDE7VgUz@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "ktYYlHGd6Nt5diM5"
        },
        {
            "nome": "Usuario PUT gHPlE8ex",
            "email": "testemofWh5CA@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "lmth1P6ttnVXT8Kd"
        },
        {
            "nome": "Usuario PUT Znfkmaic",
            "email": "testeLfTdFldz@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "u2jAmjFbucUxYmF7"
        },
        {
            "nome": "Maria Santos",
            "email": "testecQPdGBvd@qa.com",
            "password": "senha456",
            "administrador": "true",
            "_id": "uIN3JjKB9JzKMoTm"
        },
        {
            "nome": "Usuario PUT EyNOyzo6",
            "email": "testevstkPJgU@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "w4sB27C9QIK0y0UW"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeTTDlccTx@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "xZeENRCx7IwSA05d"
        },
        {
            "nome": "Usuario PUT BkcDcDfJ",
            "email": "testeH4jTZtKt@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "xbKhdKw31neyJ3wf"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "teste2p1NdNHj@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "yhAKhkOxeF71l5hd"
        }
    ]
} 
 </msg>
<arg>booker</arg>
<arg>${endpoint}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:32.586182" elapsed="0.214651"/>
</kw>
<arg>'${method}' == 'GET'</arg>
<arg>GET On Session</arg>
<arg>booker</arg>
<arg>${endpoint}</arg>
<arg>ELSE IF</arg>
<arg>'${method}' == 'POST'</arg>
<arg>POST On Session</arg>
<arg>booker</arg>
<arg>${endpoint}</arg>
<arg>json=${json}</arg>
<arg>headers=${headers}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-09-12T16:11:32.584300" elapsed="0.216706"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-09-12T16:11:32.801762" level="INFO">${end_time} = 1757704292</msg>
<var>${end_time}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-09-12T16:11:32.801321" elapsed="0.000497"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-09-12T16:11:32.802721" level="INFO">${response_time} = 0</msg>
<var>${response_time}</var>
<arg>${end_time} - ${start_time}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-09-12T16:11:32.802095" elapsed="0.000683"/>
</kw>
<return>
<value>${response_time}</value>
<status status="PASS" start="2025-09-12T16:11:32.802879" elapsed="0.000080"/>
</return>
<msg time="2025-09-12T16:11:32.803167" level="INFO">${response_time} = 0</msg>
<var>${response_time}</var>
<arg>GET</arg>
<arg>/usuarios</arg>
<doc>Mede tempo de resposta de uma requisição</doc>
<status status="PASS" start="2025-09-12T16:11:32.581643" elapsed="0.221563"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${response_time} &lt; ${MAX_RESPONSE_TIME}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:32.803379" elapsed="0.000426"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-12T16:11:32.805072" level="INFO">Request 4 response time: 0s</msg>
<arg>Request ${i+1} response time: ${response_time}s</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-12T16:11:32.804019" elapsed="0.001156"/>
</kw>
<var name="${i}">3</var>
<status status="PASS" start="2025-09-12T16:11:32.581396" elapsed="0.223865"/>
</iter>
<iter>
<kw name="Measure Response Time" owner="keywords">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-09-12T16:11:32.808835" level="INFO">${start_time} = 1757704292</msg>
<var>${start_time}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-09-12T16:11:32.808310" elapsed="0.000591"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:33.030854" level="INFO">GET Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:33.031001" level="INFO">GET Response : url=http://98.88.16.61:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '7227', 'Date': 'Fri, 12 Sep 2025 19:11:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 33,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Usuario PUT 5J8lp5Pq",
            "email": "testejKifj2RV@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "2oHQmf3N96mh2w9v"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeUfMmU4MG@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "54Yu7IdARkCnFvPV"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testesdRh3ysU@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "69Ob0UqwkGrwl5Yo"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeZU8PJf0G@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "7az1oGdXVqajYrsc"
        },
        {
            "nome": "Usuario PUT zbjgRh8h",
            "email": "testezsKzmbLK@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "ArhvKbyQInX3APHR"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeMqaAxJ1f@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "EGu58ncHRJkMNr3l"
        },
        {
            "nome": "Usuario PUT DQEO5AoE",
            "email": "testeS3ijkhgA@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "EZoRzRJY7g6NzrlO"
        },
        {
            "nome": "Usuario PUT FJvpg9vt",
            "email": "testeWLhXyuv4@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "GdPdF5yoO4owYVjF"
        },
        {
            "nome": "Usuario PUT exJT0fnY",
            "email": "testezg5eCxdz@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "KR7xhJiJv95BoHDE"
        },
        {
            "nome": "Usuario PUT P0THOMFE",
            "email": "testedb3beVYY@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "KTIgR7vWbejcZ3uV"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeOoT84KAA@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "LXrxOGPQ7tIS4QOM"
        },
        {
            "nome": "Usuario PUT J3nAIrWj",
            "email": "testejPf3Ce0r@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "P4Rr7w3qSRCYfYvi"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "teste6pdpx2RA@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "UNYaBocYpUJwfheQ"
        },
        {
            "nome": "João Silva",
            "email": "testel71G6NPh@qa.com",
            "password": "senha123",
            "administrador": "false",
            "_id": "Xm1byt2CaigNiwV1"
        },
        {
            "nome": "Usuario PUT B6MyDQW5",
            "email": "testehEpvSHLf@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "ZDrgjVyiZwz1fGHR"
        },
        {
            "nome": "Usuario PUT HyHqLKNs",
            "email": "testeDQ3OfnRA@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "aR8fAt5NDvXI6fJ2"
        },
        {
            "nome": "Pedro Costa",
            "email": "testenQzKAbZc@qa.com",
            "password": "senha789",
            "administrador": "false",
            "_id": "bCOeuoVi4DHrqKrF"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeSLbl2hvL@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "cSOKjqaBjrf3ducI"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeyLhAjAMZ@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "eCuboLI2DH7929G0"
        },
        {
            "nome": "Usuario Gmail",
            "email": "teste@gmail.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "eLXNHdt4ET7uQij0"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testelFvSWc0R@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "fMmSxVkaSVPyJ6uC"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeqvWIeaDU@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "fgbO6TmaLCFUybq7"
        },
        {
            "nome": "Usuario Hotmail",
            "email": "teste@hotmail.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "hyiaI0OH2kA6MsGd"
        },
        {
            "nome": "QA Test",
            "email": "qatest@qa.com.br",
            "password": "qateste",
            "administrador": "true",
            "_id": "iKVm2yXWmtvBFcPR"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testegDE7VgUz@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "ktYYlHGd6Nt5diM5"
        },
        {
            "nome": "Usuario PUT gHPlE8ex",
            "email": "testemofWh5CA@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "lmth1P6ttnVXT8Kd"
        },
        {
            "nome": "Usuario PUT Znfkmaic",
            "email": "testeLfTdFldz@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "u2jAmjFbucUxYmF7"
        },
        {
            "nome": "Maria Santos",
            "email": "testecQPdGBvd@qa.com",
            "password": "senha456",
            "administrador": "true",
            "_id": "uIN3JjKB9JzKMoTm"
        },
        {
            "nome": "Usuario PUT EyNOyzo6",
            "email": "testevstkPJgU@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "w4sB27C9QIK0y0UW"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeTTDlccTx@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "xZeENRCx7IwSA05d"
        },
        {
            "nome": "Usuario PUT BkcDcDfJ",
            "email": "testeH4jTZtKt@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "xbKhdKw31neyJ3wf"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "teste2p1NdNHj@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "yhAKhkOxeF71l5hd"
        }
    ]
} 
 </msg>
<arg>booker</arg>
<arg>${endpoint}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:32.809721" elapsed="0.221573"/>
</kw>
<arg>'${method}' == 'GET'</arg>
<arg>GET On Session</arg>
<arg>booker</arg>
<arg>${endpoint}</arg>
<arg>ELSE IF</arg>
<arg>'${method}' == 'POST'</arg>
<arg>POST On Session</arg>
<arg>booker</arg>
<arg>${endpoint}</arg>
<arg>json=${json}</arg>
<arg>headers=${headers}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-09-12T16:11:32.809165" elapsed="0.222230"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-09-12T16:11:33.031903" level="INFO">${end_time} = 1757704293</msg>
<var>${end_time}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-09-12T16:11:33.031624" elapsed="0.000309"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-09-12T16:11:33.032286" level="INFO">${response_time} = 1</msg>
<var>${response_time}</var>
<arg>${end_time} - ${start_time}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-09-12T16:11:33.032051" elapsed="0.000259"/>
</kw>
<return>
<value>${response_time}</value>
<status status="PASS" start="2025-09-12T16:11:33.032360" elapsed="0.000037"/>
</return>
<msg time="2025-09-12T16:11:33.032515" level="INFO">${response_time} = 1</msg>
<var>${response_time}</var>
<arg>GET</arg>
<arg>/usuarios</arg>
<doc>Mede tempo de resposta de uma requisição</doc>
<status status="PASS" start="2025-09-12T16:11:32.805812" elapsed="0.226726"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${response_time} &lt; ${MAX_RESPONSE_TIME}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:33.032638" elapsed="0.000300"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-12T16:11:33.033831" level="INFO">Request 5 response time: 1s</msg>
<arg>Request ${i+1} response time: ${response_time}s</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-12T16:11:33.033157" elapsed="0.000937"/>
</kw>
<var name="${i}">4</var>
<status status="PASS" start="2025-09-12T16:11:32.805488" elapsed="0.228693"/>
</iter>
<var>${i}</var>
<value>5</value>
<status status="PASS" start="2025-09-12T16:11:31.938359" elapsed="1.095898"/>
</for>
<doc>Testa performance com múltiplas requisições simultâneas</doc>
<tag>DD003</tag>
<tag>performance</tag>
<status status="PASS" start="2025-09-12T16:11:31.518121" elapsed="1.516555"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-09-12T16:11:33.036157" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-09-12T16:11:33.035990" elapsed="0.000267"/>
</kw>
<status status="PASS" start="2025-09-12T16:11:27.393465" elapsed="5.642833"/>
</suite>
<suite id="s1-s1-s3" name="Health" source="C:\Users\ercli\IdeaProjects\COMPASS-UOL-PBAIJUN25\Documentos\Sprint 6\Semana 12\tests\suites\health.robot">
<kw name="Create Session" owner="RequestsLibrary" type="SETUP">
<msg time="2025-09-12T16:11:33.042752" level="INFO">Creating Session using : alias=booker, url=http://98.88.16.61:3000, headers={'Content-Type': 'application/json', 'Accept': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>booker</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${BASE_HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-09-12T16:11:33.042451" elapsed="0.000523"/>
</kw>
<test id="s1-s1-s3-t1" name="H001 - Health check API" line="7">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:33.667450" level="INFO">GET Request : url=http://98.88.16.61:3000/status 
 path_url=/status 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:33.667680" level="INFO">GET Response : url=http://98.88.16.61:3000/status 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'text/html; charset=utf-8', 'Content-Length': '15999', 'Date': 'Fri, 12 Sep 2025 19:11:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body=&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;ServeRest Status&lt;/title&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.2.2/Chart.bundle.min.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.4.5/socket.io.min.js"&gt;&lt;/script&gt;
    &lt;style&gt;
      * {
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
}

body.hide-cpu .container.cpu,
body.hide-mem .container.mem,
body.hide-load .container.load,
body.hide-responseTime .container.responseTime,
body.hide-rps .container.rps,
body.hide-statusCodes .container.statusCodes {
  display: none;
}

h1 {
  font-size: 3em;
  color: #222;
  margin: 0;
}

h5 {
  margin: 0;
  color: #888;
}

h6 {
  margin: 0;
}

p {
  font-size: 0.7em;
  color: #888;
}

span {
  cursor: pointer;
  font-size: 10px;
  margin-left: 5px;
  border: 1px solid #DDD;
  padding: 3px 10px 4px 10px;
}

canvas {
  width: 400px;
  height: 100px;
}

.content {
  width: 600px;
  margin: auto;
}

.active {
  background: #eeeeee;
}

.stats-column {
  flex: 0 0 200px;
}

.container {
  display: flex;
  flex-direction: row;
  margin-top: 20px;
  height: 100px;
}

.chart-container {
  width: 400px;
  height: 100px;
}

.container.healthChecks {
  display: block;
  height: auto;
}

.health-check-row {
  align-items: center;
  border: 1px solid #eee;
  border-radius: 4px;
  display: flex;
  margin: 0 0 10px 0;
  width: 100%;
}

.health-check-title-column {
  flex: 0 0 400px;
  display: flex;
  align-items: center;
  padding: 0 10px;
}

.health-check-title-column h5 a {
  color: #888;
  cursor: pointer;
  text-decoration: none;
}

.health-check-title-column h5 a:hover {
  text-decoration: underline;
}

.health-check-status-container {
  align-items: center;
  border-radius: 0 4px 4px 0;
  display: flex;
  justify-content: center;
  height: 2em;
  text-align: center;
  width: 200px;
}

.health-check-status-container.ok {
  background: #75D701;
}

.health-check-status-container.failed {
  background: #E53A40;
}

.health-check-status-container h1 {
  line-height: 2em;
  font-size: 1.5em;
  color: #fff;
  text-align: center;
  text-transform: uppercase;
}

.footer {
  text-align: center;
}

.span-controls {
  float: right;
}

.status-code {
  margin-top: 2px;
}

.status-code:before {
  content: '';
  display: inline-block;
  width: 8px;
  height: 8px;
  border-radius: 8px;
  margin-right: 10px;
}

.status-code-2xx:before {
  background-color: #75D701;
}

.status-code-3xx:before {
  background-color: #47b8e0;
}

.status-code-4xx:before {
  background-color: #ffc952;
}

.status-code-5xx:before {
  background-color: #E53A40;
}

    &lt;/style&gt;
  &lt;/head&gt;
  &lt;body class=""&gt;
    &lt;div class="content"&gt;
      &lt;div class="header"&gt;
        &lt;b&gt;ServeRest Status&lt;/b&gt;
        &lt;div id="span-controls" class="span-controls"&gt;&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container cpu"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;CPU Usage&lt;/h5&gt;
          &lt;h1 id="cpuStat"&gt;- %&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="cpuChart" width="400" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container mem"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Memory Usage&lt;/h5&gt;
          &lt;h1 id="memStat"&gt;- %&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="memChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container heap-size"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Heap Usage&lt;/h5&gt;
          &lt;h1 id="heapStat"&gt;- %&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="heapChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container load"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;One Minute Load Avg&lt;/h5&gt;
          &lt;h1 id="loadStat"&gt;-&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="loadChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container eventLoop"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Spent in Event Loop&lt;/h5&gt;
          &lt;h1 id="eventLoopStat"&gt;ms&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="eventLoopChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container responseTime"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Response Time&lt;/h5&gt;
          &lt;h1 id="responseTimeStat"&gt;-&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="responseTimeChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container rps"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Requests per Second&lt;/h5&gt;
          &lt;h1 id="rpsStat"&gt;-&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="rpsChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container statusCodes"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Status Codes&lt;/h5&gt;
          &lt;h6 class="status-code status-code-2xx"&gt;2xx&lt;/h6&gt;
          &lt;h6 class="status-code status-code-3xx"&gt;3xx&lt;/h6&gt;
          &lt;h6 class="status-code status-code-4xx"&gt;4xx&lt;/h6&gt;
          &lt;h6 class="status-code status-code-5xx"&gt;5xx&lt;/h6&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="statusCodesChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container healthChecks"&gt;
      &lt;/div&gt;
      &lt;div class="footer"&gt;
        &lt;p&gt;Status page made by &lt;a href="https://dynobase.dev"&gt;Dynobase&lt;/a&gt; with &amp;#9829; with Socket.io &amp; Chart.js&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;script&gt;
      var port = '';
      var socketPath = '/socket.io';
      /*
  eslint-disable no-plusplus, no-var, strict, vars-on-top, prefer-template,
  func-names, prefer-arrow-callback, no-loop-func
*/
/* global Chart, location, document, port, socketPath, parseInt, io */

'use strict';

Chart.defaults.global.defaultFontSize = 8;
Chart.defaults.global.animation.duration = 500;
Chart.defaults.global.legend.display = false;
Chart.defaults.global.elements.line.backgroundColor = 'rgba(0,0,0,0)';
Chart.defaults.global.elements.line.borderColor = 'rgba(0,0,0,0.9)';
Chart.defaults.global.elements.line.borderWidth = 2;

var socket = io(location.protocol + '//' + location.hostname + ':' + (port || location.port), {
  path: socketPath,
});
var defaultSpan = 0;
var spans = [];
var statusCodesColors = ['#75D701', '#47b8e0', '#ffc952', '#E53A40'];

var defaultDataset = {
  label: '',
  data: [],
  lineTension: 0.2,
  pointRadius: 0,
};

var defaultOptions = {
  scales: {
    yAxes: [
      {
        ticks: {
          beginAtZero: true,
        },
      },
    ],
    xAxes: [
      {
        type: 'time',
        time: {
          unitStepSize: 30,
        },
        gridLines: {
          display: false,
        },
      },
    ],
  },
  tooltips: {
    enabled: false,
  },
  responsive: true,
  maintainAspectRatio: false,
  animation: false,
};

var createChart = function (ctx, dataset) {
  return new Chart(ctx, {
    type: 'line',
    data: {
      labels: [],
      datasets: dataset,
    },
    options: defaultOptions,
  });
};

var addTimestamp = function (point) {
  return point.timestamp;
};

var cpuDataset = [Object.create(defaultDataset)];
var memDataset = [Object.create(defaultDataset)];
var loadDataset = [Object.create(defaultDataset)];
var heapDataset = [Object.create(defaultDataset)];
var eventLoopDataset = [Object.create(defaultDataset)];
var responseTimeDataset = [Object.create(defaultDataset)];
var rpsDataset = [Object.create(defaultDataset)];

var cpuStat = document.getElementById('cpuStat');
var memStat = document.getElementById('memStat');
var loadStat = document.getElementById('loadStat');
var heapStat = document.getElementById('heapStat');
var eventLoopStat = document.getElementById('eventLoopStat');
var responseTimeStat = document.getElementById('responseTimeStat');
var rpsStat = document.getElementById('rpsStat');

var cpuChartCtx = document.getElementById('cpuChart');
var memChartCtx = document.getElementById('memChart');
var loadChartCtx = document.getElementById('loadChart');
var heapChartCtx = document.getElementById('heapChart');
var eventLoopChartCtx = document.getElementById('eventLoopChart');
var responseTimeChartCtx = document.getElementById('responseTimeChart');
var rpsChartCtx = document.getElementById('rpsChart');
var statusCodesChartCtx = document.getElementById('statusCodesChart');

var cpuChart = createChart(cpuChartCtx, cpuDataset);
var memChart = createChart(memChartCtx, memDataset);
var heapChart = createChart(heapChartCtx, heapDataset);
var eventLoopChart = createChart(eventLoopChartCtx, eventLoopDataset);
var loadChart = createChart(loadChartCtx, loadDataset);
var responseTimeChart = createChart(responseTimeChartCtx, responseTimeDataset);
var rpsChart = createChart(rpsChartCtx, rpsDataset);
var statusCodesChart = new Chart(statusCodesChartCtx, {
  type: 'line',
  data: {
    labels: [],
    datasets: [
      Object.create(defaultDataset),
      Object.create(defaultDataset),
      Object.create(defaultDataset),
      Object.create(defaultDataset),
    ],
  },
  options: defaultOptions,
});

statusCodesChart.data.datasets.forEach(function (dataset, index) {
  dataset.borderColor = statusCodesColors[index];
});

var charts = [
  cpuChart,
  memChart,
  loadChart,
  responseTimeChart,
  rpsChart,
  statusCodesChart,
  heapChart,
  eventLoopChart,
];

var onSpanChange = function (e) {
  e.target.classList.add('active');
  defaultSpan = parseInt(e.target.id, 10);

  var otherSpans = document.getElementsByTagName('span');

  for (var i = 0; i &lt; otherSpans.length; i++) {
    if (otherSpans[i] !== e.target) otherSpans[i].classList.remove('active');
  }

  socket.emit('esm_change');
};

socket.on('esm_start', function (data) {
  // Remove last element of Array because it contains malformed responses data.
  // To keep consistency we also remove os data.
  data[defaultSpan].responses.pop();
  da... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2025-09-12T16:11:33.668253" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>${HEALTH_PATH}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:33.044091" elapsed="0.624247"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:33.669897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:33.668897" elapsed="0.001181"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:33.675998" level="FAIL">Resolving variable '${resp.json()}' failed: JSONDecodeError: Expecting value: line 1 column 1 (char 0)</msg>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="FAIL" start="2025-09-12T16:11:33.670875" elapsed="0.005222">Resolving variable '${resp.json()}' failed: JSONDecodeError: Expecting value: line 1 column 1 (char 0)</status>
</kw>
<msg time="2025-09-12T16:11:33.676327" level="INFO">${is_json} = False</msg>
<var>${is_json}</var>
<arg>Set Variable</arg>
<arg>${resp.json()}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-09-12T16:11:33.670567" elapsed="0.005850"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-12T16:11:33.679016" level="INFO">Response is text: &lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;ServeRest Status&lt;/title&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.2.2/Chart.bundle.min.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.4.5/socket.io.min.js"&gt;&lt;/script&gt;
    &lt;style&gt;
      * {
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
}

body.hide-cpu .container.cpu,
body.hide-mem .container.mem,
body.hide-load .container.load,
body.hide-responseTime .container.responseTime,
body.hide-rps .container.rps,
body.hide-statusCodes .container.statusCodes {
  display: none;
}

h1 {
  font-size: 3em;
  color: #222;
  margin: 0;
}

h5 {
  margin: 0;
  color: #888;
}

h6 {
  margin: 0;
}

p {
  font-size: 0.7em;
  color: #888;
}

span {
  cursor: pointer;
  font-size: 10px;
  margin-left: 5px;
  border: 1px solid #DDD;
  padding: 3px 10px 4px 10px;
}

canvas {
  width: 400px;
  height: 100px;
}

.content {
  width: 600px;
  margin: auto;
}

.active {
  background: #eeeeee;
}

.stats-column {
  flex: 0 0 200px;
}

.container {
  display: flex;
  flex-direction: row;
  margin-top: 20px;
  height: 100px;
}

.chart-container {
  width: 400px;
  height: 100px;
}

.container.healthChecks {
  display: block;
  height: auto;
}

.health-check-row {
  align-items: center;
  border: 1px solid #eee;
  border-radius: 4px;
  display: flex;
  margin: 0 0 10px 0;
  width: 100%;
}

.health-check-title-column {
  flex: 0 0 400px;
  display: flex;
  align-items: center;
  padding: 0 10px;
}

.health-check-title-column h5 a {
  color: #888;
  cursor: pointer;
  text-decoration: none;
}

.health-check-title-column h5 a:hover {
  text-decoration: underline;
}

.health-check-status-container {
  align-items: center;
  border-radius: 0 4px 4px 0;
  display: flex;
  justify-content: center;
  height: 2em;
  text-align: center;
  width: 200px;
}

.health-check-status-container.ok {
  background: #75D701;
}

.health-check-status-container.failed {
  background: #E53A40;
}

.health-check-status-container h1 {
  line-height: 2em;
  font-size: 1.5em;
  color: #fff;
  text-align: center;
  text-transform: uppercase;
}

.footer {
  text-align: center;
}

.span-controls {
  float: right;
}

.status-code {
  margin-top: 2px;
}

.status-code:before {
  content: '';
  display: inline-block;
  width: 8px;
  height: 8px;
  border-radius: 8px;
  margin-right: 10px;
}

.status-code-2xx:before {
  background-color: #75D701;
}

.status-code-3xx:before {
  background-color: #47b8e0;
}

.status-code-4xx:before {
  background-color: #ffc952;
}

.status-code-5xx:before {
  background-color: #E53A40;
}

    &lt;/style&gt;
  &lt;/head&gt;
  &lt;body class=""&gt;
    &lt;div class="content"&gt;
      &lt;div class="header"&gt;
        &lt;b&gt;ServeRest Status&lt;/b&gt;
        &lt;div id="span-controls" class="span-controls"&gt;&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container cpu"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;CPU Usage&lt;/h5&gt;
          &lt;h1 id="cpuStat"&gt;- %&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="cpuChart" width="400" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container mem"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Memory Usage&lt;/h5&gt;
          &lt;h1 id="memStat"&gt;- %&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="memChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container heap-size"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Heap Usage&lt;/h5&gt;
          &lt;h1 id="heapStat"&gt;- %&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="heapChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container load"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;One Minute Load Avg&lt;/h5&gt;
          &lt;h1 id="loadStat"&gt;-&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="loadChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container eventLoop"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Spent in Event Loop&lt;/h5&gt;
          &lt;h1 id="eventLoopStat"&gt;ms&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="eventLoopChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container responseTime"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Response Time&lt;/h5&gt;
          &lt;h1 id="responseTimeStat"&gt;-&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="responseTimeChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container rps"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Requests per Second&lt;/h5&gt;
          &lt;h1 id="rpsStat"&gt;-&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="rpsChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container statusCodes"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Status Codes&lt;/h5&gt;
          &lt;h6 class="status-code status-code-2xx"&gt;2xx&lt;/h6&gt;
          &lt;h6 class="status-code status-code-3xx"&gt;3xx&lt;/h6&gt;
          &lt;h6 class="status-code status-code-4xx"&gt;4xx&lt;/h6&gt;
          &lt;h6 class="status-code status-code-5xx"&gt;5xx&lt;/h6&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="statusCodesChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container healthChecks"&gt;
      &lt;/div&gt;
      &lt;div class="footer"&gt;
        &lt;p&gt;Status page made by &lt;a href="https://dynobase.dev"&gt;Dynobase&lt;/a&gt; with &amp;#9829; with Socket.io &amp; Chart.js&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;script&gt;
      var port = '';
      var socketPath = '/socket.io';
      /*
  eslint-disable no-plusplus, no-var, strict, vars-on-top, prefer-template,
  func-names, prefer-arrow-callback, no-loop-func
*/
/* global Chart, location, document, port, socketPath, parseInt, io */

'use strict';

Chart.defaults.global.defaultFontSize = 8;
Chart.defaults.global.animation.duration = 500;
Chart.defaults.global.legend.display = false;
Chart.defaults.global.elements.line.backgroundColor = 'rgba(0,0,0,0)';
Chart.defaults.global.elements.line.borderColor = 'rgba(0,0,0,0.9)';
Chart.defaults.global.elements.line.borderWidth = 2;

var socket = io(location.protocol + '//' + location.hostname + ':' + (port || location.port), {
  path: socketPath,
});
var defaultSpan = 0;
var spans = [];
var statusCodesColors = ['#75D701', '#47b8e0', '#ffc952', '#E53A40'];

var defaultDataset = {
  label: '',
  data: [],
  lineTension: 0.2,
  pointRadius: 0,
};

var defaultOptions = {
  scales: {
    yAxes: [
      {
        ticks: {
          beginAtZero: true,
        },
      },
    ],
    xAxes: [
      {
        type: 'time',
        time: {
          unitStepSize: 30,
        },
        gridLines: {
          display: false,
        },
      },
    ],
  },
  tooltips: {
    enabled: false,
  },
  responsive: true,
  maintainAspectRatio: false,
  animation: false,
};

var createChart = function (ctx, dataset) {
  return new Chart(ctx, {
    type: 'line',
    data: {
      labels: [],
      datasets: dataset,
    },
    options: defaultOptions,
  });
};

var addTimestamp = function (point) {
  return point.timestamp;
};

var cpuDataset = [Object.create(defaultDataset)];
var memDataset = [Object.create(defaultDataset)];
var loadDataset = [Object.create(defaultDataset)];
var heapDataset = [Object.create(defaultDataset)];
var eventLoopDataset = [Object.create(defaultDataset)];
var responseTimeDataset = [Object.create(defaultDataset)];
var rpsDataset = [Object.create(defaultDataset)];

var cpuStat = document.getElementById('cpuStat');
var memStat = document.getElementById('memStat');
var loadStat = document.getElementById('loadStat');
var heapStat = document.getElementById('heapStat');
var eventLoopStat = document.getElementById('eventLoopStat');
var responseTimeStat = document.getElementById('responseTimeStat');
var rpsStat = document.getElementById('rpsStat');

var cpuChartCtx = document.getElementById('cpuChart');
var memChartCtx = document.getElementById('memChart');
var loadChartCtx = document.getElementById('loadChart');
var heapChartCtx = document.getElementById('heapChart');
var eventLoopChartCtx = document.getElementById('eventLoopChart');
var responseTimeChartCtx = document.getElementById('responseTimeChart');
var rpsChartCtx = document.getElementById('rpsChart');
var statusCodesChartCtx = document.getElementById('statusCodesChart');

var cpuChart = createChart(cpuChartCtx, cpuDataset);
var memChart = createChart(memChartCtx, memDataset);
var heapChart = createChart(heapChartCtx, heapDataset);
var eventLoopChart = createChart(eventLoopChartCtx, eventLoopDataset);
var loadChart = createChart(loadChartCtx, loadDataset);
var responseTimeChart = createChart(responseTimeChartCtx, responseTimeDataset);
var rpsChart = createChart(rpsChartCtx, rpsDataset);
var statusCodesChart = new Chart(statusCodesChartCtx, {
  type: 'line',
  data: {
    labels: [],
    datasets: [
      Object.create(defaultDataset),
      Object.create(defaultDataset),
      Object.create(defaultDataset),
      Object.create(defaultDataset),
    ],
  },
  options: defaultOptions,
});

statusCodesChart.data.datasets.forEach(function (dataset, index) {
  dataset.borderColor = statusCodesColors[index];
});

var charts = [
  cpuChart,
  memChart,
  loadChart,
  responseTimeChart,
  rpsChart,
  statusCodesChart,
  heapChart,
  eventLoopChart,
];

var onSpanChange = function (e) {
  e.target.classList.add('active');
  defaultSpan = parseInt(e.target.id, 10);

  var otherSpans = document.getElementsByTagName('span');

  for (var i = 0; i &lt; otherSpans.length; i++) {
    if (otherSpans[i] !== e.target) otherSpans[i].classList.remove('active');
  }

  socket.emit('esm_change');
};

socket.on('esm_start', function (data) {
  // Remove last element of Array because it contains malformed responses data.
  // To keep consistency we also remove os data.
  data[defaultSpan].responses.pop();
  data[defaultSpan].os.pop();

  var lastOsMetric = data[defaultSpan].os[data[defaultSpan].os.length - 1];

  cpuStat.textContent = '0.0%';
  if (lastOsMetric) {
    cpuStat.textContent = lastOsMetric.cpu.toFixed(1) + '%';
  }

  cpuChart.data.datasets[0].data = data[defaultSpan].os.map(function (point) {
    return point.cpu;
  });
  cpuChart.data.labels = data[defaultSpan].os.map(addTimestamp);

  memStat.textContent = '0.0MB';
  if (lastOsMetric) {
    memStat.textContent = lastOsMetric.memory.toFixed(1) + 'MB';
  }

  memChart.data.datasets[0].data = data[defaultSpan].os.map(function (point) {
    return point.memory;
  });
  memChart.data.labels = data[defaultSpan].os.map(addTimestamp);

  loadStat.textContent = '0.00';
  if (lastOsMetric) {
    loadStat.textContent = lastOsMetric.load[defaultSpan].toFixed(2);
  }

  loadChart.data.datasets[0].data = data[defaultSpan].os.map(function (point) {
    return point.load[0];
  });
  loadChart.data.labels = data[defaultSpan].os.map(addTimestamp);

  heapChart.data.datasets[0].data = data[defaultSpan].os.map(function (point) {
    return point.heap.used_heap_size / 1024 / 1024;
  });
  heapChart.data.labels = data[defaultSpan].os.map(addTimestamp);

  eventLoopChart.data.datasets[0].data = data[defaultSpan].os.map(function (point) {
    if (point.loop) {
      return point.loop.sum;
    }
    return 0;
  });
  eventLoopChart.data.labels = data[defaultSpan].os.map(addTimestamp);

  var lastResponseMetric = data[defaultSpan].responses[data[defaultSpan].responses.length - 1];

  responseTimeStat.textContent = '0.00ms';
  if (lastResponseMetric) {
    responseTimeStat.textContent = lastResponseMetric.mean.toFixed(2) + 'ms';
  }

  responseTimeChart.data.datasets[0].data = data[defaultSpan].responses.map(function (point) {
    return point.mean;
  });
  responseTimeChart.data.labels = data[defaultSpan].responses.map(addTimestamp);

  for (var i = 0; i &lt; 4; i++) {
    statusCodesChart.data.datasets[i].data = data[defaultSpan].responses.map(function (point) {
      return point[i + 2];
    });
  }
  statusCodesChart.data.labels = data[defaultSpan].responses.map(addTimestamp);

  if (data[defaultSpan].responses.length &gt;= 2) {
    var deltaTime =
      lastResponseMetric.timestamp -
      data[defaultSpan].responses[data[defaultSpan].responses.length - 2].timestamp;

    if (deltaTime &lt; 1) deltaTime = 1000;
    rpsStat.textContent = ((lastResponseMetric.count / deltaTime) * 1000).toFixed(2);
    rpsChart.data.datasets[0].data = data[defaultSpan].responses.map(function (point) {
      return (point.count / deltaTime) * 1000;
    });
    rpsChart.data.labels = data[defaultSpan].responses.map(addTimestamp);
  }

  charts.forEach(function (chart) {
    chart.update();
  });

  var spanControls = document.getElementById('span-controls');

  if (data.length !== spans.length) {
    data.forEach(function (span, index) {
      spans.push({
        retention: span.retention,
        interval: span.interval,
      });

      var spanNode = document.createElement('span');
      var textNode = document.createTextNode((span.retention * span.interval) / 60 + 'M'); // eslint-disable-line

      spanNode.appendChild(textNode);
      spanNode.setAttribute('id', index);
      spanNode.onclick = onSpanChange;
      spanControls.appendChild(spanNode);
    });
    document.getElementsByTagName('span')[0].classList.add('active');
  }
});

socket.on('esm_stats', function (data) {
  console.log(data);

  if (
    data.retention === spans[defaultSpan].retention &amp;&amp;
    data.interval === spans[defaultSpan].interval
  ) {
    var os = data.os;
    var responses = data.responses;

    cpuStat.textContent = '0.0%';
    if (os) {
      cpuStat.textContent = os.cpu.toFixed(1) + '%';
      cpuChart.data.datasets[0].data.push(os.cpu);
      cpuChart.data.labels.push(os.timestamp);
    }

    memStat.textContent = '0.0MB';
    if (os) {
      memStat.textContent = os.memory.toFixed(1) + 'MB';
      memChart.data.datasets[0].data.push(os.memory);
      memChart.data.labels.push(os.timestamp);
    }

    loadStat.textContent = '0';
    if (os) {
      loadStat.textContent = os.load[0].toFixed(2);
      loadChart.data.datasets[0].data.push(os.load[0]);
      loadChart.data.labels.push(os.timestamp);
    }

    heapStat.textContent = '0';
    if (os) {
      heapStat.textContent = (os.heap.used_heap_size / 1024 / 1024).toFixed(1) + 'MB';
      heapChart.data.datasets[0].data.push(os.heap.used_heap_size / 1024 / 1024);
      heapChart.data.labels.push(os.timestamp);
    }

    eventLoopStat.textContent = '0';
    if (os &amp;&amp; os.loop) {
      eventLoopStat.textContent = os.loop.sum.toFixed(2) + 'ms';
      eventLoopChart.data.datasets[0].data.push(os.loop.sum);
      eventLoopChart.data.labels.push(os.timestamp);
    }

    responseTimeStat.textContent = '0.00ms';
    if (responses) {
      responseTimeStat.textContent = responses.mean.toFixed(2) + 'ms';
      responseTimeChart.data.datasets[0].data.push(responses.mean);
      responseTimeChart.data.labels.push(responses.timestamp);
    }

    if (responses) {
      var deltaTime = responses.timestamp - rpsChart.data.labels[rpsChart.data.labels.length - 1];

      if (deltaTime &lt; 1) deltaTime = 1000;
      rpsStat.textContent = ((responses.count / deltaTime) * 1000).toFixed(2);
      rpsChart.data.datasets[0].data.push((responses.count / deltaTime) * 1000);
      rpsChart.data.labels.push(responses.timestamp);
    }

    if (responses) {
      for (var i = 0; i &lt; 4; i++) {
        statusCodesChart.data.datasets[i].data.push(data.responses[i + 2]);
      }
      statusCodesChart.data.labels.push(data.responses.timestamp);
    }

    charts.forEach(function (chart) {
      if (spans[defaultSpan].retention &lt; chart.data.labels.length) {
        chart.data.datasets.forEach(function (dataset) {
          dataset.data.shift();
        });

        chart.data.labels.shift();
      }
      chart.update();
    });
  }
});

    &lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</msg>
<arg>Response is text: ${resp.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-12T16:11:33.677769" elapsed="0.002116"/>
</kw>
<arg>${is_json}</arg>
<arg>Log</arg>
<arg>Response is JSON: ${resp.json()}</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>Response is text: ${resp.text}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-09-12T16:11:33.677136" elapsed="0.002880"/>
</kw>
<doc>Verifica se o endpoint de saúde retorna 200</doc>
<tag>H001</tag>
<tag>health</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-12T16:11:33.043157" elapsed="0.637394"/>
</test>
<test id="s1-s1-s3-t2" name="H002 - Health check response time" line="20">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-09-12T16:11:33.682738" level="INFO">${start_time} = 1757704293</msg>
<var>${start_time}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-09-12T16:11:33.682186" elapsed="0.000650"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:33.943216" level="INFO">GET Request : url=http://98.88.16.61:3000/status 
 path_url=/status 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:33.943421" level="INFO">GET Response : url=http://98.88.16.61:3000/status 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'text/html; charset=utf-8', 'Content-Length': '15999', 'Date': 'Fri, 12 Sep 2025 19:11:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body=&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;ServeRest Status&lt;/title&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.2.2/Chart.bundle.min.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.4.5/socket.io.min.js"&gt;&lt;/script&gt;
    &lt;style&gt;
      * {
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
}

body.hide-cpu .container.cpu,
body.hide-mem .container.mem,
body.hide-load .container.load,
body.hide-responseTime .container.responseTime,
body.hide-rps .container.rps,
body.hide-statusCodes .container.statusCodes {
  display: none;
}

h1 {
  font-size: 3em;
  color: #222;
  margin: 0;
}

h5 {
  margin: 0;
  color: #888;
}

h6 {
  margin: 0;
}

p {
  font-size: 0.7em;
  color: #888;
}

span {
  cursor: pointer;
  font-size: 10px;
  margin-left: 5px;
  border: 1px solid #DDD;
  padding: 3px 10px 4px 10px;
}

canvas {
  width: 400px;
  height: 100px;
}

.content {
  width: 600px;
  margin: auto;
}

.active {
  background: #eeeeee;
}

.stats-column {
  flex: 0 0 200px;
}

.container {
  display: flex;
  flex-direction: row;
  margin-top: 20px;
  height: 100px;
}

.chart-container {
  width: 400px;
  height: 100px;
}

.container.healthChecks {
  display: block;
  height: auto;
}

.health-check-row {
  align-items: center;
  border: 1px solid #eee;
  border-radius: 4px;
  display: flex;
  margin: 0 0 10px 0;
  width: 100%;
}

.health-check-title-column {
  flex: 0 0 400px;
  display: flex;
  align-items: center;
  padding: 0 10px;
}

.health-check-title-column h5 a {
  color: #888;
  cursor: pointer;
  text-decoration: none;
}

.health-check-title-column h5 a:hover {
  text-decoration: underline;
}

.health-check-status-container {
  align-items: center;
  border-radius: 0 4px 4px 0;
  display: flex;
  justify-content: center;
  height: 2em;
  text-align: center;
  width: 200px;
}

.health-check-status-container.ok {
  background: #75D701;
}

.health-check-status-container.failed {
  background: #E53A40;
}

.health-check-status-container h1 {
  line-height: 2em;
  font-size: 1.5em;
  color: #fff;
  text-align: center;
  text-transform: uppercase;
}

.footer {
  text-align: center;
}

.span-controls {
  float: right;
}

.status-code {
  margin-top: 2px;
}

.status-code:before {
  content: '';
  display: inline-block;
  width: 8px;
  height: 8px;
  border-radius: 8px;
  margin-right: 10px;
}

.status-code-2xx:before {
  background-color: #75D701;
}

.status-code-3xx:before {
  background-color: #47b8e0;
}

.status-code-4xx:before {
  background-color: #ffc952;
}

.status-code-5xx:before {
  background-color: #E53A40;
}

    &lt;/style&gt;
  &lt;/head&gt;
  &lt;body class=""&gt;
    &lt;div class="content"&gt;
      &lt;div class="header"&gt;
        &lt;b&gt;ServeRest Status&lt;/b&gt;
        &lt;div id="span-controls" class="span-controls"&gt;&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container cpu"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;CPU Usage&lt;/h5&gt;
          &lt;h1 id="cpuStat"&gt;- %&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="cpuChart" width="400" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container mem"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Memory Usage&lt;/h5&gt;
          &lt;h1 id="memStat"&gt;- %&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="memChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container heap-size"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Heap Usage&lt;/h5&gt;
          &lt;h1 id="heapStat"&gt;- %&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="heapChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container load"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;One Minute Load Avg&lt;/h5&gt;
          &lt;h1 id="loadStat"&gt;-&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="loadChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container eventLoop"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Spent in Event Loop&lt;/h5&gt;
          &lt;h1 id="eventLoopStat"&gt;ms&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="eventLoopChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container responseTime"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Response Time&lt;/h5&gt;
          &lt;h1 id="responseTimeStat"&gt;-&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="responseTimeChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container rps"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Requests per Second&lt;/h5&gt;
          &lt;h1 id="rpsStat"&gt;-&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="rpsChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container statusCodes"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Status Codes&lt;/h5&gt;
          &lt;h6 class="status-code status-code-2xx"&gt;2xx&lt;/h6&gt;
          &lt;h6 class="status-code status-code-3xx"&gt;3xx&lt;/h6&gt;
          &lt;h6 class="status-code status-code-4xx"&gt;4xx&lt;/h6&gt;
          &lt;h6 class="status-code status-code-5xx"&gt;5xx&lt;/h6&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="statusCodesChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container healthChecks"&gt;
      &lt;/div&gt;
      &lt;div class="footer"&gt;
        &lt;p&gt;Status page made by &lt;a href="https://dynobase.dev"&gt;Dynobase&lt;/a&gt; with &amp;#9829; with Socket.io &amp; Chart.js&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;script&gt;
      var port = '';
      var socketPath = '/socket.io';
      /*
  eslint-disable no-plusplus, no-var, strict, vars-on-top, prefer-template,
  func-names, prefer-arrow-callback, no-loop-func
*/
/* global Chart, location, document, port, socketPath, parseInt, io */

'use strict';

Chart.defaults.global.defaultFontSize = 8;
Chart.defaults.global.animation.duration = 500;
Chart.defaults.global.legend.display = false;
Chart.defaults.global.elements.line.backgroundColor = 'rgba(0,0,0,0)';
Chart.defaults.global.elements.line.borderColor = 'rgba(0,0,0,0.9)';
Chart.defaults.global.elements.line.borderWidth = 2;

var socket = io(location.protocol + '//' + location.hostname + ':' + (port || location.port), {
  path: socketPath,
});
var defaultSpan = 0;
var spans = [];
var statusCodesColors = ['#75D701', '#47b8e0', '#ffc952', '#E53A40'];

var defaultDataset = {
  label: '',
  data: [],
  lineTension: 0.2,
  pointRadius: 0,
};

var defaultOptions = {
  scales: {
    yAxes: [
      {
        ticks: {
          beginAtZero: true,
        },
      },
    ],
    xAxes: [
      {
        type: 'time',
        time: {
          unitStepSize: 30,
        },
        gridLines: {
          display: false,
        },
      },
    ],
  },
  tooltips: {
    enabled: false,
  },
  responsive: true,
  maintainAspectRatio: false,
  animation: false,
};

var createChart = function (ctx, dataset) {
  return new Chart(ctx, {
    type: 'line',
    data: {
      labels: [],
      datasets: dataset,
    },
    options: defaultOptions,
  });
};

var addTimestamp = function (point) {
  return point.timestamp;
};

var cpuDataset = [Object.create(defaultDataset)];
var memDataset = [Object.create(defaultDataset)];
var loadDataset = [Object.create(defaultDataset)];
var heapDataset = [Object.create(defaultDataset)];
var eventLoopDataset = [Object.create(defaultDataset)];
var responseTimeDataset = [Object.create(defaultDataset)];
var rpsDataset = [Object.create(defaultDataset)];

var cpuStat = document.getElementById('cpuStat');
var memStat = document.getElementById('memStat');
var loadStat = document.getElementById('loadStat');
var heapStat = document.getElementById('heapStat');
var eventLoopStat = document.getElementById('eventLoopStat');
var responseTimeStat = document.getElementById('responseTimeStat');
var rpsStat = document.getElementById('rpsStat');

var cpuChartCtx = document.getElementById('cpuChart');
var memChartCtx = document.getElementById('memChart');
var loadChartCtx = document.getElementById('loadChart');
var heapChartCtx = document.getElementById('heapChart');
var eventLoopChartCtx = document.getElementById('eventLoopChart');
var responseTimeChartCtx = document.getElementById('responseTimeChart');
var rpsChartCtx = document.getElementById('rpsChart');
var statusCodesChartCtx = document.getElementById('statusCodesChart');

var cpuChart = createChart(cpuChartCtx, cpuDataset);
var memChart = createChart(memChartCtx, memDataset);
var heapChart = createChart(heapChartCtx, heapDataset);
var eventLoopChart = createChart(eventLoopChartCtx, eventLoopDataset);
var loadChart = createChart(loadChartCtx, loadDataset);
var responseTimeChart = createChart(responseTimeChartCtx, responseTimeDataset);
var rpsChart = createChart(rpsChartCtx, rpsDataset);
var statusCodesChart = new Chart(statusCodesChartCtx, {
  type: 'line',
  data: {
    labels: [],
    datasets: [
      Object.create(defaultDataset),
      Object.create(defaultDataset),
      Object.create(defaultDataset),
      Object.create(defaultDataset),
    ],
  },
  options: defaultOptions,
});

statusCodesChart.data.datasets.forEach(function (dataset, index) {
  dataset.borderColor = statusCodesColors[index];
});

var charts = [
  cpuChart,
  memChart,
  loadChart,
  responseTimeChart,
  rpsChart,
  statusCodesChart,
  heapChart,
  eventLoopChart,
];

var onSpanChange = function (e) {
  e.target.classList.add('active');
  defaultSpan = parseInt(e.target.id, 10);

  var otherSpans = document.getElementsByTagName('span');

  for (var i = 0; i &lt; otherSpans.length; i++) {
    if (otherSpans[i] !== e.target) otherSpans[i].classList.remove('active');
  }

  socket.emit('esm_change');
};

socket.on('esm_start', function (data) {
  // Remove last element of Array because it contains malformed responses data.
  // To keep consistency we also remove os data.
  data[defaultSpan].responses.pop();
  da... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2025-09-12T16:11:33.944134" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>${HEALTH_PATH}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:33.683531" elapsed="0.260664"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-09-12T16:11:33.945395" level="INFO">${end_time} = 1757704293</msg>
<var>${end_time}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-09-12T16:11:33.944949" elapsed="0.000505"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-09-12T16:11:33.946342" level="INFO">${response_time} = 0</msg>
<var>${response_time}</var>
<arg>${end_time} - ${start_time}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-09-12T16:11:33.945806" elapsed="0.000595"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:33.947750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:33.946780" elapsed="0.001087"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${response_time} &lt; 2</arg>
<arg>Response time too slow: ${response_time}s</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:33.948382" elapsed="0.000451"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-12T16:11:33.949900" level="INFO">Response time: 0s</msg>
<arg>Response time: ${response_time}s</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-12T16:11:33.949493" elapsed="0.000548"/>
</kw>
<doc>Verifica se health check responde em menos de 2 segundos</doc>
<tag>H002</tag>
<tag>health</tag>
<tag>performance</tag>
<status status="PASS" start="2025-09-12T16:11:33.681238" elapsed="0.269488"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-09-12T16:11:33.952750" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-09-12T16:11:33.952515" elapsed="0.000390"/>
</kw>
<status status="PASS" start="2025-09-12T16:11:33.037464" elapsed="0.915563"/>
</suite>
<suite id="s1-s1-s4" name="Integracao" source="C:\Users\ercli\IdeaProjects\COMPASS-UOL-PBAIJUN25\Documentos\Sprint 6\Semana 12\tests\suites\integracao.robot">
<kw name="Create Session" owner="RequestsLibrary" type="SETUP">
<msg time="2025-09-12T16:11:33.968753" level="INFO">Creating Session using : alias=booker, url=http://98.88.16.61:3000, headers={'Content-Type': 'application/json', 'Accept': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>booker</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${BASE_HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-09-12T16:11:33.968398" elapsed="0.000656"/>
</kw>
<test id="s1-s1-s4-t1" name="I001 - Fluxo completo e-commerce" line="16">
<kw name="Generate Unique Email" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:33.972608" level="INFO">${uuid} = fj9w3TbM</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:33.971761" elapsed="0.000954"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:33.973661" level="INFO">${email} = testefj9w3TbM@qa.com</msg>
<var>${email}</var>
<arg>teste${uuid}@qa.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:33.973089" elapsed="0.000653"/>
</kw>
<return>
<value>${email}</value>
<status status="PASS" start="2025-09-12T16:11:33.973904" elapsed="0.000099"/>
</return>
<msg time="2025-09-12T16:11:33.974458" level="INFO">${email} = testefj9w3TbM@qa.com</msg>
<var>${email}</var>
<doc>Gera email único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:33.970857" elapsed="0.003676"/>
</kw>
<kw name="Generate Unique Name" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:33.976206" level="INFO">${uuid} = JMZFY0h6</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:33.975661" elapsed="0.000614"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:33.977069" level="INFO">${name} = Usuario Integracao JMZFY0h6</msg>
<var>${name}</var>
<arg>${prefix} ${uuid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:33.976602" elapsed="0.000527"/>
</kw>
<return>
<value>${name}</value>
<status status="PASS" start="2025-09-12T16:11:33.977233" elapsed="0.000079"/>
</return>
<msg time="2025-09-12T16:11:33.977621" level="INFO">${nome} = Usuario Integracao JMZFY0h6</msg>
<var>${nome}</var>
<arg>Usuario Integracao</arg>
<doc>Gera nome único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:33.975175" elapsed="0.002513"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:33.978244" level="INFO">&amp;{user_data} = { nome=Usuario Integracao JMZFY0h6 | email=testefj9w3TbM@qa.com | password=teste123 | administrador=true }</msg>
<var>&amp;{user_data}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=teste123</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:33.978025" elapsed="0.000238"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:34.378607" level="INFO">POST Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '121'} 
 body=b'{"nome": "Usuario Integracao JMZFY0h6", "email": "testefj9w3TbM@qa.com", "password": "teste123", "administrador": "true"}' 
 </msg>
<msg time="2025-09-12T16:11:34.378742" level="INFO">POST Response : url=http://98.88.16.61:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 12 Sep 2025 19:11:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "b4VWYA2REWPd9TQU"
} 
 </msg>
<msg time="2025-09-12T16:11:34.378919" level="INFO">${resp_user} = &lt;Response [201]&gt;</msg>
<var>${resp_user}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${user_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:33.978555" elapsed="0.400442"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:34.380830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp_user.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:34.379429" elapsed="0.001469"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:34.381789" level="INFO">${user_id} = b4VWYA2REWPd9TQU</msg>
<var>${user_id}</var>
<arg>${resp_user.json()}</arg>
<arg>_id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:34.381205" elapsed="0.000613"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:34.382392" level="INFO">${USER_ID} = b4VWYA2REWPd9TQU</msg>
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-12T16:11:34.382151" elapsed="0.000337"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:34.383522" level="INFO">&amp;{login_data} = { email=testefj9w3TbM@qa.com | password=teste123 }</msg>
<var>&amp;{login_data}</var>
<arg>email=${email}</arg>
<arg>password=teste123</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:34.383055" elapsed="0.000511"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:34.605282" level="INFO">POST Request : url=http://98.88.16.61:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '57'} 
 body=b'{"email": "testefj9w3TbM@qa.com", "password": "teste123"}' 
 </msg>
<msg time="2025-09-12T16:11:34.605452" level="INFO">POST Response : url=http://98.88.16.61:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '279', 'Date': 'Fri, 12 Sep 2025 19:11:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlZmo5dzNUYk1AcWEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZTEyMyIsImlhdCI6MTc1NzcwNDI5NSwiZXhwIjoxNzU3NzA0ODk1fQ.HM5wJIdyjAH4ZOzIpEws97qf7yF8IrgL15AvKFVPKMo"
} 
 </msg>
<msg time="2025-09-12T16:11:34.605678" level="INFO">${resp_login} = &lt;Response [200]&gt;</msg>
<var>${resp_login}</var>
<arg>booker</arg>
<arg>/login</arg>
<arg>json=${login_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:34.383992" elapsed="0.221757"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:34.607575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp_login.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:34.606776" elapsed="0.000895"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:34.608953" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlZmo5dzNUYk1AcWEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZTEyMyIsImlhdCI6MTc1NzcwNDI5NSwiZXhwIjoxNzU3NzA0ODk1fQ.HM5wJIdyjAH4ZOzIpEws97qf7yF8IrgL15AvK...</msg>
<var>${token}</var>
<arg>${resp_login.json()}</arg>
<arg>authorization</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:34.608100" elapsed="0.000895"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:34.609773" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlZmo5dzNUYk1AcWEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZTEyMyIsImlhdCI6MTc1NzcwNDI5NSwiZXhwIjoxNzU3NzA0ODk1fQ.HM5wJIdyjAH4ZOzIpEws97qf7yF8IrgL15AvK...</msg>
<arg>${AUTH_TOKEN}</arg>
<arg>${token}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-12T16:11:34.609412" elapsed="0.000453"/>
</kw>
<kw name="Generate Unique Name" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:34.611739" level="INFO">${uuid} = tJuOwZpw</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:34.611121" elapsed="0.000758"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:34.612702" level="INFO">${name} = Produto Integracao tJuOwZpw</msg>
<var>${name}</var>
<arg>${prefix} ${uuid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:34.612216" elapsed="0.000568"/>
</kw>
<return>
<value>${name}</value>
<status status="PASS" start="2025-09-12T16:11:34.612912" elapsed="0.000087"/>
</return>
<msg time="2025-09-12T16:11:34.613304" level="INFO">${produto_nome} = Produto Integracao tJuOwZpw</msg>
<var>${produto_nome}</var>
<arg>Produto Integracao</arg>
<doc>Gera nome único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:34.610357" elapsed="0.003009"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:34.614788" level="INFO">&amp;{produto_data} = { nome=Produto Integracao tJuOwZpw | preco=150 | descricao=Produto para teste de integração | quantidade=10 }</msg>
<var>&amp;{produto_data}</var>
<arg>nome=${produto_nome}</arg>
<arg>preco=150</arg>
<arg>descricao=Produto para teste de integração</arg>
<arg>quantidade=10</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:34.614016" elapsed="0.000852"/>
</kw>
<kw name="Create Auth Headers" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:34.616956" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlZmo5dzNUYk1AcWEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZTEyMyIsImlhdCI6MT...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:34.616268" elapsed="0.000777"/>
</kw>
<return>
<value>${headers}</value>
<status status="PASS" start="2025-09-12T16:11:34.617231" elapsed="0.000098"/>
</return>
<msg time="2025-09-12T16:11:34.617693" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlZmo5dzNUYk1AcWEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZTEyMyI...</msg>
<var>${headers}</var>
<arg>${token}</arg>
<doc>Cria headers com autenticação</doc>
<status status="PASS" start="2025-09-12T16:11:34.615558" elapsed="0.002218"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:34.824652" level="INFO">POST Request : url=http://98.88.16.61:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlZmo5dzNUYk1AcWEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZTEyMyIsImlhdCI6MTc1NzcwNDI5NSwiZXhwIjoxNzU3NzA0ODk1fQ.HM5wJIdyjAH4ZOzIpEws97qf7yF8IrgL15AvKFVPKMo', 'Content-Length': '134'} 
 body=b'{"nome": "Produto Integracao tJuOwZpw", "preco": "150", "descricao": "Produto para teste de integra\\u00e7\\u00e3o", "quantidade": "10"}' 
 </msg>
<msg time="2025-09-12T16:11:34.824768" level="INFO">POST Response : url=http://98.88.16.61:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 12 Sep 2025 19:11:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "91cCcQ1nXzJGc2l0"
} 
 </msg>
<msg time="2025-09-12T16:11:34.825032" level="INFO">${resp_produto} = &lt;Response [201]&gt;</msg>
<var>${resp_produto}</var>
<arg>booker</arg>
<arg>/produtos</arg>
<arg>json=${produto_data}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:34.618343" elapsed="0.206726"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:34.825874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp_produto.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:34.825421" elapsed="0.000526"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:34.826832" level="INFO">${produto_id} = 91cCcQ1nXzJGc2l0</msg>
<var>${produto_id}</var>
<arg>${resp_produto.json()}</arg>
<arg>_id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:34.826309" elapsed="0.000546"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:34.827174" level="INFO">${PRODUTO_ID} = 91cCcQ1nXzJGc2l0</msg>
<arg>${PRODUTO_ID}</arg>
<arg>${produto_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-12T16:11:34.827020" elapsed="0.000183"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:34.827530" level="INFO">&amp;{produto_item} = { idProduto=91cCcQ1nXzJGc2l0 | quantidade=2 }</msg>
<var>&amp;{produto_item}</var>
<arg>idProduto=${produto_id}</arg>
<arg>quantidade=2</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:34.827344" elapsed="0.000212"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-09-12T16:11:34.827921" level="INFO">@{produtos_lista} = [ {'idProduto': '91cCcQ1nXzJGc2l0', 'quantidade': '2'} ]</msg>
<var>@{produtos_lista}</var>
<arg>${produto_item}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-09-12T16:11:34.827751" elapsed="0.000226"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:34.829130" level="INFO">&amp;{carrinho_data} = { produtos=[{'idProduto': '91cCcQ1nXzJGc2l0', 'quantidade': '2'}] }</msg>
<var>&amp;{carrinho_data}</var>
<arg>produtos=${produtos_lista}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:34.828455" elapsed="0.000766"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:35.037772" level="INFO">POST Request : url=http://98.88.16.61:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlZmo5dzNUYk1AcWEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZTEyMyIsImlhdCI6MTc1NzcwNDI5NSwiZXhwIjoxNzU3NzA0ODk1fQ.HM5wJIdyjAH4ZOzIpEws97qf7yF8IrgL15AvKFVPKMo', 'Content-Length': '68'} 
 body=b'{"produtos": [{"idProduto": "91cCcQ1nXzJGc2l0", "quantidade": "2"}]}' 
 </msg>
<msg time="2025-09-12T16:11:35.037945" level="INFO">POST Response : url=http://98.88.16.61:3000/carrinhos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 12 Sep 2025 19:11:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ILB2HOYaqqCQHypi"
} 
 </msg>
<msg time="2025-09-12T16:11:35.038326" level="INFO">${resp_carrinho} = &lt;Response [201]&gt;</msg>
<var>${resp_carrinho}</var>
<arg>booker</arg>
<arg>/carrinhos</arg>
<arg>json=${carrinho_data}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:34.829839" elapsed="0.208581"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:35.040545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp_carrinho.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:35.039135" elapsed="0.001526"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:35.041659" level="INFO">${carrinho_id} = ILB2HOYaqqCQHypi</msg>
<var>${carrinho_id}</var>
<arg>${resp_carrinho.json()}</arg>
<arg>_id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:35.041062" elapsed="0.000627"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:35.043171" level="INFO">${CARRINHO_ID} = ILB2HOYaqqCQHypi</msg>
<arg>${CARRINHO_ID}</arg>
<arg>${carrinho_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-12T16:11:35.042617" elapsed="0.000679"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:35.257775" level="INFO">GET Request : url=http://98.88.16.61:3000/carrinhos/ILB2HOYaqqCQHypi 
 path_url=/carrinhos/ILB2HOYaqqCQHypi 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:35.257975" level="INFO">GET Response : url=http://98.88.16.61:3000/carrinhos/ILB2HOYaqqCQHypi 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '276', 'Date': 'Fri, 12 Sep 2025 19:11:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "produtos": [
        {
            "idProduto": "91cCcQ1nXzJGc2l0",
            "quantidade": "2",
            "precoUnitario": 150
        }
    ],
    "precoTotal": 300,
    "quantidadeTotal": "02",
    "idUsuario": "b4VWYA2REWPd9TQU",
    "_id": "ILB2HOYaqqCQHypi"
} 
 </msg>
<msg time="2025-09-12T16:11:35.258239" level="INFO">${resp_get_carrinho} = &lt;Response [200]&gt;</msg>
<var>${resp_get_carrinho}</var>
<arg>booker</arg>
<arg>/carrinhos/${carrinho_id}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:35.043952" elapsed="0.214342"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:35.259904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp_get_carrinho.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:35.258887" elapsed="0.001151"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:35.261896" level="INFO">${carrinho_body} = {'produtos': [{'idProduto': '91cCcQ1nXzJGc2l0', 'quantidade': '2', 'precoUnitario': 150}], 'precoTotal': 300, 'quantidadeTotal': '02', 'idUsuario': 'b4VWYA2REWPd9TQU', '_id': 'ILB2HOYaqqCQHypi'}</msg>
<var>${carrinho_body}</var>
<arg>${resp_get_carrinho.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:35.260504" elapsed="0.001459"/>
</kw>
<kw name="Should Be Equal As Numbers" owner="BuiltIn">
<msg time="2025-09-12T16:11:35.263853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${carrinho_body['precoTotal']}</arg>
<arg>300</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="PASS" start="2025-09-12T16:11:35.262698" elapsed="0.001295"/>
</kw>
<kw name="Should Be Equal As Numbers" owner="BuiltIn">
<arg>${carrinho_body['quantidadeTotal']}</arg>
<arg>2</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="PASS" start="2025-09-12T16:11:35.264458" elapsed="0.001154"/>
</kw>
<doc>Testa fluxo completo: criar usuário → login → criar produto → adicionar ao carrinho</doc>
<tag>I001</tag>
<tag>integration</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-12T16:11:33.969211" elapsed="1.296807"/>
</test>
<test id="s1-s1-s4-t2" name="I002 - Validar estoque após operações" line="72">
<kw name="Skip If" owner="BuiltIn">
<arg>'${PRODUTO_ID}' == '${EMPTY}'</arg>
<arg>Produto não foi criado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-12T16:11:35.267841" elapsed="0.001633"/>
</kw>
<kw name="Skip If" owner="BuiltIn">
<arg>'${AUTH_TOKEN}' == '${EMPTY}'</arg>
<arg>Token não disponível</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-12T16:11:35.270002" elapsed="0.001378"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:35.475107" level="INFO">GET Request : url=http://98.88.16.61:3000/produtos/91cCcQ1nXzJGc2l0 
 path_url=/produtos/91cCcQ1nXzJGc2l0 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:35.475341" level="INFO">GET Response : url=http://98.88.16.61:3000/produtos/91cCcQ1nXzJGc2l0 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '170', 'Date': 'Fri, 12 Sep 2025 19:11:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Produto Integracao tJuOwZpw",
    "preco": 150,
    "descricao": "Produto para teste de integração",
    "quantidade": 8,
    "_id": "91cCcQ1nXzJGc2l0"
} 
 </msg>
<msg time="2025-09-12T16:11:35.475567" level="INFO">${resp_produto_atual} = &lt;Response [200]&gt;</msg>
<var>${resp_produto_atual}</var>
<arg>booker</arg>
<arg>/produtos/${PRODUTO_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:35.271884" elapsed="0.203765"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:35.477224" level="INFO">${estoque_atual} = 8</msg>
<var>${estoque_atual}</var>
<arg>${resp_produto_atual.json()}</arg>
<arg>quantidade</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:35.476149" elapsed="0.001132"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${estoque_atual} &lt; 10</arg>
<arg>Estoque não foi reduzido: ${estoque_atual}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:35.477925" elapsed="0.000551"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-12T16:11:35.479221" level="INFO">Estoque atual após carrinho: 8</msg>
<arg>Estoque atual após carrinho: ${estoque_atual}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-12T16:11:35.478928" elapsed="0.000383"/>
</kw>
<kw name="Create Auth Headers" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:35.480788" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlZmo5dzNUYk1AcWEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZTEyMyIsImlhdCI6MT...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:35.480310" elapsed="0.000545"/>
</kw>
<return>
<value>${headers}</value>
<status status="PASS" start="2025-09-12T16:11:35.480973" elapsed="0.000074"/>
</return>
<msg time="2025-09-12T16:11:35.481338" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlZmo5dzNUYk1AcWEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZTEyMyI...</msg>
<var>${headers}</var>
<arg>${AUTH_TOKEN}</arg>
<doc>Cria headers com autenticação</doc>
<status status="PASS" start="2025-09-12T16:11:35.479882" elapsed="0.001496"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:35.703479" level="INFO">DELETE Request : url=http://98.88.16.61:3000/carrinhos/cancelar-compra 
 path_url=/carrinhos/cancelar-compra 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlZmo5dzNUYk1AcWEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZTEyMyIsImlhdCI6MTc1NzcwNDI5NSwiZXhwIjoxNzU3NzA0ODk1fQ.HM5wJIdyjAH4ZOzIpEws97qf7yF8IrgL15AvKFVPKMo', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:35.703617" level="INFO">DELETE Response : url=http://98.88.16.61:3000/carrinhos/cancelar-compra 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '86', 'Date': 'Fri, 12 Sep 2025 19:11:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso. Estoque dos produtos reabastecido"
} 
 </msg>
<msg time="2025-09-12T16:11:35.704026" level="INFO">${resp_cancelar} = &lt;Response [200]&gt;</msg>
<var>${resp_cancelar}</var>
<arg>booker</arg>
<arg>/carrinhos/cancelar-compra</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:35.481905" elapsed="0.222399"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp_cancelar.status_code} in [200, 204, 400]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:35.704662" elapsed="0.000475"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:35.907691" level="INFO">GET Request : url=http://98.88.16.61:3000/produtos/91cCcQ1nXzJGc2l0 
 path_url=/produtos/91cCcQ1nXzJGc2l0 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:35.907939" level="INFO">GET Response : url=http://98.88.16.61:3000/produtos/91cCcQ1nXzJGc2l0 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '173', 'Date': 'Fri, 12 Sep 2025 19:11:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Produto Integracao tJuOwZpw",
    "preco": 150,
    "descricao": "Produto para teste de integração",
    "quantidade": "82",
    "_id": "91cCcQ1nXzJGc2l0"
} 
 </msg>
<msg time="2025-09-12T16:11:35.908468" level="INFO">${resp_produto_final} = &lt;Response [200]&gt;</msg>
<var>${resp_produto_final}</var>
<arg>booker</arg>
<arg>/produtos/${PRODUTO_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:35.705490" elapsed="0.203036"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:35.909934" level="INFO">${estoque_final} = 82</msg>
<var>${estoque_final}</var>
<arg>${resp_produto_final.json()}</arg>
<arg>quantidade</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:35.908967" elapsed="0.001017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-12T16:11:35.910554" level="INFO">Estoque final: 82</msg>
<arg>Estoque final: ${estoque_final}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-12T16:11:35.910346" elapsed="0.000279"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${estoque_final} &gt;= 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:35.910972" elapsed="0.000380"/>
</kw>
<doc>Valida que estoque é atualizado corretamente após operações de carrinho</doc>
<tag>I002</tag>
<tag>integration</tag>
<tag>negativo</tag>
<status status="PASS" start="2025-09-12T16:11:35.267213" elapsed="0.644641"/>
</test>
<test id="s1-s1-s4-t3" name="I003 - Cleanup recursos criados" line="98">
<kw name="Skip If" owner="BuiltIn">
<arg>'${AUTH_TOKEN}' == '${EMPTY}'</arg>
<arg>Token não disponível</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-12T16:11:35.913103" elapsed="0.000847"/>
</kw>
<kw name="Create Auth Headers" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:35.914857" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlZmo5dzNUYk1AcWEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZTEyMyIsImlhdCI6MT...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:35.914636" elapsed="0.000257"/>
</kw>
<return>
<value>${headers}</value>
<status status="PASS" start="2025-09-12T16:11:35.914950" elapsed="0.000035"/>
</return>
<msg time="2025-09-12T16:11:35.915097" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlZmo5dzNUYk1AcWEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZTEyMyI...</msg>
<var>${headers}</var>
<arg>${AUTH_TOKEN}</arg>
<doc>Cria headers com autenticação</doc>
<status status="PASS" start="2025-09-12T16:11:35.914372" elapsed="0.000748"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:36.125841" level="INFO">DELETE Request : url=http://98.88.16.61:3000/produtos/91cCcQ1nXzJGc2l0 
 path_url=/produtos/91cCcQ1nXzJGc2l0 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RlZmo5dzNUYk1AcWEuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZTEyMyIsImlhdCI6MTc1NzcwNDI5NSwiZXhwIjoxNzU3NzA0ODk1fQ.HM5wJIdyjAH4ZOzIpEws97qf7yF8IrgL15AvKFVPKMo', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:36.125994" level="INFO">DELETE Response : url=http://98.88.16.61:3000/produtos/91cCcQ1nXzJGc2l0 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 12 Sep 2025 19:11:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<arg>booker</arg>
<arg>/produtos/${PRODUTO_ID}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:35.916639" elapsed="0.209515"/>
</kw>
<arg>'${PRODUTO_ID}' != '${EMPTY}'</arg>
<arg>DELETE On Session</arg>
<arg>booker</arg>
<arg>/produtos/${PRODUTO_ID}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-09-12T16:11:35.915534" elapsed="0.210756"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:36.328750" level="INFO">DELETE Request : url=http://98.88.16.61:3000/usuarios/b4VWYA2REWPd9TQU 
 path_url=/usuarios/b4VWYA2REWPd9TQU 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:36.328857" level="INFO">DELETE Response : url=http://98.88.16.61:3000/usuarios/b4VWYA2REWPd9TQU 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 12 Sep 2025 19:11:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<arg>booker</arg>
<arg>/usuarios/${USER_ID}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:36.128032" elapsed="0.200953"/>
</kw>
<arg>'${USER_ID}' != '${EMPTY}'</arg>
<arg>DELETE On Session</arg>
<arg>booker</arg>
<arg>/usuarios/${USER_ID}</arg>
<arg>expected_status=any</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-09-12T16:11:36.126995" elapsed="0.202101"/>
</kw>
<doc>Remove recursos criados durante testes de integração</doc>
<tag>cleanup</tag>
<tag>I003</tag>
<status status="PASS" start="2025-09-12T16:11:35.912558" elapsed="0.417596"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-09-12T16:11:36.331946" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-09-12T16:11:36.331345" elapsed="0.000768"/>
</kw>
<status status="PASS" start="2025-09-12T16:11:33.955156" elapsed="2.377030"/>
</suite>
<suite id="s1-s1-s5" name="Login" source="C:\Users\ercli\IdeaProjects\COMPASS-UOL-PBAIJUN25\Documentos\Sprint 6\Semana 12\tests\suites\login.robot">
<kw name="Create Session" owner="RequestsLibrary" type="SETUP">
<msg time="2025-09-12T16:11:36.345275" level="INFO">Creating Session using : alias=booker, url=http://98.88.16.61:3000, headers={'Content-Type': 'application/json', 'Accept': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>booker</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${BASE_HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-09-12T16:11:36.344845" elapsed="0.000662"/>
</kw>
<test id="s1-s1-s5-t1" name="Setup Admin User" line="15">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:36.751633" level="INFO">POST Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '96'} 
 body=b'{"nome": "QA Test", "email": "qatest@qa.com.br", "password": "qateste", "administrador": "true"}' 
 </msg>
<msg time="2025-09-12T16:11:36.751744" level="INFO">POST Response : url=http://98.88.16.61:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Fri, 12 Sep 2025 19:11:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg time="2025-09-12T16:11:36.751913" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${ADMIN_USER}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:36.346321" elapsed="0.405620"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} in [201, 400]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:36.776855" elapsed="0.000974"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-12T16:11:36.779243" level="INFO">Admin user setup: 400</msg>
<arg>Admin user setup: ${resp.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-12T16:11:36.778386" elapsed="0.000949"/>
</kw>
<doc>Criar usuário admin para testes</doc>
<tag>setup</tag>
<status status="PASS" start="2025-09-12T16:11:36.345726" elapsed="0.434359"/>
</test>
<test id="s1-s1-s5-t2" name="L001 - Autenticar com credenciais válidas" line="23">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:36.992410" level="INFO">POST Request : url=http://98.88.16.61:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '52'} 
 body=b'{"email": "qatest@qa.com.br", "password": "qateste"}' 
 </msg>
<msg time="2025-09-12T16:11:36.992498" level="INFO">POST Response : url=http://98.88.16.61:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '272', 'Date': 'Fri, 12 Sep 2025 19:11:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTgsImV4cCI6MTc1NzcwNDg5OH0.LTTQ1ENTLHEzstPrFgMNdPg-A3vwtltb5BAn5-QbErc"
} 
 </msg>
<msg time="2025-09-12T16:11:36.992612" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/login</arg>
<arg>json=${LOGIN_VAL}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:36.781624" elapsed="0.211018"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:36.994455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:36.993040" elapsed="0.001634"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:36.995939" level="INFO">${body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTgsImV4cCI...</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:36.995179" elapsed="0.000792"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>authorization</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:36.996261" elapsed="0.000191"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:36.996703" elapsed="0.000278"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${body['message']}</arg>
<arg>Login realizado com sucesso</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-09-12T16:11:36.997184" elapsed="0.000563"/>
</kw>
<kw name="Should Start With" owner="BuiltIn">
<arg>${body['authorization']}</arg>
<arg>Bearer</arg>
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<status status="PASS" start="2025-09-12T16:11:36.997947" elapsed="0.000615"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:36.999309" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTgsImV4cCI6MTc1NzcwNDg5OH0.LTTQ1ENTLHEzstPrFgMNdPg-A3vwtltb5BAn5-QbErc</msg>
<arg>${AUTH_TOKEN}</arg>
<arg>${body['authorization']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-12T16:11:36.998849" elapsed="0.000513"/>
</kw>
<doc>Login válido deve retornar token Bearer com validade 10 min</doc>
<tag>L001</tag>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-12T16:11:36.780925" elapsed="0.218789"/>
</test>
<test id="s1-s1-s5-t3" name="L002 - Recusar usuário não cadastrado" line="36">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:37.001249" level="INFO">&amp;{login_inexistente} = { email=inexistente@qa.com | password=qualquersenha }</msg>
<var>&amp;{login_inexistente}</var>
<arg>email=inexistente@qa.com</arg>
<arg>password=qualquersenha</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:37.000896" elapsed="0.000393"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:37.207672" level="INFO">POST Request : url=http://98.88.16.61:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '60'} 
 body=b'{"email": "inexistente@qa.com", "password": "qualquersenha"}' 
 </msg>
<msg time="2025-09-12T16:11:37.207844" level="INFO">POST Response : url=http://98.88.16.61:3000/login 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '48', 'Date': 'Fri, 12 Sep 2025 19:11:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Email e/ou senha inválidos"
} 
 </msg>
<msg time="2025-09-12T16:11:37.208224" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/login</arg>
<arg>json=${login_inexistente}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:37.002186" elapsed="0.206125"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:37.209204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:37.208722" elapsed="0.000540"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:37.211028" level="INFO">${body} = {'message': 'Email e/ou senha inválidos'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:37.209844" elapsed="0.001253"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:37.211640" elapsed="0.000307"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${body['message']}</arg>
<arg>Email e/ou senha inválidos</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-09-12T16:11:37.212437" elapsed="0.000394"/>
</kw>
<doc>Login com email inexistente deve retornar 401</doc>
<tag>L002</tag>
<tag>login</tag>
<tag>negativo</tag>
<status status="PASS" start="2025-09-12T16:11:37.000239" elapsed="0.212871"/>
</test>
<test id="s1-s1-s5-t4" name="L003 - Recusar senha inválida" line="49">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:37.417597" level="INFO">POST Request : url=http://98.88.16.61:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '56'} 
 body=b'{"email": "qatest@qa.com.br", "password": "senhaerrada"}' 
 </msg>
<msg time="2025-09-12T16:11:37.417837" level="INFO">POST Response : url=http://98.88.16.61:3000/login 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '48', 'Date': 'Fri, 12 Sep 2025 19:11:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Email e/ou senha inválidos"
} 
 </msg>
<msg time="2025-09-12T16:11:37.418117" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/login</arg>
<arg>json=${LOGIN_INV}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:37.214143" elapsed="0.204035"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:37.419191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:37.418591" elapsed="0.000676"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:37.420497" level="INFO">${body} = {'message': 'Email e/ou senha inválidos'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:37.419664" elapsed="0.000854"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:37.420999" elapsed="0.000294"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${body['message']}</arg>
<arg>Email e/ou senha inválidos</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-09-12T16:11:37.421560" elapsed="0.000711"/>
</kw>
<doc>Login com senha errada deve retornar 401</doc>
<tag>L003</tag>
<tag>login</tag>
<tag>negativo</tag>
<status status="PASS" start="2025-09-12T16:11:37.213777" elapsed="0.208758"/>
</test>
<test id="s1-s1-s5-t5" name="L004 - Usar token em rota protegida" line="58">
<kw name="Skip If" owner="BuiltIn">
<arg>'${AUTH_TOKEN}' == '${EMPTY}'</arg>
<arg>Token não foi gerado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-12T16:11:37.423890" elapsed="0.001488"/>
</kw>
<kw name="Generate Unique Name" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:37.426374" level="INFO">${uuid} = eQcLQqyo</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:37.425933" elapsed="0.000522"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:37.427164" level="INFO">${name} = Produto Auth Test eQcLQqyo</msg>
<var>${name}</var>
<arg>${prefix} ${uuid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:37.426775" elapsed="0.000467"/>
</kw>
<return>
<value>${name}</value>
<status status="PASS" start="2025-09-12T16:11:37.427367" elapsed="0.000207"/>
</return>
<msg time="2025-09-12T16:11:37.427788" level="INFO">${nome} = Produto Auth Test eQcLQqyo</msg>
<var>${nome}</var>
<arg>Produto Auth Test</arg>
<doc>Gera nome único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:37.425667" elapsed="0.002153"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:37.428761" level="INFO">&amp;{produto_data} = { nome=Produto Auth Test eQcLQqyo | preco=100 | descricao=Teste de autenticação | quantidade=10 }</msg>
<var>&amp;{produto_data}</var>
<arg>nome=${nome}</arg>
<arg>preco=100</arg>
<arg>descricao=Teste de autenticação</arg>
<arg>quantidade=10</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:37.428231" elapsed="0.000590"/>
</kw>
<kw name="Create Auth Headers" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:37.429641" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MD...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:37.429379" elapsed="0.000304"/>
</kw>
<return>
<value>${headers}</value>
<status status="PASS" start="2025-09-12T16:11:37.429758" elapsed="0.000049"/>
</return>
<msg time="2025-09-12T16:11:37.430052" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQ...</msg>
<var>${headers}</var>
<arg>${AUTH_TOKEN}</arg>
<doc>Cria headers com autenticação</doc>
<status status="PASS" start="2025-09-12T16:11:37.429145" elapsed="0.000966"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:37.639669" level="INFO">POST Request : url=http://98.88.16.61:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTgsImV4cCI6MTc1NzcwNDg5OH0.LTTQ1ENTLHEzstPrFgMNdPg-A3vwtltb5BAn5-QbErc', 'Content-Length': '122'} 
 body=b'{"nome": "Produto Auth Test eQcLQqyo", "preco": "100", "descricao": "Teste de autentica\\u00e7\\u00e3o", "quantidade": "10"}' 
 </msg>
<msg time="2025-09-12T16:11:37.639873" level="INFO">POST Response : url=http://98.88.16.61:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 12 Sep 2025 19:11:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "07qlLYFrMUET6OCC"
} 
 </msg>
<msg time="2025-09-12T16:11:37.640204" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos</arg>
<arg>json=${produto_data}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:37.431206" elapsed="0.209083"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:37.641743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:37.640961" elapsed="0.000928"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:37.643375" level="INFO">${produto_id} = 07qlLYFrMUET6OCC</msg>
<var>${produto_id}</var>
<arg>${resp.json()}</arg>
<arg>_id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:37.642359" elapsed="0.001074"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:37.848223" level="INFO">DELETE Request : url=http://98.88.16.61:3000/produtos/07qlLYFrMUET6OCC 
 path_url=/produtos/07qlLYFrMUET6OCC 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQyOTgsImV4cCI6MTc1NzcwNDg5OH0.LTTQ1ENTLHEzstPrFgMNdPg-A3vwtltb5BAn5-QbErc', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:37.848415" level="INFO">DELETE Response : url=http://98.88.16.61:3000/produtos/07qlLYFrMUET6OCC 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 12 Sep 2025 19:11:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<arg>booker</arg>
<arg>/produtos/${produto_id}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:37.643802" elapsed="0.204788"/>
</kw>
<doc>Token válido deve permitir acesso a rotas protegidas</doc>
<tag>L004</tag>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-12T16:11:37.423245" elapsed="0.425799"/>
</test>
<test id="s1-s1-s5-t6" name="L005 - Token expirado" line="78">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:37.851268" level="INFO">${token_invalido} = Bearer tokeninvalidoparateste</msg>
<var>${token_invalido}</var>
<arg>Bearer tokeninvalidoparateste</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:37.851021" elapsed="0.000300"/>
</kw>
<kw name="Generate Unique Name" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:37.852418" level="INFO">${uuid} = omeW1aYv</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:37.852170" elapsed="0.000280"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:37.852804" level="INFO">${name} = Produto Token Expirado omeW1aYv</msg>
<var>${name}</var>
<arg>${prefix} ${uuid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:37.852599" elapsed="0.000237"/>
</kw>
<return>
<value>${name}</value>
<status status="PASS" start="2025-09-12T16:11:37.852907" elapsed="0.000050"/>
</return>
<msg time="2025-09-12T16:11:37.853100" level="INFO">${nome} = Produto Token Expirado omeW1aYv</msg>
<var>${nome}</var>
<arg>Produto Token Expirado</arg>
<doc>Gera nome único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:37.851834" elapsed="0.001294"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:37.853836" level="INFO">&amp;{produto_data} = { nome=Produto Token Expirado omeW1aYv | preco=100 | descricao=Teste token expirado | quantidade=10 }</msg>
<var>&amp;{produto_data}</var>
<arg>nome=${nome}</arg>
<arg>preco=100</arg>
<arg>descricao=Teste token expirado</arg>
<arg>quantidade=10</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:37.853457" elapsed="0.000418"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:37.854609" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer tokeninvalidoparateste }</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token_invalido}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:37.854269" elapsed="0.000379"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:38.061574" level="INFO">POST Request : url=http://98.88.16.61:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer tokeninvalidoparateste', 'Content-Length': '116'} 
 body=b'{"nome": "Produto Token Expirado omeW1aYv", "preco": "100", "descricao": "Teste token expirado", "quantidade": "10"}' 
 </msg>
<msg time="2025-09-12T16:11:38.061730" level="INFO">POST Response : url=http://98.88.16.61:3000/produtos 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '103', 'Date': 'Fri, 12 Sep 2025 19:11:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg time="2025-09-12T16:11:38.062063" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos</arg>
<arg>json=${produto_data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:37.854968" elapsed="0.207135"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:38.063625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:38.062545" elapsed="0.001158"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:38.064969" level="INFO">${body} = {'message': 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:38.064149" elapsed="0.000878"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:38.065324" elapsed="0.000202"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${body['message']}</arg>
<arg>Token de acesso ausente, inválido, expirado ou usuário do token não existe mais</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-09-12T16:11:38.065814" elapsed="0.000681"/>
</kw>
<doc>Token expirado deve retornar 401 (simulação)</doc>
<tag>L005</tag>
<tag>login</tag>
<tag>negativo</tag>
<status status="PASS" start="2025-09-12T16:11:37.850335" elapsed="0.216829"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-09-12T16:11:38.068108" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-09-12T16:11:38.067979" elapsed="0.000208"/>
</kw>
<status status="PASS" start="2025-09-12T16:11:36.333773" elapsed="1.734454"/>
</suite>
<suite id="s1-s1-s6" name="Produtos" source="C:\Users\ercli\IdeaProjects\COMPASS-UOL-PBAIJUN25\Documentos\Sprint 6\Semana 12\tests\suites\produtos.robot">
<kw name="Create Session" owner="RequestsLibrary" type="SETUP">
<msg time="2025-09-12T16:11:38.080314" level="INFO">Creating Session using : alias=booker, url=http://98.88.16.61:3000, headers={'Content-Type': 'application/json', 'Accept': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>booker</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${BASE_HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-09-12T16:11:38.079964" elapsed="0.000516"/>
</kw>
<test id="s1-s1-s6-t1" name="P001 - Criar produto sem autenticação" line="30">
<kw name="Generate Unique Name" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:38.082241" level="INFO">${uuid} = Qvi3IXcH</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:38.081826" elapsed="0.000475"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:38.082887" level="INFO">${name} = Produto Sem Auth Qvi3IXcH</msg>
<var>${name}</var>
<arg>${prefix} ${uuid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:38.082515" elapsed="0.000418"/>
</kw>
<return>
<value>${name}</value>
<status status="PASS" start="2025-09-12T16:11:38.083030" elapsed="0.000065"/>
</return>
<msg time="2025-09-12T16:11:38.083301" level="INFO">${nome} = Produto Sem Auth Qvi3IXcH</msg>
<var>${nome}</var>
<arg>Produto Sem Auth</arg>
<doc>Gera nome único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:38.081263" elapsed="0.002081"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:38.084397" level="INFO">&amp;{produto_data} = { nome=Produto Sem Auth Qvi3IXcH | preco=100 | descricao=Produto sem autenticação | quantidade=50 }</msg>
<var>&amp;{produto_data}</var>
<arg>nome=${nome}</arg>
<arg>preco=100</arg>
<arg>descricao=Produto sem autenticação</arg>
<arg>quantidade=50</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:38.083876" elapsed="0.000579"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:38.492025" level="INFO">POST Request : url=http://98.88.16.61:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '124'} 
 body=b'{"nome": "Produto Sem Auth Qvi3IXcH", "preco": "100", "descricao": "Produto sem autentica\\u00e7\\u00e3o", "quantidade": "50"}' 
 </msg>
<msg time="2025-09-12T16:11:38.492379" level="INFO">POST Response : url=http://98.88.16.61:3000/produtos 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '103', 'Date': 'Fri, 12 Sep 2025 19:11:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg time="2025-09-12T16:11:38.492941" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos</arg>
<arg>json=${produto_data}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:38.084762" elapsed="0.408318"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:38.495139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:38.493935" elapsed="0.001498"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:38.498117" level="INFO">${body} = {'message': 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:38.496152" elapsed="0.002049"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:38.498899" elapsed="0.000556"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${body['message']}</arg>
<arg>Token de acesso ausente</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-09-12T16:11:38.500366" elapsed="0.001178"/>
</kw>
<doc>Criar produto sem autenticação deve retornar 401</doc>
<tag>negativo</tag>
<tag>P001</tag>
<tag>produtos</tag>
<status status="PASS" start="2025-09-12T16:11:38.080557" elapsed="0.421660"/>
</test>
<test id="s1-s1-s6-t2" name="P002 - Criar produto válido (autenticado)" line="47">
<kw name="Get Auth Token">
<kw name="Setup Admin User">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:38.508132" level="INFO">&amp;{admin_user} = { nome=QA Test | email=qatest@qa.com.br | password=qateste | administrador=true }</msg>
<var>&amp;{admin_user}</var>
<arg>nome=QA Test</arg>
<arg>email=qatest@qa.com.br</arg>
<arg>password=qateste</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:38.507569" elapsed="0.000637"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:38.719166" level="INFO">POST Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '96'} 
 body=b'{"nome": "QA Test", "email": "qatest@qa.com.br", "password": "qateste", "administrador": "true"}' 
 </msg>
<msg time="2025-09-12T16:11:38.719541" level="INFO">POST Response : url=http://98.88.16.61:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Fri, 12 Sep 2025 19:11:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg time="2025-09-12T16:11:38.719938" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${admin_user}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:38.508479" elapsed="0.211565"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} in [201, 400]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:38.720494" elapsed="0.001655"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-12T16:11:38.723903" level="INFO">Admin user setup: 400</msg>
<arg>Admin user setup: ${resp.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-12T16:11:38.722515" elapsed="0.001531"/>
</kw>
<status status="PASS" start="2025-09-12T16:11:38.506884" elapsed="0.217408"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:38.724952" level="INFO">&amp;{login_data} = { email=qatest@qa.com.br | password=qateste }</msg>
<var>&amp;{login_data}</var>
<arg>email=qatest@qa.com.br</arg>
<arg>password=qateste</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:38.724625" elapsed="0.000358"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:38.941556" level="INFO">POST Request : url=http://98.88.16.61:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '52'} 
 body=b'{"email": "qatest@qa.com.br", "password": "qateste"}' 
 </msg>
<msg time="2025-09-12T16:11:38.941629" level="INFO">POST Response : url=http://98.88.16.61:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '272', 'Date': 'Fri, 12 Sep 2025 19:11:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQzMDAsImV4cCI6MTc1NzcwNDkwMH0.TBPZTe_hQYNLvQQ4sOddUrl6LGNcUlVCoeCaqWc5CUo"
} 
 </msg>
<msg time="2025-09-12T16:11:38.941730" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/login</arg>
<arg>json=${login_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:38.725105" elapsed="0.216643"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:38.942308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:38.941896" elapsed="0.000475"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:38.943270" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQzMDAsImV4cCI6MTc1NzcwNDkwMH0.TBPZTe_hQYNLvQQ4sOddUrl6LGNcUlVCoeCaqWc5CUo</msg>
<var>${token}</var>
<arg>${resp.json()}</arg>
<arg>authorization</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:38.942564" elapsed="0.000748"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:38.943731" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQzMDAsImV4cCI6MTc1NzcwNDkwMH0.TBPZTe_hQYNLvQQ4sOddUrl6LGNcUlVCoeCaqWc5CUo</msg>
<arg>${AUTH_TOKEN}</arg>
<arg>${token}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-12T16:11:38.943470" elapsed="0.000307"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-09-12T16:11:38.943847" elapsed="0.000058"/>
</return>
<msg time="2025-09-12T16:11:38.944114" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQzMDAsImV4cCI6MTc1NzcwNDkwMH0.TBPZTe_hQYNLvQQ4sOddUrl6LGNcUlVCoeCaqWc5CUo</msg>
<var>${token}</var>
<status status="PASS" start="2025-09-12T16:11:38.505695" elapsed="0.438465"/>
</kw>
<kw name="Generate Unique Name" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:38.945660" level="INFO">${uuid} = qGpT9fG3</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:38.945366" elapsed="0.000351"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:38.946253" level="INFO">${name} = Teclado QA qGpT9fG3</msg>
<var>${name}</var>
<arg>${prefix} ${uuid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:38.945928" elapsed="0.000374"/>
</kw>
<return>
<value>${name}</value>
<status status="PASS" start="2025-09-12T16:11:38.946474" elapsed="0.000229"/>
</return>
<msg time="2025-09-12T16:11:38.946930" level="INFO">${nome} = Teclado QA qGpT9fG3</msg>
<var>${nome}</var>
<arg>Teclado QA</arg>
<doc>Gera nome único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:38.944912" elapsed="0.002051"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:38.947830" level="INFO">&amp;{produto_data} = { nome=Teclado QA qGpT9fG3 | preco=100 | descricao=Produto para teste automatizado | quantidade=5 }</msg>
<var>&amp;{produto_data}</var>
<arg>nome=${nome}</arg>
<arg>preco=100</arg>
<arg>descricao=Produto para teste automatizado</arg>
<arg>quantidade=5</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:38.947395" elapsed="0.000697"/>
</kw>
<kw name="Create Auth Headers" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:38.950574" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MD...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:38.949708" elapsed="0.000969"/>
</kw>
<return>
<value>${headers}</value>
<status status="PASS" start="2025-09-12T16:11:38.950872" elapsed="0.000148"/>
</return>
<msg time="2025-09-12T16:11:38.951416" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQ...</msg>
<var>${headers}</var>
<arg>${token}</arg>
<doc>Cria headers com autenticação</doc>
<status status="PASS" start="2025-09-12T16:11:38.948845" elapsed="0.002648"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:39.157208" level="INFO">POST Request : url=http://98.88.16.61:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQzMDAsImV4cCI6MTc1NzcwNDkwMH0.TBPZTe_hQYNLvQQ4sOddUrl6LGNcUlVCoeCaqWc5CUo', 'Content-Length': '114'} 
 body=b'{"nome": "Teclado QA qGpT9fG3", "preco": "100", "descricao": "Produto para teste automatizado", "quantidade": "5"}' 
 </msg>
<msg time="2025-09-12T16:11:39.157429" level="INFO">POST Response : url=http://98.88.16.61:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 12 Sep 2025 19:11:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "sV9hrIqu0Xr2mUi1"
} 
 </msg>
<msg time="2025-09-12T16:11:39.157812" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos</arg>
<arg>json=${produto_data}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:38.952136" elapsed="0.205738"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:39.159224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:39.158361" elapsed="0.001002"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:39.160684" level="INFO">${body} = {'message': 'Cadastro realizado com sucesso', '_id': 'sV9hrIqu0Xr2mUi1'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:39.159887" elapsed="0.000868"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:39.161088" elapsed="0.001896"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:39.163459" elapsed="0.000596"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:39.166749" level="INFO">${PRODUTO_ID} = sV9hrIqu0Xr2mUi1</msg>
<arg>${PRODUTO_ID}</arg>
<arg>${body['_id']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-12T16:11:39.165070" elapsed="0.001833"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:39.167644" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQzMDAsImV4cCI6MTc1NzcwNDkwMH0.TBPZTe_hQYNLvQQ4sOddUrl6LGNcUlVCoeCaqWc5CUo</msg>
<arg>${AUTH_TOKEN}</arg>
<arg>${token}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-12T16:11:39.167320" elapsed="0.000427"/>
</kw>
<doc>Criar produto com nome único deve retornar 201</doc>
<tag>P002</tag>
<tag>produtos</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-12T16:11:38.503893" elapsed="0.664293"/>
</test>
<test id="s1-s1-s6-t3" name="P004 - Listar produtos" line="68">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:39.373354" level="INFO">GET Request : url=http://98.88.16.61:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:39.373639" level="INFO">GET Response : url=http://98.88.16.61:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '4730', 'Date': 'Fri, 12 Sep 2025 19:11:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 22,
    "produtos": [
        {
            "nome": "Produto qDLA63qV",
            "preco": 100,
            "descricao": "Produto para teste automatizado",
            "quantidade": 50,
            "_id": "1JAJeC5kGXLaBfvy"
        },
        {
            "nome": "Produto 4i5flO30",
            "preco": 100,
            "descricao": "Produto para teste automatizado",
            "quantidade": 49,
            "_id": "43wkFbv58Uk3eHE4"
        },
        {
            "nome": "Produto Duplicado Teste",
            "preco": 200,
            "descricao": "Produto para teste de duplicidade",
            "quantidade": 10,
            "_id": "ALoUKo0EkkJkYHT2"
        },
        {
            "nome": "Logitech MX Vertical",
            "preco": 470,
            "descricao": "Mouse",
            "quantidade": 382,
            "_id": "BeeJh5lz3k6kSIzA"
        },
        {
            "nome": "Produto FH3cZqmU",
            "preco": 100,
            "descricao": "Produto para teste automatizado",
            "quantidade": 49,
            "_id": "ER1rOorWp6bVG506"
        },
        {
            "nome": "Produto Plb0aaph",
            "preco": 100,
            "descricao": "Produto para teste automatizado",
            "quantidade": 49,
            "_id": "GrXDznBBA3rsBc2v"
        },
        {
            "nome": "Produto DWjuAi3y",
            "preco": 100,
            "descricao": "Produto para teste automatizado",
            "quantidade": 50,
            "_id": "JIO8sDVFO7RcZ0FY"
        },
        {
            "nome": "Samsung 60 polegadas",
            "preco": 5240,
            "descricao": "TV",
            "quantidade": 49977,
            "_id": "K6leHdftCeOJj8BJ"
        },
        {
            "nome": "Produto MbgKC9P8",
            "preco": 100,
            "descricao": "Produto para teste automatizado",
            "quantidade": 49,
            "_id": "b7LxuurTW81IiBt5"
        },
        {
            "nome": "Produto bsJuRFrE",
            "preco": 100,
            "descricao": "Produto para teste automatizado",
            "quantidade": 49,
            "_id": "dd7qQfsgUE6J8RVP"
        },
        {
            "nome": "Notebook Dell MAyxpfwf",
            "preco": 2500,
            "descricao": "Notebook para trabalho",
            "quantidade": 5,
            "_id": "fRT3OysahcpoIVfw"
        },
        {
            "nome": "Produto nctQ1fPH",
            "preco": 100,
            "descricao": "Produto para teste automatizado",
            "quantidade": 49,
            "_id": "hnug4BDyxcFiHfth"
        },
        {
            "nome": "Produto zebwjfqo",
            "preco": 100,
            "descricao": "Produto para teste automatizado",
            "quantidade": 49,
            "_id": "iCC7Of9iXOflOeJ8"
        },
        {
            "nome": "Produto nz1bYyI4",
            "preco": 100,
            "descricao": "Produto para teste automatizado",
            "quantidade": 49,
            "_id": "j4ITEXU3VdqtLMUT"
        },
        {
            "nome": "Mouse Logitech jyVfTsmS",
            "preco": 50,
            "descricao": "Mouse sem fio",
            "quantidade": 20,
            "_id": "jUCQcfLYVNwsXbhI"
        },
        {
            "nome": "Produto i9XWZwCG",
            "preco": 100,
            "descricao": "Produto para teste automatizado",
            "quantidade": 49,
            "_id": "kprZjmdjEFnq9Ywe"
        },
        {
            "nome": "Produto oS5kouap",
            "preco": 100,
            "descricao": "Produto para teste automatizado",
            "quantidade": 49,
            "_id": "lcpuNwIIfiriWV2s"
        },
        {
            "nome": "Produto nGTdxUQJ",
            "preco": 100,
            "descricao": "Produto para teste automatizado",
            "quantidade": 49,
            "_id": "oXningYnuHF4KKiU"
        },
        {
            "nome": "Produto BYhUvgY9",
            "preco": 100,
            "descricao": "Produto para teste automatizado",
            "quantidade": 49,
            "_id": "p81l4WLkq9mYj8Ch"
        },
        {
            "nome": "Teclado QA qGpT9fG3",
            "preco": 100,
            "descricao": "Produto para teste automatizado",
            "quantidade": 5,
            "_id": "sV9hrIqu0Xr2mUi1"
        },
        {
            "nome": "Teclado Mecânico BVfKqrjf",
            "preco": 200,
            "descricao": "Teclado para gaming",
            "quantidade": 10,
            "_id": "sy35hKYieaa2BozB"
        },
        {
            "nome": "Produto cnSde9lk",
            "preco": 100,
            "descricao": "Produto para teste automatizado",
            "quantidade": 49,
            "_id": "y2ggCqoEsbDA5UOz"
        }
    ]
} 
 </msg>
<msg time="2025-09-12T16:11:39.374087" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:39.169888" elapsed="0.204257"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:39.375943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:39.374833" elapsed="0.001195"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:39.377270" level="INFO">${body} = {'quantidade': 22, 'produtos': [{'nome': 'Produto qDLA63qV', 'preco': 100, 'descricao': 'Produto para teste automatizado', 'quantidade': 50, '_id': '1JAJeC5kGXLaBfvy'}, {'nome': 'Produto 4i5flO30', 'p...</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:39.376538" elapsed="0.000798"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>produtos</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:39.377783" elapsed="0.000323"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>quantidade</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:39.378529" elapsed="0.000324"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${body['quantidade']} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:39.379240" elapsed="0.002017"/>
</kw>
<doc>Listar produtos deve retornar 200 e lista</doc>
<tag>P004</tag>
<tag>produtos</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-12T16:11:39.169080" elapsed="0.212639"/>
</test>
<test id="s1-s1-s6-t4" name="P005 - Buscar produto por ID" line="78">
<kw name="Skip If" owner="BuiltIn">
<arg>'${PRODUTO_ID}' == '${EMPTY}'</arg>
<arg>Produto não foi criado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-12T16:11:39.384025" elapsed="0.001818"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:39.596727" level="INFO">GET Request : url=http://98.88.16.61:3000/produtos/sV9hrIqu0Xr2mUi1 
 path_url=/produtos/sV9hrIqu0Xr2mUi1 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:39.596992" level="INFO">GET Response : url=http://98.88.16.61:3000/produtos/sV9hrIqu0Xr2mUi1 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '159', 'Date': 'Fri, 12 Sep 2025 19:11:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Teclado QA qGpT9fG3",
    "preco": 100,
    "descricao": "Produto para teste automatizado",
    "quantidade": 5,
    "_id": "sV9hrIqu0Xr2mUi1"
} 
 </msg>
<msg time="2025-09-12T16:11:39.597260" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos/${PRODUTO_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:39.386393" elapsed="0.210939"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:39.598290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:39.597727" elapsed="0.000621"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:39.599317" level="INFO">${body} = {'nome': 'Teclado QA qGpT9fG3', 'preco': 100, 'descricao': 'Produto para teste automatizado', 'quantidade': 5, '_id': 'sV9hrIqu0Xr2mUi1'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:39.598734" elapsed="0.000616"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>nome</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:39.599583" elapsed="0.000194"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>preco</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:39.599998" elapsed="0.000213"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>descricao</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:39.600540" elapsed="0.000284"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>quantidade</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:39.601189" elapsed="0.000271"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:39.601801" elapsed="0.000270"/>
</kw>
<doc>Buscar produto por ID deve retornar 200</doc>
<tag>P005</tag>
<tag>produtos</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-12T16:11:39.382893" elapsed="0.219492"/>
</test>
<test id="s1-s1-s6-t5" name="P003 - Impedir nome de produto duplicado" line="92">
<kw name="Skip If" owner="BuiltIn">
<arg>'${AUTH_TOKEN}' == '${EMPTY}'</arg>
<arg>Token não disponível</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-12T16:11:39.603273" elapsed="0.000523"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:39.604187" level="INFO">${nome_duplicado} = Produto Duplicado Teste</msg>
<var>${nome_duplicado}</var>
<arg>Produto Duplicado Teste</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:39.604024" elapsed="0.000196"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:39.604838" level="INFO">&amp;{produto_dup} = { nome=Produto Duplicado Teste | preco=200 | descricao=Produto para teste de duplicidade | quantidade=10 }</msg>
<var>&amp;{produto_dup}</var>
<arg>nome=${nome_duplicado}</arg>
<arg>preco=200</arg>
<arg>descricao=Produto para teste de duplicidade</arg>
<arg>quantidade=10</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:39.604469" elapsed="0.000405"/>
</kw>
<kw name="Create Auth Headers" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:39.605966" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MD...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:39.605518" elapsed="0.000565"/>
</kw>
<return>
<value>${headers}</value>
<status status="PASS" start="2025-09-12T16:11:39.606600" elapsed="0.000179"/>
</return>
<msg time="2025-09-12T16:11:39.607237" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQ...</msg>
<var>${headers}</var>
<arg>${AUTH_TOKEN}</arg>
<doc>Cria headers com autenticação</doc>
<status status="PASS" start="2025-09-12T16:11:39.605173" elapsed="0.002137"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:39.819290" level="INFO">POST Request : url=http://98.88.16.61:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQzMDAsImV4cCI6MTc1NzcwNDkwMH0.TBPZTe_hQYNLvQQ4sOddUrl6LGNcUlVCoeCaqWc5CUo', 'Content-Length': '121'} 
 body=b'{"nome": "Produto Duplicado Teste", "preco": "200", "descricao": "Produto para teste de duplicidade", "quantidade": "10"}' 
 </msg>
<msg time="2025-09-12T16:11:39.819372" level="INFO">POST Response : url=http://98.88.16.61:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Fri, 12 Sep 2025 19:11:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Já existe produto com esse nome"
} 
 </msg>
<msg time="2025-09-12T16:11:39.819504" level="INFO">${resp1} = &lt;Response [400]&gt;</msg>
<var>${resp1}</var>
<arg>booker</arg>
<arg>/produtos</arg>
<arg>json=${produto_dup}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:39.607763" elapsed="0.211773"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:39.820407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-09-12T16:11:39.820566" level="FAIL">400 != 201</msg>
<arg>${resp1.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-09-12T16:11:39.819901" elapsed="0.000829">400 != 201</status>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${resp2}</var>
<arg>booker</arg>
<arg>/produtos</arg>
<arg>json=${produto_dup}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:39.821006" elapsed="0.000028"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${resp2.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:39.821198" elapsed="0.000019"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${body}</var>
<arg>${resp2.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:39.821348" elapsed="0.000025"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:39.821611" elapsed="0.000020"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${body['message']}</arg>
<arg>já está sendo usado</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:39.821835" elapsed="0.000039"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${produto_id}</var>
<arg>${resp1.json()}</arg>
<arg>_id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:39.822057" elapsed="0.000019"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<arg>booker</arg>
<arg>/produtos/${produto_id}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:39.822225" elapsed="0.000016"/>
</kw>
<doc>Criar produto com nome duplicado deve retornar 400</doc>
<tag>negativo</tag>
<tag>P003</tag>
<tag>produtos</tag>
<status status="FAIL" start="2025-09-12T16:11:39.602795" elapsed="0.219693">400 != 201</status>
</test>
<test id="s1-s1-s6-t6" name="P007 - Excluir produto sem vínculos" line="121">
<kw name="Skip If" owner="BuiltIn">
<arg>'${PRODUTO_ID}' == '${EMPTY}'</arg>
<arg>Produto não foi criado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-12T16:11:39.823912" elapsed="0.000993"/>
</kw>
<kw name="Skip If" owner="BuiltIn">
<arg>'${AUTH_TOKEN}' == '${EMPTY}'</arg>
<arg>Token não disponível</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-12T16:11:39.825186" elapsed="0.000473"/>
</kw>
<kw name="Create Auth Headers" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:39.826362" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MD...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:39.826166" elapsed="0.000219"/>
</kw>
<return>
<value>${headers}</value>
<status status="PASS" start="2025-09-12T16:11:39.826424" elapsed="0.000029"/>
</return>
<msg time="2025-09-12T16:11:39.826541" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQ...</msg>
<var>${headers}</var>
<arg>${AUTH_TOKEN}</arg>
<doc>Cria headers com autenticação</doc>
<status status="PASS" start="2025-09-12T16:11:39.825918" elapsed="0.000640"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:40.033266" level="INFO">DELETE Request : url=http://98.88.16.61:3000/produtos/sV9hrIqu0Xr2mUi1 
 path_url=/produtos/sV9hrIqu0Xr2mUi1 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQzMDAsImV4cCI6MTc1NzcwNDkwMH0.TBPZTe_hQYNLvQQ4sOddUrl6LGNcUlVCoeCaqWc5CUo', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:40.033518" level="INFO">DELETE Response : url=http://98.88.16.61:3000/produtos/sV9hrIqu0Xr2mUi1 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 12 Sep 2025 19:11:41 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg time="2025-09-12T16:11:40.034029" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos/${PRODUTO_ID}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:39.826720" elapsed="0.207372"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:40.035772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:40.034744" elapsed="0.001210"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:40.037464" level="INFO">${body} = {'message': 'Registro excluído com sucesso'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:40.036441" elapsed="0.001083"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:40.038087" elapsed="0.000315"/>
</kw>
<doc>Deletar produto sem vínculos deve retornar 200</doc>
<tag>P007</tag>
<tag>produtos</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-12T16:11:39.823361" elapsed="0.215473"/>
</test>
<test id="s1-s1-s6-t7" name="P006 - PUT cria quando ID não existe" line="133">
<kw name="Skip If" owner="BuiltIn">
<arg>'${AUTH_TOKEN}' == '${EMPTY}'</arg>
<arg>Token não disponível</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-12T16:11:40.041630" elapsed="0.001391"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:40.043883" level="INFO">${id_inexistente} = 507f1f77bcf86cd799439011</msg>
<var>${id_inexistente}</var>
<arg>507f1f77bcf86cd799439011</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:40.043549" elapsed="0.000397"/>
</kw>
<kw name="Generate Unique Name" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:40.045639" level="INFO">${uuid} = sNMu8YUU</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:40.045251" elapsed="0.000445"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:40.046283" level="INFO">${name} = Produto PUT Novo sNMu8YUU</msg>
<var>${name}</var>
<arg>${prefix} ${uuid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:40.045939" elapsed="0.000393"/>
</kw>
<return>
<value>${name}</value>
<status status="PASS" start="2025-09-12T16:11:40.046425" elapsed="0.000063"/>
</return>
<msg time="2025-09-12T16:11:40.046735" level="INFO">${nome} = Produto PUT Novo sNMu8YUU</msg>
<var>${nome}</var>
<arg>Produto PUT Novo</arg>
<doc>Gera nome único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:40.044722" elapsed="0.002064"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:40.047853" level="INFO">&amp;{produto_put} = { nome=Produto PUT Novo sNMu8YUU | preco=250 | descricao=Produto criado via PUT | quantidade=15 }</msg>
<var>&amp;{produto_put}</var>
<arg>nome=${nome}</arg>
<arg>preco=250</arg>
<arg>descricao=Produto criado via PUT</arg>
<arg>quantidade=15</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:40.047293" elapsed="0.000622"/>
</kw>
<kw name="Create Auth Headers" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:40.049758" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MD...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:40.049170" elapsed="0.000661"/>
</kw>
<return>
<value>${headers}</value>
<status status="PASS" start="2025-09-12T16:11:40.049977" elapsed="0.000083"/>
</return>
<msg time="2025-09-12T16:11:40.050384" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQ...</msg>
<var>${headers}</var>
<arg>${AUTH_TOKEN}</arg>
<doc>Cria headers com autenticação</doc>
<status status="PASS" start="2025-09-12T16:11:40.048586" elapsed="0.001866"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:40.265783" level="INFO">PUT Request : url=http://98.88.16.61:3000/produtos/507f1f77bcf86cd799439011 
 path_url=/produtos/507f1f77bcf86cd799439011 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQzMDAsImV4cCI6MTc1NzcwNDkwMH0.TBPZTe_hQYNLvQQ4sOddUrl6LGNcUlVCoeCaqWc5CUo', 'Content-Length': '112'} 
 body=b'{"nome": "Produto PUT Novo sNMu8YUU", "preco": "250", "descricao": "Produto criado via PUT", "quantidade": "15"}' 
 </msg>
<msg time="2025-09-12T16:11:40.265969" level="INFO">PUT Response : url=http://98.88.16.61:3000/produtos/507f1f77bcf86cd799439011 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '67', 'Date': 'Fri, 12 Sep 2025 19:11:41 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "id": "id deve ter exatamente 16 caracteres alfanuméricos"
} 
 </msg>
<msg time="2025-09-12T16:11:40.266246" level="FAIL">HTTPError: 400 Client Error: Bad Request for url: http://98.88.16.61:3000/produtos/507f1f77bcf86cd799439011</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos/${id_inexistente}</arg>
<arg>json=${produto_put}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-09-12T16:11:40.051054" elapsed="0.226399">HTTPError: 400 Client Error: Bad Request for url: http://98.88.16.61:3000/produtos/507f1f77bcf86cd799439011</status>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} in [200, 201]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:40.278087" elapsed="0.000067"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:40.278589" elapsed="0.000048"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:40.278983" elapsed="0.000042"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${resp.status_code} == 201</arg>
<arg>DELETE On Session</arg>
<arg>booker</arg>
<arg>/produtos/${id_inexistente}</arg>
<arg>headers=${headers}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:40.279587" elapsed="0.000043"/>
</kw>
<doc>PUT em ID inexistente deve criar novo produto</doc>
<tag>P006</tag>
<tag>produtos</tag>
<tag>smoke</tag>
<status status="FAIL" start="2025-09-12T16:11:40.040263" elapsed="0.239949">HTTPError: 400 Client Error: Bad Request for url: http://98.88.16.61:3000/produtos/507f1f77bcf86cd799439011</status>
</test>
<test id="s1-s1-s6-t8" name="P008 - Bloquear exclusão se em carrinho" line="157">
<kw name="Skip If" owner="BuiltIn">
<arg>'${AUTH_TOKEN}' == '${EMPTY}'</arg>
<arg>Token não disponível</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-12T16:11:40.283262" elapsed="0.002143"/>
</kw>
<kw name="Create Auth Headers" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:40.288110" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MD...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:40.287292" elapsed="0.000915"/>
</kw>
<return>
<value>${headers}</value>
<status status="PASS" start="2025-09-12T16:11:40.288400" elapsed="0.000105"/>
</return>
<msg time="2025-09-12T16:11:40.288902" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQ...</msg>
<var>${headers}</var>
<arg>${AUTH_TOKEN}</arg>
<doc>Cria headers com autenticação</doc>
<status status="PASS" start="2025-09-12T16:11:40.286340" elapsed="0.002669"/>
</kw>
<kw name="Create Test Product" owner="keywords">
<kw name="Generate Unique Name" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:40.290874" level="INFO">${uuid} = 57A0H4PS</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:40.290680" elapsed="0.000220"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:40.291233" level="INFO">${name} = Produto 57A0H4PS</msg>
<var>${name}</var>
<arg>${prefix} ${uuid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:40.291017" elapsed="0.000244"/>
</kw>
<return>
<value>${name}</value>
<status status="PASS" start="2025-09-12T16:11:40.291317" elapsed="0.000049"/>
</return>
<msg time="2025-09-12T16:11:40.291569" level="INFO">${name} = Produto 57A0H4PS</msg>
<var>${name}</var>
<arg>Produto</arg>
<doc>Gera nome único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:40.290408" elapsed="0.001241"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:40.292419" level="INFO">&amp;{product_data} = { nome=Produto 57A0H4PS | preco=100 | descricao=Produto para teste automatizado | quantidade=50 }</msg>
<var>&amp;{product_data}</var>
<arg>nome=${name}</arg>
<arg>preco=100</arg>
<arg>descricao=Produto para teste automatizado</arg>
<arg>quantidade=50</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:40.291862" elapsed="0.000613"/>
</kw>
<kw name="Create Auth Headers" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:40.293961" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MD...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:40.293520" elapsed="0.000505"/>
</kw>
<return>
<value>${headers}</value>
<status status="PASS" start="2025-09-12T16:11:40.294127" elapsed="0.000095"/>
</return>
<msg time="2025-09-12T16:11:40.294482" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQ...</msg>
<var>${headers}</var>
<arg>${token}</arg>
<doc>Cria headers com autenticação</doc>
<status status="PASS" start="2025-09-12T16:11:40.292925" elapsed="0.001583"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:40.509838" level="INFO">POST Request : url=http://98.88.16.61:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQzMDAsImV4cCI6MTc1NzcwNDkwMH0.TBPZTe_hQYNLvQQ4sOddUrl6LGNcUlVCoeCaqWc5CUo', 'Content-Length': '112'} 
 body=b'{"nome": "Produto 57A0H4PS", "preco": "100", "descricao": "Produto para teste automatizado", "quantidade": "50"}' 
 </msg>
<msg time="2025-09-12T16:11:40.510071" level="INFO">POST Response : url=http://98.88.16.61:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 12 Sep 2025 19:11:41 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "B9AsuWE1BBxYWasA"
} 
 </msg>
<msg time="2025-09-12T16:11:40.510413" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos</arg>
<arg>json=${product_data}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:40.294593" elapsed="0.215882"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:40.512103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:40.510918" elapsed="0.001322"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:40.513560" level="INFO">${product_id} = B9AsuWE1BBxYWasA</msg>
<var>${product_id}</var>
<arg>${resp.json()}</arg>
<arg>_id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:40.512538" elapsed="0.001078"/>
</kw>
<return>
<value>${product_id}</value>
<status status="PASS" start="2025-09-12T16:11:40.513727" elapsed="0.000077"/>
</return>
<msg time="2025-09-12T16:11:40.514119" level="INFO">${produto_id} = B9AsuWE1BBxYWasA</msg>
<var>${produto_id}</var>
<arg>${AUTH_TOKEN}</arg>
<doc>Cria produto para testes e retorna ID</doc>
<status status="PASS" start="2025-09-12T16:11:40.289795" elapsed="0.224377"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:40.515426" level="INFO">&amp;{produto_item} = { idProduto=B9AsuWE1BBxYWasA | quantidade=1 }</msg>
<var>&amp;{produto_item}</var>
<arg>idProduto=${produto_id}</arg>
<arg>quantidade=1</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:40.514857" elapsed="0.000639"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-09-12T16:11:40.516373" level="INFO">@{produtos_lista} = [ {'idProduto': 'B9AsuWE1BBxYWasA', 'quantidade': '1'} ]</msg>
<var>@{produtos_lista}</var>
<arg>${produto_item}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-09-12T16:11:40.515941" elapsed="0.000500"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:40.517466" level="INFO">&amp;{carrinho_data} = { produtos=[{'idProduto': 'B9AsuWE1BBxYWasA', 'quantidade': '1'}] }</msg>
<var>&amp;{carrinho_data}</var>
<arg>produtos=${produtos_lista}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:40.516879" elapsed="0.000672"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:40.745274" level="INFO">POST Request : url=http://98.88.16.61:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQzMDAsImV4cCI6MTc1NzcwNDkwMH0.TBPZTe_hQYNLvQQ4sOddUrl6LGNcUlVCoeCaqWc5CUo', 'Content-Length': '68'} 
 body=b'{"produtos": [{"idProduto": "B9AsuWE1BBxYWasA", "quantidade": "1"}]}' 
 </msg>
<msg time="2025-09-12T16:11:40.745399" level="INFO">POST Response : url=http://98.88.16.61:3000/carrinhos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 12 Sep 2025 19:11:41 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "gJJYE32VwJOtciUJ"
} 
 </msg>
<msg time="2025-09-12T16:11:40.745578" level="INFO">${resp_carrinho} = &lt;Response [201]&gt;</msg>
<var>${resp_carrinho}</var>
<arg>booker</arg>
<arg>/carrinhos</arg>
<arg>json=${carrinho_data}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:40.517997" elapsed="0.227612"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:40.747434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp_carrinho.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:40.746110" elapsed="0.001585"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:40.948717" level="INFO">DELETE Request : url=http://98.88.16.61:3000/produtos/B9AsuWE1BBxYWasA 
 path_url=/produtos/B9AsuWE1BBxYWasA 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQzMDAsImV4cCI6MTc1NzcwNDkwMH0.TBPZTe_hQYNLvQQ4sOddUrl6LGNcUlVCoeCaqWc5CUo', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:40.948869" level="INFO">DELETE Response : url=http://98.88.16.61:3000/produtos/B9AsuWE1BBxYWasA 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '135', 'Date': 'Fri, 12 Sep 2025 19:11:42 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Não é permitido excluir produto que faz parte de carrinho",
    "idCarrinhos": [
        "gJJYE32VwJOtciUJ"
    ]
} 
 </msg>
<msg time="2025-09-12T16:11:40.949076" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos/${produto_id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:40.748160" elapsed="0.200980"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:40.950733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:40.949952" elapsed="0.000867"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:40.951635" level="INFO">${body} = {'message': 'Não é permitido excluir produto que faz parte de carrinho', 'idCarrinhos': ['gJJYE32VwJOtciUJ']}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:40.951086" elapsed="0.000578"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:40.951891" elapsed="0.000176"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${body['message']}</arg>
<arg>faz parte de carrinho</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-09-12T16:11:40.952398" elapsed="0.000599"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:41.162237" level="INFO">DELETE Request : url=http://98.88.16.61:3000/carrinhos/cancelar-compra 
 path_url=/carrinhos/cancelar-compra 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQzMDAsImV4cCI6MTc1NzcwNDkwMH0.TBPZTe_hQYNLvQQ4sOddUrl6LGNcUlVCoeCaqWc5CUo', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:41.162444" level="INFO">DELETE Response : url=http://98.88.16.61:3000/carrinhos/cancelar-compra 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '86', 'Date': 'Fri, 12 Sep 2025 19:11:42 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso. Estoque dos produtos reabastecido"
} 
 </msg>
<arg>booker</arg>
<arg>/carrinhos/cancelar-compra</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:40.953398" elapsed="0.209275"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:41.369986" level="INFO">DELETE Request : url=http://98.88.16.61:3000/produtos/B9AsuWE1BBxYWasA 
 path_url=/produtos/B9AsuWE1BBxYWasA 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc3MDQzMDAsImV4cCI6MTc1NzcwNDkwMH0.TBPZTe_hQYNLvQQ4sOddUrl6LGNcUlVCoeCaqWc5CUo', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:41.370196" level="INFO">DELETE Response : url=http://98.88.16.61:3000/produtos/B9AsuWE1BBxYWasA 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 12 Sep 2025 19:11:42 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<arg>booker</arg>
<arg>/produtos/${produto_id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:41.164107" elapsed="0.206441"/>
</kw>
<doc>Produto vinculado a carrinho não pode ser excluído</doc>
<tag>negativo</tag>
<tag>P008</tag>
<tag>produtos</tag>
<status status="PASS" start="2025-09-12T16:11:40.281768" elapsed="1.089422"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-09-12T16:11:41.373050" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-09-12T16:11:41.372808" elapsed="0.000500"/>
</kw>
<status status="FAIL" start="2025-09-12T16:11:38.069010" elapsed="3.304430"/>
</suite>
<suite id="s1-s1-s7" name="Usuarios" source="C:\Users\ercli\IdeaProjects\COMPASS-UOL-PBAIJUN25\Documentos\Sprint 6\Semana 12\tests\suites\usuarios.robot">
<kw name="Create Session" owner="RequestsLibrary" type="SETUP">
<msg time="2025-09-12T16:11:41.390689" level="INFO">Creating Session using : alias=booker, url=http://98.88.16.61:3000, headers={'Content-Type': 'application/json', 'Accept': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>booker</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${BASE_HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-09-12T16:11:41.389684" elapsed="0.001455"/>
</kw>
<test id="s1-s1-s7-t1" name="U001 - Criar usuário válido" line="13">
<kw name="Generate Unique Email" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:41.394281" level="INFO">${uuid} = nKlHUoEh</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:41.393695" elapsed="0.000657"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:41.394968" level="INFO">${email} = testenKlHUoEh@qa.com</msg>
<var>${email}</var>
<arg>teste${uuid}@qa.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:41.394644" elapsed="0.000376"/>
</kw>
<return>
<value>${email}</value>
<status status="PASS" start="2025-09-12T16:11:41.395119" elapsed="0.000069"/>
</return>
<msg time="2025-09-12T16:11:41.395523" level="INFO">${email} = testenKlHUoEh@qa.com</msg>
<var>${email}</var>
<doc>Gera email único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:41.393200" elapsed="0.002412"/>
</kw>
<kw name="Generate Unique Name" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:41.397103" level="INFO">${uuid} = Fvd5kvgk</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:41.396726" elapsed="0.000425"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:41.397698" level="INFO">${name} = QA Test Fvd5kvgk</msg>
<var>${name}</var>
<arg>${prefix} ${uuid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:41.397351" elapsed="0.000398"/>
</kw>
<return>
<value>${name}</value>
<status status="PASS" start="2025-09-12T16:11:41.397862" elapsed="0.000070"/>
</return>
<msg time="2025-09-12T16:11:41.398244" level="INFO">${nome} = QA Test Fvd5kvgk</msg>
<var>${nome}</var>
<arg>QA Test</arg>
<doc>Gera nome único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:41.396222" elapsed="0.002093"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:41.399943" level="INFO">&amp;{usuario_data} = { nome=QA Test Fvd5kvgk | email=testenKlHUoEh@qa.com | password=qateste | administrador=true }</msg>
<var>&amp;{usuario_data}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=qateste</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:41.398984" elapsed="0.001027"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:41.817520" level="INFO">POST Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '109'} 
 body=b'{"nome": "QA Test Fvd5kvgk", "email": "testenKlHUoEh@qa.com", "password": "qateste", "administrador": "true"}' 
 </msg>
<msg time="2025-09-12T16:11:41.817681" level="INFO">POST Response : url=http://98.88.16.61:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 12 Sep 2025 19:11:42 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "Sem3TDMwz9vu3lTG"
} 
 </msg>
<msg time="2025-09-12T16:11:41.817986" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${usuario_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:41.400677" elapsed="0.417373"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:41.820267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:41.818795" elapsed="0.001642"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:41.821694" level="INFO">${body} = {'message': 'Cadastro realizado com sucesso', '_id': 'Sem3TDMwz9vu3lTG'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:41.820921" elapsed="0.000806"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:41.822219" elapsed="0.000337"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:41.823287" elapsed="0.000359"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:41.825070" level="INFO">${USUARIO_ID} = Sem3TDMwz9vu3lTG</msg>
<arg>${USUARIO_ID}</arg>
<arg>${body['_id']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-12T16:11:41.823985" elapsed="0.001189"/>
</kw>
<doc>Criar usuário com dados válidos deve retornar 201</doc>
<tag>smoke</tag>
<tag>U001</tag>
<tag>usuarios</tag>
<status status="PASS" start="2025-09-12T16:11:41.391350" elapsed="0.434343"/>
</test>
<test id="s1-s1-s7-t2" name="U006 - Buscar usuário por ID existente" line="32">
<kw name="Skip If" owner="BuiltIn">
<arg>'${USUARIO_ID}' == '${EMPTY}'</arg>
<arg>Usuário não foi criado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-12T16:11:41.827591" elapsed="0.000583"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:42.023796" level="INFO">GET Request : url=http://98.88.16.61:3000/usuarios/Sem3TDMwz9vu3lTG 
 path_url=/usuarios/Sem3TDMwz9vu3lTG 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:42.023934" level="INFO">GET Response : url=http://98.88.16.61:3000/usuarios/Sem3TDMwz9vu3lTG 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '158', 'Date': 'Fri, 12 Sep 2025 19:11:43 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "QA Test Fvd5kvgk",
    "email": "testenKlHUoEh@qa.com",
    "password": "qateste",
    "administrador": "true",
    "_id": "Sem3TDMwz9vu3lTG"
} 
 </msg>
<msg time="2025-09-12T16:11:42.024132" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/usuarios/${USUARIO_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:41.828468" elapsed="0.195710"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:42.024945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:42.024522" elapsed="0.000479"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:42.026209" level="INFO">${body} = {'nome': 'QA Test Fvd5kvgk', 'email': 'testenKlHUoEh@qa.com', 'password': 'qateste', 'administrador': 'true', '_id': 'Sem3TDMwz9vu3lTG'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:42.025384" elapsed="0.000858"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>nome</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:42.026461" elapsed="0.000136"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:42.026788" elapsed="0.000204"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>administrador</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:42.027362" elapsed="0.000436"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:42.028189" elapsed="0.000308"/>
</kw>
<doc>Buscar usuário por ID existente deve retornar 200</doc>
<tag>smoke</tag>
<tag>U006</tag>
<tag>usuarios</tag>
<status status="PASS" start="2025-09-12T16:11:41.826937" elapsed="0.201923"/>
</test>
<test id="s1-s1-s7-t3" name="U008 - Listar usuários" line="45">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:42.234001" level="INFO">GET Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:42.234165" level="INFO">GET Response : url=http://98.88.16.61:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '7443', 'Date': 'Fri, 12 Sep 2025 19:11:43 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 34,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Usuario PUT 5J8lp5Pq",
            "email": "testejKifj2RV@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "2oHQmf3N96mh2w9v"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeUfMmU4MG@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "54Yu7IdARkCnFvPV"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testesdRh3ysU@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "69Ob0UqwkGrwl5Yo"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeZU8PJf0G@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "7az1oGdXVqajYrsc"
        },
        {
            "nome": "Usuario PUT zbjgRh8h",
            "email": "testezsKzmbLK@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "ArhvKbyQInX3APHR"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeMqaAxJ1f@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "EGu58ncHRJkMNr3l"
        },
        {
            "nome": "Usuario PUT DQEO5AoE",
            "email": "testeS3ijkhgA@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "EZoRzRJY7g6NzrlO"
        },
        {
            "nome": "Usuario PUT FJvpg9vt",
            "email": "testeWLhXyuv4@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "GdPdF5yoO4owYVjF"
        },
        {
            "nome": "Usuario PUT exJT0fnY",
            "email": "testezg5eCxdz@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "KR7xhJiJv95BoHDE"
        },
        {
            "nome": "Usuario PUT P0THOMFE",
            "email": "testedb3beVYY@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "KTIgR7vWbejcZ3uV"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeOoT84KAA@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "LXrxOGPQ7tIS4QOM"
        },
        {
            "nome": "Usuario PUT J3nAIrWj",
            "email": "testejPf3Ce0r@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "P4Rr7w3qSRCYfYvi"
        },
        {
            "nome": "QA Test Fvd5kvgk",
            "email": "testenKlHUoEh@qa.com",
            "password": "qateste",
            "administrador": "true",
            "_id": "Sem3TDMwz9vu3lTG"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "teste6pdpx2RA@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "UNYaBocYpUJwfheQ"
        },
        {
            "nome": "João Silva",
            "email": "testel71G6NPh@qa.com",
            "password": "senha123",
            "administrador": "false",
            "_id": "Xm1byt2CaigNiwV1"
        },
        {
            "nome": "Usuario PUT B6MyDQW5",
            "email": "testehEpvSHLf@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "ZDrgjVyiZwz1fGHR"
        },
        {
            "nome": "Usuario PUT HyHqLKNs",
            "email": "testeDQ3OfnRA@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "aR8fAt5NDvXI6fJ2"
        },
        {
            "nome": "Pedro Costa",
            "email": "testenQzKAbZc@qa.com",
            "password": "senha789",
            "administrador": "false",
            "_id": "bCOeuoVi4DHrqKrF"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeSLbl2hvL@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "cSOKjqaBjrf3ducI"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeyLhAjAMZ@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "eCuboLI2DH7929G0"
        },
        {
            "nome": "Usuario Gmail",
            "email": "teste@gmail.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "eLXNHdt4ET7uQij0"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testelFvSWc0R@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "fMmSxVkaSVPyJ6uC"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeqvWIeaDU@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "fgbO6TmaLCFUybq7"
        },
        {
            "nome": "Usuario Hotmail",
            "email": "teste@hotmail.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "hyiaI0OH2kA6MsGd"
        },
        {
            "nome": "QA Test",
            "email": "qatest@qa.com.br",
            "password": "qateste",
            "administrador": "true",
            "_id": "iKVm2yXWmtvBFcPR"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testegDE7VgUz@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "ktYYlHGd6Nt5diM5"
        },
        {
            "nome": "Usuario PUT gHPlE8ex",
            "email": "testemofWh5CA@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "lmth1P6ttnVXT8Kd"
        },
        {
            "nome": "Usuario PUT Znfkmaic",
            "email": "testeLfTdFldz@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "u2jAmjFbucUxYmF7"
        },
        {
            "nome": "Maria Santos",
            "email": "testecQPdGBvd@qa.com",
            "password": "senha456",
            "administrador": "true",
            "_id": "uIN3JjKB9JzKMoTm"
        },
        {
            "nome": "Usuario PUT EyNOyzo6",
            "email": "testevstkPJgU@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "w4sB27C9QIK0y0UW"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "testeTTDlccTx@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "xZeENRCx7IwSA05d"
        },
        {
            "nome": "Usuario PUT BkcDcDfJ",
            "email": "testeH4jTZtKt@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "xbKhdKw31neyJ3wf"
        },
        {
            "nome": "Usuario Senha Curta",
            "email": "teste2p1NdNHj@qa.com",
            "password": "abcd",
            "administrador": "false",
            "_id": "yhAKhkOxeF71l5hd"
        }
    ]
} 
 </msg>
<msg time="2025-09-12T16:11:42.234609" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:42.030685" elapsed="0.203947"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:42.235453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:42.235017" elapsed="0.000481"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:42.236786" level="INFO">${body} = {'quantidade': 34, 'usuarios': [{'nome': 'Fulano da Silva', 'email': 'fulano@qa.com', 'password': 'teste', 'administrador': 'true', '_id': '0uxuPY0cbmQhpEz1'}, {'nome': 'Usuario PUT 5J8lp5Pq', 'email'...</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:42.235769" elapsed="0.001040"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>usuarios</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:42.237006" elapsed="0.000131"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>quantidade</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:42.237292" elapsed="0.000166"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${body['quantidade']} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:42.237746" elapsed="0.001641"/>
</kw>
<doc>Listar usuários deve retornar 200 e lista não vazia</doc>
<tag>smoke</tag>
<tag>U008</tag>
<tag>usuarios</tag>
<status status="PASS" start="2025-09-12T16:11:42.029789" elapsed="0.210111"/>
</test>
<test id="s1-s1-s7-t4" name="U009 - Deletar usuário existente" line="55">
<kw name="Skip If" owner="BuiltIn">
<arg>'${USUARIO_ID}' == '${EMPTY}'</arg>
<arg>Usuário não foi criado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-12T16:11:42.241308" elapsed="0.000727"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:42.442480" level="INFO">DELETE Request : url=http://98.88.16.61:3000/usuarios/Sem3TDMwz9vu3lTG 
 path_url=/usuarios/Sem3TDMwz9vu3lTG 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:42.442649" level="INFO">DELETE Response : url=http://98.88.16.61:3000/usuarios/Sem3TDMwz9vu3lTG 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 12 Sep 2025 19:11:43 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg time="2025-09-12T16:11:42.442855" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/usuarios/${USUARIO_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:42.242480" elapsed="0.200395"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:42.443649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:42.443226" elapsed="0.000485"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:42.444817" level="INFO">${body} = {'message': 'Registro excluído com sucesso'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:42.444055" elapsed="0.000795"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:42.445271" elapsed="0.000282"/>
</kw>
<doc>Deletar usuário existente deve retornar 200</doc>
<tag>smoke</tag>
<tag>U009</tag>
<tag>usuarios</tag>
<status status="PASS" start="2025-09-12T16:11:42.240568" elapsed="0.205293"/>
</test>
<test id="s1-s1-s7-t5" name="U002 - Impedir e-mail duplicado" line="65">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:42.448521" level="INFO">${email} = duplicado@qa.com</msg>
<var>${email}</var>
<arg>duplicado@qa.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:42.448113" elapsed="0.000529"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:42.449878" level="INFO">&amp;{usuario_dup1} = { nome=Usuario Duplicado 1 | email=duplicado@qa.com | password=teste123 | administrador=false }</msg>
<var>&amp;{usuario_dup1}</var>
<arg>nome=Usuario Duplicado 1</arg>
<arg>email=${email}</arg>
<arg>password=teste123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:42.449121" elapsed="0.000812"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:42.649107" level="INFO">POST Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "Usuario Duplicado 1", "email": "duplicado@qa.com", "password": "teste123", "administrador": "false"}' 
 </msg>
<msg time="2025-09-12T16:11:42.649253" level="INFO">POST Response : url=http://98.88.16.61:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 12 Sep 2025 19:11:43 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "W2Ui9zB2lj8zCR4t"
} 
 </msg>
<msg time="2025-09-12T16:11:42.649462" level="INFO">${resp1} = &lt;Response [201]&gt;</msg>
<var>${resp1}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${usuario_dup1}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:42.450276" elapsed="0.199231"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:42.650998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp1.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:42.650236" elapsed="0.000861"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:42.651930" level="INFO">&amp;{usuario_dup2} = { nome=Usuario Duplicado 2 | email=duplicado@qa.com | password=outra123 | administrador=false }</msg>
<var>&amp;{usuario_dup2}</var>
<arg>nome=Usuario Duplicado 2</arg>
<arg>email=${email}</arg>
<arg>password=outra123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:42.651456" elapsed="0.000602"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:42.854569" level="INFO">POST Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "Usuario Duplicado 2", "email": "duplicado@qa.com", "password": "outra123", "administrador": "false"}' 
 </msg>
<msg time="2025-09-12T16:11:42.854756" level="INFO">POST Response : url=http://98.88.16.61:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Fri, 12 Sep 2025 19:11:43 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg time="2025-09-12T16:11:42.854942" level="INFO">${resp2} = &lt;Response [400]&gt;</msg>
<var>${resp2}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${usuario_dup2}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:42.652452" elapsed="0.202532"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:42.857429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp2.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:42.856290" elapsed="0.001258"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:42.859110" level="INFO">${body} = {'message': 'Este email já está sendo usado'}</msg>
<var>${body}</var>
<arg>${resp2.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:42.858024" elapsed="0.001135"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:42.859875" elapsed="0.000266"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${body['message']}</arg>
<arg>já está sendo usado</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-09-12T16:11:42.860715" elapsed="0.000497"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-12T16:11:42.863133" level="INFO">${user_id} = W2Ui9zB2lj8zCR4t</msg>
<var>${user_id}</var>
<arg>${resp1.json()}</arg>
<arg>_id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-12T16:11:42.861816" elapsed="0.001366"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:43.076563" level="INFO">DELETE Request : url=http://98.88.16.61:3000/usuarios/W2Ui9zB2lj8zCR4t 
 path_url=/usuarios/W2Ui9zB2lj8zCR4t 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:43.076686" level="INFO">DELETE Response : url=http://98.88.16.61:3000/usuarios/W2Ui9zB2lj8zCR4t 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 12 Sep 2025 19:11:44 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<arg>booker</arg>
<arg>/usuarios/${user_id}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:42.866220" elapsed="0.210557"/>
</kw>
<doc>Criar usuário com email duplicado deve retornar 400</doc>
<tag>negativo</tag>
<tag>U002</tag>
<tag>usuarios</tag>
<status status="PASS" start="2025-09-12T16:11:42.446964" elapsed="0.644575"/>
</test>
<test id="s1-s1-s7-t6" name="U003 - Bloquear provedores proibidos" line="97">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:43.094032" level="INFO">&amp;{usuario_gmail} = { nome=Usuario Gmail | email=teste@gmail.com | password=teste123 | administrador=false }</msg>
<var>&amp;{usuario_gmail}</var>
<arg>nome=Usuario Gmail</arg>
<arg>email=teste@gmail.com</arg>
<arg>password=teste123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:43.093556" elapsed="0.000534"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:43.298603" level="INFO">POST Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '103'} 
 body=b'{"nome": "Usuario Gmail", "email": "teste@gmail.com", "password": "teste123", "administrador": "false"}' 
 </msg>
<msg time="2025-09-12T16:11:43.298703" level="INFO">POST Response : url=http://98.88.16.61:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Fri, 12 Sep 2025 19:11:44 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg time="2025-09-12T16:11:43.298887" level="INFO">${resp_gmail} = &lt;Response [400]&gt;</msg>
<var>${resp_gmail}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${usuario_gmail}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:43.094542" elapsed="0.204371"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:43.299973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp_gmail.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:43.299269" elapsed="0.000775"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:43.300838" level="INFO">${body_gmail} = {'message': 'Este email já está sendo usado'}</msg>
<var>${body_gmail}</var>
<arg>${resp_gmail.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:43.300302" elapsed="0.000570"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body_gmail}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:43.301183" elapsed="0.000173"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:43.301867" level="INFO">&amp;{usuario_hotmail} = { nome=Usuario Hotmail | email=teste@hotmail.com | password=teste123 | administrador=false }</msg>
<var>&amp;{usuario_hotmail}</var>
<arg>nome=Usuario Hotmail</arg>
<arg>email=teste@hotmail.com</arg>
<arg>password=teste123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:43.301599" elapsed="0.000301"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:43.500183" level="INFO">POST Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '107'} 
 body=b'{"nome": "Usuario Hotmail", "email": "teste@hotmail.com", "password": "teste123", "administrador": "false"}' 
 </msg>
<msg time="2025-09-12T16:11:43.500440" level="INFO">POST Response : url=http://98.88.16.61:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Fri, 12 Sep 2025 19:11:44 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg time="2025-09-12T16:11:43.500845" level="INFO">${resp_hotmail} = &lt;Response [400]&gt;</msg>
<var>${resp_hotmail}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${usuario_hotmail}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:43.302110" elapsed="0.198821"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:43.505511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp_hotmail.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:43.501993" elapsed="0.003734"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:43.508277" level="INFO">${body_hotmail} = {'message': 'Este email já está sendo usado'}</msg>
<var>${body_hotmail}</var>
<arg>${resp_hotmail.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:43.506905" elapsed="0.001469"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body_hotmail}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:43.509279" elapsed="0.000509"/>
</kw>
<doc>Bloquear cadastro com provedores gmail.com e hotmail.com</doc>
<tag>negativo</tag>
<tag>U003</tag>
<tag>usuarios</tag>
<status status="PASS" start="2025-09-12T16:11:43.092605" elapsed="0.417796"/>
</test>
<test id="s1-s1-s7-t7" name="U004 - Validar limites de senha" line="124">
<kw name="Generate Unique Email" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:43.515311" level="INFO">${uuid} = Dvykj7B6</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:43.514593" elapsed="0.000797"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:43.516175" level="INFO">${email} = testeDvykj7B6@qa.com</msg>
<var>${email}</var>
<arg>teste${uuid}@qa.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:43.515813" elapsed="0.000416"/>
</kw>
<return>
<value>${email}</value>
<status status="PASS" start="2025-09-12T16:11:43.516348" elapsed="0.000465"/>
</return>
<msg time="2025-09-12T16:11:43.517127" level="INFO">${email} = testeDvykj7B6@qa.com</msg>
<var>${email}</var>
<doc>Gera email único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:43.513975" elapsed="0.003199"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:43.518336" level="INFO">&amp;{usuario_senha_curta} = { nome=Usuario Senha Curta | email=testeDvykj7B6@qa.com | password=abcd | administrador=false }</msg>
<var>&amp;{usuario_senha_curta}</var>
<arg>nome=Usuario Senha Curta</arg>
<arg>email=${email}</arg>
<arg>password=abcd</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:43.517814" elapsed="0.000589"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:43.726086" level="INFO">POST Request : url=http://98.88.16.61:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "Usuario Senha Curta", "email": "testeDvykj7B6@qa.com", "password": "abcd", "administrador": "false"}' 
 </msg>
<msg time="2025-09-12T16:11:43.726320" level="INFO">POST Response : url=http://98.88.16.61:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 12 Sep 2025 19:11:44 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "8nJt1olJMO1g5M35"
} 
 </msg>
<msg time="2025-09-12T16:11:43.726864" level="INFO">${resp_curta} = &lt;Response [201]&gt;</msg>
<var>${resp_curta}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${usuario_senha_curta}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:43.518788" elapsed="0.208202"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:43.729198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-09-12T16:11:43.729563" level="FAIL">201 != 400</msg>
<arg>${resp_curta.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-09-12T16:11:43.727770" elapsed="0.002148">201 != 400</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${body_curta}</var>
<arg>${resp_curta.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:43.730502" elapsed="0.000131"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body_curta}</arg>
<arg>password</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:43.731267" elapsed="0.000117"/>
</kw>
<kw name="Generate Unique Email" owner="keywords">
<var>${email2}</var>
<doc>Gera email único usando UUID</doc>
<status status="NOT RUN" start="2025-09-12T16:11:43.732473" elapsed="0.000085"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>&amp;{usuario_senha_longa}</var>
<arg>nome=Usuario Senha Longa</arg>
<arg>email=${email2}</arg>
<arg>password=abcdefghijk</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:43.733363" elapsed="0.000069"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${resp_longa}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${usuario_senha_longa}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:43.734011" elapsed="0.000071"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${resp_longa.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:43.735075" elapsed="0.000081"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${body_longa}</var>
<arg>${resp_longa.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:43.735723" elapsed="0.000077"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body_longa}</arg>
<arg>password</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:43.736563" elapsed="0.000078"/>
</kw>
<doc>Validar senha com menos de 5 e mais de 10 caracteres</doc>
<tag>negativo</tag>
<tag>U004</tag>
<tag>usuarios</tag>
<status status="FAIL" start="2025-09-12T16:11:43.512664" elapsed="0.224748">201 != 400</status>
</test>
<test id="s1-s1-s7-t8" name="U005 - PUT cria quando ID não existe" line="154">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:43.742256" level="INFO">${id_inexistente} = 507f1f77bcf86cd799439011</msg>
<var>${id_inexistente}</var>
<arg>507f1f77bcf86cd799439011</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:43.741770" elapsed="0.000580"/>
</kw>
<kw name="Generate Unique Email" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:43.744477" level="INFO">${uuid} = wSXi0I2F</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:43.743754" elapsed="0.000807"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:43.746316" level="INFO">${email} = testewSXi0I2F@qa.com</msg>
<var>${email}</var>
<arg>teste${uuid}@qa.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:43.744876" elapsed="0.001556"/>
</kw>
<return>
<value>${email}</value>
<status status="PASS" start="2025-09-12T16:11:43.746847" elapsed="0.000198"/>
</return>
<msg time="2025-09-12T16:11:43.747983" level="INFO">${email} = testewSXi0I2F@qa.com</msg>
<var>${email}</var>
<doc>Gera email único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:43.743117" elapsed="0.004949"/>
</kw>
<kw name="Generate Unique Name" owner="keywords">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-12T16:11:43.750699" level="INFO">${uuid} = h3fy6Xiv</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-12T16:11:43.749930" elapsed="0.000870"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:43.751745" level="INFO">${name} = Usuario PUT h3fy6Xiv</msg>
<var>${name}</var>
<arg>${prefix} ${uuid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:43.751192" elapsed="0.000635"/>
</kw>
<return>
<value>${name}</value>
<status status="PASS" start="2025-09-12T16:11:43.751980" elapsed="0.000102"/>
</return>
<msg time="2025-09-12T16:11:43.752516" level="INFO">${nome} = Usuario PUT h3fy6Xiv</msg>
<var>${nome}</var>
<arg>Usuario PUT</arg>
<doc>Gera nome único usando UUID</doc>
<status status="PASS" start="2025-09-12T16:11:43.749026" elapsed="0.003571"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T16:11:43.754383" level="INFO">&amp;{usuario_put} = { nome=Usuario PUT h3fy6Xiv | email=testewSXi0I2F@qa.com | password=teste123 | administrador=false }</msg>
<var>&amp;{usuario_put}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=teste123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T16:11:43.753365" elapsed="0.001120"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:43.958280" level="INFO">PUT Request : url=http://98.88.16.61:3000/usuarios/507f1f77bcf86cd799439011 
 path_url=/usuarios/507f1f77bcf86cd799439011 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body=b'{"nome": "Usuario PUT h3fy6Xiv", "email": "testewSXi0I2F@qa.com", "password": "teste123", "administrador": "false"}' 
 </msg>
<msg time="2025-09-12T16:11:43.958453" level="INFO">PUT Response : url=http://98.88.16.61:3000/usuarios/507f1f77bcf86cd799439011 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 12 Sep 2025 19:11:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "DLzugiRxmeaoWthj"
} 
 </msg>
<msg time="2025-09-12T16:11:43.958683" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/usuarios/${id_inexistente}</arg>
<arg>json=${usuario_put}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:43.755305" elapsed="0.203434"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} in [200, 201]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-12T16:11:43.959498" elapsed="0.001226"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:43.963054" level="INFO">${body} = {'message': 'Cadastro realizado com sucesso', '_id': 'DLzugiRxmeaoWthj'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:43.961415" elapsed="0.001708"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T16:11:43.963581" elapsed="0.000326"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:44.166931" level="INFO">DELETE Request : url=http://98.88.16.61:3000/usuarios/507f1f77bcf86cd799439011 
 path_url=/usuarios/507f1f77bcf86cd799439011 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:44.167104" level="INFO">DELETE Response : url=http://98.88.16.61:3000/usuarios/507f1f77bcf86cd799439011 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '46', 'Date': 'Fri, 12 Sep 2025 19:11:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Nenhum registro excluído"
} 
 </msg>
<arg>booker</arg>
<arg>/usuarios/${id_inexistente}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:43.964330" elapsed="0.203056"/>
</kw>
<doc>PUT em ID inexistente deve criar novo usuário</doc>
<tag>smoke</tag>
<tag>U005</tag>
<tag>usuarios</tag>
<status status="PASS" start="2025-09-12T16:11:43.739109" elapsed="0.429345"/>
</test>
<test id="s1-s1-s7-t9" name="U007 - Impedir operações com usuário inexistente" line="175">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:44.172330" level="INFO">${id_inexistente} = 507f1f77bcf86cd799439012</msg>
<var>${id_inexistente}</var>
<arg>507f1f77bcf86cd799439012</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:44.171850" elapsed="0.000555"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-12T16:11:44.380702" level="INFO">GET Request : url=http://98.88.16.61:3000/usuarios/507f1f77bcf86cd799439012 
 path_url=/usuarios/507f1f77bcf86cd799439012 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-12T16:11:44.380848" level="INFO">GET Response : url=http://98.88.16.61:3000/usuarios/507f1f77bcf86cd799439012 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '67', 'Date': 'Fri, 12 Sep 2025 19:11:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "id": "id deve ter exatamente 16 caracteres alfanuméricos"
} 
 </msg>
<msg time="2025-09-12T16:11:44.381128" level="INFO">${resp_get} = &lt;Response [400]&gt;</msg>
<var>${resp_get}</var>
<arg>booker</arg>
<arg>/usuarios/${id_inexistente}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T16:11:44.173280" elapsed="0.207916"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T16:11:44.382853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp_get.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T16:11:44.381771" elapsed="0.001217"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T16:11:44.384626" level="INFO">${body_get} = {'id': 'id deve ter exatamente 16 caracteres alfanuméricos'}</msg>
<var>${body_get}</var>
<arg>${resp_get.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T16:11:44.383446" elapsed="0.001245"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<msg time="2025-09-12T16:11:44.385670" level="FAIL">Dictionary does not contain key 'message'.</msg>
<arg>${body_get}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="FAIL" start="2025-09-12T16:11:44.385215" elapsed="0.000591">Dictionary does not contain key 'message'.</status>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${body_get['message']}</arg>
<arg>não encontrado</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:44.386106" elapsed="0.000033"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<var>${resp_del}</var>
<arg>booker</arg>
<arg>/usuarios/${id_inexistente}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:44.386465" elapsed="0.000053"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${resp_del.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:44.386960" elapsed="0.000039"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${body_del}</var>
<arg>${resp_del.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:44.387258" elapsed="0.000046"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<var>${has_message}</var>
<arg>Dictionary Should Contain Key</arg>
<arg>${body_del}</arg>
<arg>message</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:44.387872" elapsed="0.000029"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${has_message}</arg>
<arg>Should Contain</arg>
<arg>${body_del['message']}</arg>
<arg>não encontrado</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>Resposta sem campo message: ${body_del}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2025-09-12T16:11:44.388115" elapsed="0.000025"/>
</kw>
<doc>Operações com ID inexistente devem retornar 400</doc>
<tag>negativo</tag>
<tag>U007</tag>
<tag>usuarios</tag>
<status status="FAIL" start="2025-09-12T16:11:44.169960" elapsed="0.218445">Dictionary does not contain key 'message'.</status>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-09-12T16:11:44.390682" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-09-12T16:11:44.390465" elapsed="0.000354"/>
</kw>
<status status="FAIL" start="2025-09-12T16:11:41.376161" elapsed="3.014738"/>
</suite>
<status status="FAIL" start="2025-09-12T16:11:24.503999" elapsed="19.888382"/>
</suite>
<status status="FAIL" start="2025-09-12T16:11:24.473333" elapsed="19.921317"/>
</suite>
<statistics>
<total>
<stat pass="33" fail="4" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">C001</stat>
<stat pass="1" fail="0" skip="0">C002</stat>
<stat pass="1" fail="0" skip="0">C003</stat>
<stat pass="1" fail="0" skip="0">C004</stat>
<stat pass="1" fail="0" skip="0">C005</stat>
<stat pass="1" fail="0" skip="0">C006</stat>
<stat pass="6" fail="0" skip="0">carrinhos</stat>
<stat pass="1" fail="0" skip="0">cleanup</stat>
<stat pass="2" fail="0" skip="0">data-driven</stat>
<stat pass="1" fail="0" skip="0">DD001</stat>
<stat pass="1" fail="0" skip="0">DD002</stat>
<stat pass="1" fail="0" skip="0">DD003</stat>
<stat pass="1" fail="0" skip="0">H001</stat>
<stat pass="1" fail="0" skip="0">H002</stat>
<stat pass="2" fail="0" skip="0">health</stat>
<stat pass="1" fail="0" skip="0">I001</stat>
<stat pass="1" fail="0" skip="0">I002</stat>
<stat pass="1" fail="0" skip="0">I003</stat>
<stat pass="2" fail="0" skip="0">integration</stat>
<stat pass="1" fail="0" skip="0">L001</stat>
<stat pass="1" fail="0" skip="0">L002</stat>
<stat pass="1" fail="0" skip="0">L003</stat>
<stat pass="1" fail="0" skip="0">L004</stat>
<stat pass="1" fail="0" skip="0">L005</stat>
<stat pass="5" fail="0" skip="0">login</stat>
<stat pass="10" fail="3" skip="0">negativo</stat>
<stat pass="1" fail="0" skip="0">P001</stat>
<stat pass="1" fail="0" skip="0">P002</stat>
<stat pass="0" fail="1" skip="0">P003</stat>
<stat pass="1" fail="0" skip="0">P004</stat>
<stat pass="1" fail="0" skip="0">P005</stat>
<stat pass="0" fail="1" skip="0">P006</stat>
<stat pass="1" fail="0" skip="0">P007</stat>
<stat pass="1" fail="0" skip="0">P008</stat>
<stat pass="2" fail="0" skip="0">performance</stat>
<stat pass="7" fail="2" skip="0">produtos</stat>
<stat pass="1" fail="0" skip="0">setup</stat>
<stat pass="17" fail="1" skip="0">smoke</stat>
<stat pass="1" fail="0" skip="0">U001</stat>
<stat pass="1" fail="0" skip="0">U002</stat>
<stat pass="1" fail="0" skip="0">U003</stat>
<stat pass="0" fail="1" skip="0">U004</stat>
<stat pass="1" fail="0" skip="0">U005</stat>
<stat pass="1" fail="0" skip="0">U006</stat>
<stat pass="0" fail="1" skip="0">U007</stat>
<stat pass="1" fail="0" skip="0">U008</stat>
<stat pass="1" fail="0" skip="0">U009</stat>
<stat pass="8" fail="2" skip="0">usuarios</stat>
</tag>
<suite>
<stat name="Tests" id="s1" pass="33" fail="4" skip="0">Tests</stat>
<stat name="Suites" id="s1-s1" pass="33" fail="4" skip="0">Tests.Suites</stat>
<stat name="Carrinhos" id="s1-s1-s1" pass="6" fail="0" skip="0">Tests.Suites.Carrinhos</stat>
<stat name="Data Driven" id="s1-s1-s2" pass="3" fail="0" skip="0">Tests.Suites.Data Driven</stat>
<stat name="Health" id="s1-s1-s3" pass="2" fail="0" skip="0">Tests.Suites.Health</stat>
<stat name="Integracao" id="s1-s1-s4" pass="3" fail="0" skip="0">Tests.Suites.Integracao</stat>
<stat name="Login" id="s1-s1-s5" pass="6" fail="0" skip="0">Tests.Suites.Login</stat>
<stat name="Produtos" id="s1-s1-s6" pass="6" fail="2" skip="0">Tests.Suites.Produtos</stat>
<stat name="Usuarios" id="s1-s1-s7" pass="7" fail="2" skip="0">Tests.Suites.Usuarios</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
