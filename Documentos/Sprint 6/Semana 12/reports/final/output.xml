<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.13.2 on win32)" generated="2025-09-09T16:56:35.557885" rpa="false" schemaversion="5">
<suite id="s1" name="Suites" source="c:\Users\ercli\IdeaProjects\COMPASS-UOL-PBAIJUN25\Documentos\Sprint 6\Semana 12\tests\suites">
<suite id="s1-s1" name="Health" source="c:\Users\ercli\IdeaProjects\COMPASS-UOL-PBAIJUN25\Documentos\Sprint 6\Semana 12\tests\suites\health.robot">
<kw name="Create Session" owner="RequestsLibrary" type="SETUP">
<msg time="2025-09-09T16:56:35.687690" level="INFO">Creating Session using : alias=booker, url=http://54.147.59.9:3000, headers={'Content-Type': 'application/json', 'Accept': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>booker</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${BASE_HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-09-09T16:56:35.687388" elapsed="0.000498"/>
</kw>
<test id="s1-s1-t1" name="SRV-health-200-positivo" line="7">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:56:36.235587" level="INFO">GET Request : url=http://54.147.59.9:3000/status 
 path_url=/status 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-09T16:56:36.235974" level="INFO">GET Response : url=http://54.147.59.9:3000/status 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'text/html; charset=utf-8', 'Content-Length': '15999', 'Date': 'Tue, 09 Sep 2025 19:56:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body=&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;ServeRest Status&lt;/title&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.2.2/Chart.bundle.min.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.4.5/socket.io.min.js"&gt;&lt;/script&gt;
    &lt;style&gt;
      * {
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
}

body.hide-cpu .container.cpu,
body.hide-mem .container.mem,
body.hide-load .container.load,
body.hide-responseTime .container.responseTime,
body.hide-rps .container.rps,
body.hide-statusCodes .container.statusCodes {
  display: none;
}

h1 {
  font-size: 3em;
  color: #222;
  margin: 0;
}

h5 {
  margin: 0;
  color: #888;
}

h6 {
  margin: 0;
}

p {
  font-size: 0.7em;
  color: #888;
}

span {
  cursor: pointer;
  font-size: 10px;
  margin-left: 5px;
  border: 1px solid #DDD;
  padding: 3px 10px 4px 10px;
}

canvas {
  width: 400px;
  height: 100px;
}

.content {
  width: 600px;
  margin: auto;
}

.active {
  background: #eeeeee;
}

.stats-column {
  flex: 0 0 200px;
}

.container {
  display: flex;
  flex-direction: row;
  margin-top: 20px;
  height: 100px;
}

.chart-container {
  width: 400px;
  height: 100px;
}

.container.healthChecks {
  display: block;
  height: auto;
}

.health-check-row {
  align-items: center;
  border: 1px solid #eee;
  border-radius: 4px;
  display: flex;
  margin: 0 0 10px 0;
  width: 100%;
}

.health-check-title-column {
  flex: 0 0 400px;
  display: flex;
  align-items: center;
  padding: 0 10px;
}

.health-check-title-column h5 a {
  color: #888;
  cursor: pointer;
  text-decoration: none;
}

.health-check-title-column h5 a:hover {
  text-decoration: underline;
}

.health-check-status-container {
  align-items: center;
  border-radius: 0 4px 4px 0;
  display: flex;
  justify-content: center;
  height: 2em;
  text-align: center;
  width: 200px;
}

.health-check-status-container.ok {
  background: #75D701;
}

.health-check-status-container.failed {
  background: #E53A40;
}

.health-check-status-container h1 {
  line-height: 2em;
  font-size: 1.5em;
  color: #fff;
  text-align: center;
  text-transform: uppercase;
}

.footer {
  text-align: center;
}

.span-controls {
  float: right;
}

.status-code {
  margin-top: 2px;
}

.status-code:before {
  content: '';
  display: inline-block;
  width: 8px;
  height: 8px;
  border-radius: 8px;
  margin-right: 10px;
}

.status-code-2xx:before {
  background-color: #75D701;
}

.status-code-3xx:before {
  background-color: #47b8e0;
}

.status-code-4xx:before {
  background-color: #ffc952;
}

.status-code-5xx:before {
  background-color: #E53A40;
}

    &lt;/style&gt;
  &lt;/head&gt;
  &lt;body class=""&gt;
    &lt;div class="content"&gt;
      &lt;div class="header"&gt;
        &lt;b&gt;ServeRest Status&lt;/b&gt;
        &lt;div id="span-controls" class="span-controls"&gt;&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container cpu"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;CPU Usage&lt;/h5&gt;
          &lt;h1 id="cpuStat"&gt;- %&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="cpuChart" width="400" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container mem"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Memory Usage&lt;/h5&gt;
          &lt;h1 id="memStat"&gt;- %&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="memChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container heap-size"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Heap Usage&lt;/h5&gt;
          &lt;h1 id="heapStat"&gt;- %&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="heapChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container load"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;One Minute Load Avg&lt;/h5&gt;
          &lt;h1 id="loadStat"&gt;-&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="loadChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container eventLoop"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Spent in Event Loop&lt;/h5&gt;
          &lt;h1 id="eventLoopStat"&gt;ms&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="eventLoopChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container responseTime"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Response Time&lt;/h5&gt;
          &lt;h1 id="responseTimeStat"&gt;-&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="responseTimeChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container rps"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Requests per Second&lt;/h5&gt;
          &lt;h1 id="rpsStat"&gt;-&lt;/h1&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="rpsChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container statusCodes"&gt;
        &lt;div class="stats-column"&gt;
          &lt;h5&gt;Status Codes&lt;/h5&gt;
          &lt;h6 class="status-code status-code-2xx"&gt;2xx&lt;/h6&gt;
          &lt;h6 class="status-code status-code-3xx"&gt;3xx&lt;/h6&gt;
          &lt;h6 class="status-code status-code-4xx"&gt;4xx&lt;/h6&gt;
          &lt;h6 class="status-code status-code-5xx"&gt;5xx&lt;/h6&gt;
        &lt;/div&gt;
        &lt;div class="chart-container"&gt;
          &lt;canvas id="statusCodesChart" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="container healthChecks"&gt;
      &lt;/div&gt;
      &lt;div class="footer"&gt;
        &lt;p&gt;Status page made by &lt;a href="https://dynobase.dev"&gt;Dynobase&lt;/a&gt; with &amp;#9829; with Socket.io &amp; Chart.js&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;script&gt;
      var port = '';
      var socketPath = '/socket.io';
      /*
  eslint-disable no-plusplus, no-var, strict, vars-on-top, prefer-template,
  func-names, prefer-arrow-callback, no-loop-func
*/
/* global Chart, location, document, port, socketPath, parseInt, io */

'use strict';

Chart.defaults.global.defaultFontSize = 8;
Chart.defaults.global.animation.duration = 500;
Chart.defaults.global.legend.display = false;
Chart.defaults.global.elements.line.backgroundColor = 'rgba(0,0,0,0)';
Chart.defaults.global.elements.line.borderColor = 'rgba(0,0,0,0.9)';
Chart.defaults.global.elements.line.borderWidth = 2;

var socket = io(location.protocol + '//' + location.hostname + ':' + (port || location.port), {
  path: socketPath,
});
var defaultSpan = 0;
var spans = [];
var statusCodesColors = ['#75D701', '#47b8e0', '#ffc952', '#E53A40'];

var defaultDataset = {
  label: '',
  data: [],
  lineTension: 0.2,
  pointRadius: 0,
};

var defaultOptions = {
  scales: {
    yAxes: [
      {
        ticks: {
          beginAtZero: true,
        },
      },
    ],
    xAxes: [
      {
        type: 'time',
        time: {
          unitStepSize: 30,
        },
        gridLines: {
          display: false,
        },
      },
    ],
  },
  tooltips: {
    enabled: false,
  },
  responsive: true,
  maintainAspectRatio: false,
  animation: false,
};

var createChart = function (ctx, dataset) {
  return new Chart(ctx, {
    type: 'line',
    data: {
      labels: [],
      datasets: dataset,
    },
    options: defaultOptions,
  });
};

var addTimestamp = function (point) {
  return point.timestamp;
};

var cpuDataset = [Object.create(defaultDataset)];
var memDataset = [Object.create(defaultDataset)];
var loadDataset = [Object.create(defaultDataset)];
var heapDataset = [Object.create(defaultDataset)];
var eventLoopDataset = [Object.create(defaultDataset)];
var responseTimeDataset = [Object.create(defaultDataset)];
var rpsDataset = [Object.create(defaultDataset)];

var cpuStat = document.getElementById('cpuStat');
var memStat = document.getElementById('memStat');
var loadStat = document.getElementById('loadStat');
var heapStat = document.getElementById('heapStat');
var eventLoopStat = document.getElementById('eventLoopStat');
var responseTimeStat = document.getElementById('responseTimeStat');
var rpsStat = document.getElementById('rpsStat');

var cpuChartCtx = document.getElementById('cpuChart');
var memChartCtx = document.getElementById('memChart');
var loadChartCtx = document.getElementById('loadChart');
var heapChartCtx = document.getElementById('heapChart');
var eventLoopChartCtx = document.getElementById('eventLoopChart');
var responseTimeChartCtx = document.getElementById('responseTimeChart');
var rpsChartCtx = document.getElementById('rpsChart');
var statusCodesChartCtx = document.getElementById('statusCodesChart');

var cpuChart = createChart(cpuChartCtx, cpuDataset);
var memChart = createChart(memChartCtx, memDataset);
var heapChart = createChart(heapChartCtx, heapDataset);
var eventLoopChart = createChart(eventLoopChartCtx, eventLoopDataset);
var loadChart = createChart(loadChartCtx, loadDataset);
var responseTimeChart = createChart(responseTimeChartCtx, responseTimeDataset);
var rpsChart = createChart(rpsChartCtx, rpsDataset);
var statusCodesChart = new Chart(statusCodesChartCtx, {
  type: 'line',
  data: {
    labels: [],
    datasets: [
      Object.create(defaultDataset),
      Object.create(defaultDataset),
      Object.create(defaultDataset),
      Object.create(defaultDataset),
    ],
  },
  options: defaultOptions,
});

statusCodesChart.data.datasets.forEach(function (dataset, index) {
  dataset.borderColor = statusCodesColors[index];
});

var charts = [
  cpuChart,
  memChart,
  loadChart,
  responseTimeChart,
  rpsChart,
  statusCodesChart,
  heapChart,
  eventLoopChart,
];

var onSpanChange = function (e) {
  e.target.classList.add('active');
  defaultSpan = parseInt(e.target.id, 10);

  var otherSpans = document.getElementsByTagName('span');

  for (var i = 0; i &lt; otherSpans.length; i++) {
    if (otherSpans[i] !== e.target) otherSpans[i].classList.remove('active');
  }

  socket.emit('esm_change');
};

socket.on('esm_start', function (data) {
  // Remove last element of Array because it contains malformed responses data.
  // To keep consistency we also remove os data.
  data[defaultSpan].responses.pop();
  da... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2025-09-09T16:56:36.237068" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>${HEALTH_PATH}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:56:35.688458" elapsed="0.548679"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-09T16:56:36.238446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-09T16:56:36.237441" elapsed="0.001137"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Dictionary Should Contain Key">
<msg time="2025-09-09T16:56:36.240663" level="FAIL">No keyword with name 'Dictionary Should Contain Key' found.</msg>
<arg>${resp.json()}</arg>
<arg>status</arg>
<status status="FAIL" start="2025-09-09T16:56:36.240592" elapsed="0.000162">No keyword with name 'Dictionary Should Contain Key' found.</status>
</kw>
<arg>Dictionary Should Contain Key</arg>
<arg>${resp.json()}</arg>
<arg>status</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-09-09T16:56:36.238818" elapsed="0.002077"/>
</kw>
<doc>Verifica se o endpoint de saúde retorna 200</doc>
<tag>health</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-09T16:56:35.688084" elapsed="0.553093"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-09-09T16:56:36.242420" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-09-09T16:56:36.242302" elapsed="0.000220"/>
</kw>
<status status="PASS" start="2025-09-09T16:56:35.588023" elapsed="0.654544"/>
</suite>
<suite id="s1-s2" name="Login" source="c:\Users\ercli\IdeaProjects\COMPASS-UOL-PBAIJUN25\Documentos\Sprint 6\Semana 12\tests\suites\login.robot">
<kw name="Create Session" owner="RequestsLibrary" type="SETUP">
<msg time="2025-09-09T16:56:36.254426" level="INFO">Creating Session using : alias=booker, url=http://54.147.59.9:3000, headers={'Content-Type': 'application/json', 'Accept': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>booker</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${BASE_HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-09-09T16:56:36.254206" elapsed="0.000378"/>
</kw>
<test id="s1-s2-t1" name="SRV-login-token-positivo" line="21">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:56:36.624885" level="INFO">POST Request : url=http://54.147.59.9:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '52'} 
 body=b'{"email": "qatest@qa.com.br", "password": "qateste"}' 
 </msg>
<msg time="2025-09-09T16:56:36.624987" level="INFO">POST Response : url=http://54.147.59.9:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '272', 'Date': 'Tue, 09 Sep 2025 19:56:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc0NDc3OTYsImV4cCI6MTc1NzQ0ODM5Nn0.OaQQ4WL0wyoveX3DmjKLrnleHb3HqRb6domhdwrNL5g"
} 
 </msg>
<msg time="2025-09-09T16:56:36.625159" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/login</arg>
<arg>json=${LOGIN_VAL}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:56:36.255005" elapsed="0.370183"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-09T16:56:36.626117" level="INFO">Login response: 200 - {
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc0NDc3OTYsImV4cCI6MTc1NzQ0ODM5Nn0.OaQQ4WL0wyoveX3DmjKLrnleHb3HqRb6domhdwrNL5g"
}</msg>
<arg>Login response: ${resp.status_code} - ${resp.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-09T16:56:36.625376" elapsed="0.000805"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} in [200, 401]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-09T16:56:36.626331" elapsed="0.000382"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${resp.json()}</arg>
<arg>authorization</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-09T16:56:36.627180" elapsed="0.000387"/>
</kw>
<arg>${resp.status_code} == 200</arg>
<arg>Dictionary Should Contain Key</arg>
<arg>${resp.json()}</arg>
<arg>authorization</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-09-09T16:56:36.626823" elapsed="0.000791"/>
</kw>
<doc>Login válido deve retornar token de autorização</doc>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-09T16:56:36.254657" elapsed="0.373046"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-09-09T16:56:36.628157" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-09-09T16:56:36.628055" elapsed="0.000176"/>
</kw>
<status status="PASS" start="2025-09-09T16:56:36.243130" elapsed="0.385129"/>
</suite>
<suite id="s1-s3" name="Produtos" source="c:\Users\ercli\IdeaProjects\COMPASS-UOL-PBAIJUN25\Documentos\Sprint 6\Semana 12\tests\suites\produtos.robot">
<kw name="Create Session" owner="RequestsLibrary" type="SETUP">
<msg time="2025-09-09T16:56:36.638092" level="INFO">Creating Session using : alias=booker, url=http://54.147.59.9:3000, headers={'Content-Type': 'application/json', 'Accept': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>booker</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${BASE_HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-09-09T16:56:36.637863" elapsed="0.000362"/>
</kw>
<test id="s1-s3-t1" name="SRV-produtos-criar-positivo" line="29">
<kw name="Get Auth Token">
<kw name="Setup Admin User">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-09T16:56:36.639823" level="INFO">&amp;{admin_user} = { nome=QA Test | email=qatest@qa.com.br | password=qateste | administrador=true }</msg>
<var>&amp;{admin_user}</var>
<arg>nome=QA Test</arg>
<arg>email=qatest@qa.com.br</arg>
<arg>password=qateste</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-09T16:56:36.639539" elapsed="0.000319"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:56:37.012103" level="INFO">POST Request : url=http://54.147.59.9:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '96'} 
 body=b'{"nome": "QA Test", "email": "qatest@qa.com.br", "password": "qateste", "administrador": "true"}' 
 </msg>
<msg time="2025-09-09T16:56:37.012260" level="INFO">POST Response : url=http://54.147.59.9:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Tue, 09 Sep 2025 19:56:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg time="2025-09-09T16:56:37.012553" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${admin_user}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:56:36.640028" elapsed="0.372558"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} in [201, 400]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-09T16:56:37.012739" elapsed="0.000551"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-09T16:56:37.013839" level="INFO">Admin user setup: 400</msg>
<arg>Admin user setup: ${resp.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-09T16:56:37.013426" elapsed="0.000458"/>
</kw>
<status status="PASS" start="2025-09-09T16:56:36.639235" elapsed="0.374721"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-09T16:56:37.014320" level="INFO">&amp;{login_data} = { email=qatest@qa.com.br | password=qateste }</msg>
<var>&amp;{login_data}</var>
<arg>email=qatest@qa.com.br</arg>
<arg>password=qateste</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-09T16:56:37.014079" elapsed="0.000282"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:56:37.196803" level="INFO">POST Request : url=http://54.147.59.9:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '52'} 
 body=b'{"email": "qatest@qa.com.br", "password": "qateste"}' 
 </msg>
<msg time="2025-09-09T16:56:37.196952" level="INFO">POST Response : url=http://54.147.59.9:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '272', 'Date': 'Tue, 09 Sep 2025 19:56:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc0NDc3OTYsImV4cCI6MTc1NzQ0ODM5Nn0.OaQQ4WL0wyoveX3DmjKLrnleHb3HqRb6domhdwrNL5g"
} 
 </msg>
<msg time="2025-09-09T16:56:37.197144" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/login</arg>
<arg>json=${login_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:56:37.014499" elapsed="0.182687"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-09T16:56:37.198180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-09T16:56:37.197427" elapsed="0.000852"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-09-09T16:56:37.199139" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc0NDc3OTYsImV4cCI6MTc1NzQ0ODM5Nn0.OaQQ4WL0wyoveX3DmjKLrnleHb3HqRb6domhdwrNL5g</msg>
<var>${token}</var>
<arg>${resp.json()}</arg>
<arg>authorization</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-09-09T16:56:37.198453" elapsed="0.000722"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-09T16:56:37.199580" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc0NDc3OTYsImV4cCI6MTc1NzQ0ODM5Nn0.OaQQ4WL0wyoveX3DmjKLrnleHb3HqRb6domhdwrNL5g</msg>
<arg>${AUTH_TOKEN}</arg>
<arg>${token}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-09T16:56:37.199323" elapsed="0.000307"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2025-09-09T16:56:37.199701" elapsed="0.000075"/>
</return>
<msg time="2025-09-09T16:56:37.199955" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc0NDc3OTYsImV4cCI6MTc1NzQ0ODM5Nn0.OaQQ4WL0wyoveX3DmjKLrnleHb3HqRb6domhdwrNL5g</msg>
<var>${token}</var>
<status status="PASS" start="2025-09-09T16:56:36.638863" elapsed="0.561140"/>
</kw>
<kw name="Generate Random String" owner="String">
<msg time="2025-09-09T16:56:37.200449" level="INFO">${uuid} = lNTL6Si5</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-09T16:56:37.200138" elapsed="0.000345"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-09T16:56:37.200977" level="INFO">&amp;{produto_data} = { nome=Produto Teste lNTL6Si5 | preco=100 | descricao=Produto para teste automatizado | quantidade=50 }</msg>
<var>&amp;{produto_data}</var>
<arg>nome=Produto Teste ${uuid}</arg>
<arg>preco=100</arg>
<arg>descricao=Produto para teste automatizado</arg>
<arg>quantidade=50</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-09T16:56:37.200640" elapsed="0.000372"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-09T16:56:37.201445" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc0ND...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-09T16:56:37.201172" elapsed="0.000306"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:56:37.387805" level="INFO">POST Request : url=http://54.147.59.9:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc0NDc3OTYsImV4cCI6MTc1NzQ0ODM5Nn0.OaQQ4WL0wyoveX3DmjKLrnleHb3HqRb6domhdwrNL5g', 'Content-Length': '118'} 
 body=b'{"nome": "Produto Teste lNTL6Si5", "preco": "100", "descricao": "Produto para teste automatizado", "quantidade": "50"}' 
 </msg>
<msg time="2025-09-09T16:56:37.387989" level="INFO">POST Response : url=http://54.147.59.9:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Tue, 09 Sep 2025 19:56:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ZBJDGZ67Qu9JRNaD"
} 
 </msg>
<msg time="2025-09-09T16:56:37.388410" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos</arg>
<arg>json=${produto_data}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:56:37.201602" elapsed="0.186873"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-09T16:56:37.389850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-09T16:56:37.388779" elapsed="0.001191"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-09T16:56:37.391157" level="INFO">${body} = {'message': 'Cadastro realizado com sucesso', '_id': 'ZBJDGZ67Qu9JRNaD'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-09T16:56:37.390240" elapsed="0.000964"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-09T16:56:37.391382" elapsed="0.000240"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-09T16:56:37.392678" level="INFO">${PRODUTO_ID} = ZBJDGZ67Qu9JRNaD</msg>
<arg>${PRODUTO_ID}</arg>
<arg>${body['_id']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-09T16:56:37.391804" elapsed="0.000949"/>
</kw>
<doc>Criar produto com nome único deve retornar 201</doc>
<tag>produtos</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-09T16:56:36.638308" elapsed="0.754615"/>
</test>
<test id="s1-s3-t2" name="SRV-produtos-listar-positivo" line="52">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:56:37.579541" level="INFO">GET Request : url=http://54.147.59.9:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-09T16:56:37.579729" level="INFO">GET Response : url=http://54.147.59.9:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '656', 'Date': 'Tue, 09 Sep 2025 19:56:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 3,
    "produtos": [
        {
            "nome": "Logitech MX Vertical",
            "preco": 470,
            "descricao": "Mouse",
            "quantidade": 382,
            "_id": "BeeJh5lz3k6kSIzA"
        },
        {
            "nome": "Samsung 60 polegadas",
            "preco": 5240,
            "descricao": "TV",
            "quantidade": 49977,
            "_id": "K6leHdftCeOJj8BJ"
        },
        {
            "nome": "Produto Teste lNTL6Si5",
            "preco": 100,
            "descricao": "Produto para teste automatizado",
            "quantidade": 50,
            "_id": "ZBJDGZ67Qu9JRNaD"
        }
    ]
} 
 </msg>
<msg time="2025-09-09T16:56:37.579994" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:56:37.393796" elapsed="0.186256"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-09T16:56:37.581298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-09T16:56:37.580327" elapsed="0.001110"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-09T16:56:37.582690" level="INFO">${body} = {'quantidade': 3, 'produtos': [{'nome': 'Logitech MX Vertical', 'preco': 470, 'descricao': 'Mouse', 'quantidade': 382, '_id': 'BeeJh5lz3k6kSIzA'}, {'nome': 'Samsung 60 polegadas', 'preco': 5240, 'desc...</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-09T16:56:37.581696" elapsed="0.001052"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>produtos</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-09T16:56:37.582960" elapsed="0.000294"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>len($body['produtos']) &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-09T16:56:37.583456" elapsed="0.000502"/>
</kw>
<doc>Listar produtos deve retornar 200 e lista</doc>
<tag>produtos</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-09T16:56:37.393271" elapsed="0.190919"/>
</test>
<test id="s1-s3-t3" name="SRV-produtos-obter-por-id-positivo" line="61">
<kw name="Skip If" owner="BuiltIn">
<arg>'${PRODUTO_ID}' == '${EMPTY}'</arg>
<arg>Produto não foi criado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-09T16:56:37.585342" elapsed="0.001451"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:56:37.771785" level="INFO">GET Request : url=http://54.147.59.9:3000/produtos/ZBJDGZ67Qu9JRNaD 
 path_url=/produtos/ZBJDGZ67Qu9JRNaD 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-09T16:56:37.771965" level="INFO">GET Response : url=http://54.147.59.9:3000/produtos/ZBJDGZ67Qu9JRNaD 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '163', 'Date': 'Tue, 09 Sep 2025 19:56:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Produto Teste lNTL6Si5",
    "preco": 100,
    "descricao": "Produto para teste automatizado",
    "quantidade": 50,
    "_id": "ZBJDGZ67Qu9JRNaD"
} 
 </msg>
<msg time="2025-09-09T16:56:37.772209" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos/${PRODUTO_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:56:37.587227" elapsed="0.185039"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-09T16:56:37.773579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-09T16:56:37.772598" elapsed="0.001105"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-09T16:56:37.774941" level="INFO">${body} = {'nome': 'Produto Teste lNTL6Si5', 'preco': 100, 'descricao': 'Produto para teste automatizado', 'quantidade': 50, '_id': 'ZBJDGZ67Qu9JRNaD'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-09T16:56:37.773936" elapsed="0.001065"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>nome</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-09T16:56:37.775493" elapsed="0.000363"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>preco</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-09T16:56:37.776071" elapsed="0.000262"/>
</kw>
<doc>Obter produto por ID deve retornar 200</doc>
<tag>produtos</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-09T16:56:37.584613" elapsed="0.191937"/>
</test>
<test id="s1-s3-t4" name="SRV-produtos-atualizar-positivo" line="72">
<kw name="Skip If" owner="BuiltIn">
<arg>'${PRODUTO_ID}' == '${EMPTY}'</arg>
<arg>Produto não foi criado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-09T16:56:37.777583" elapsed="0.001071"/>
</kw>
<kw name="Skip If" owner="BuiltIn">
<arg>'${AUTH_TOKEN}' == '${EMPTY}'</arg>
<arg>Token não disponível</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-09T16:56:37.778856" elapsed="0.001121"/>
</kw>
<kw name="Generate Random String" owner="String">
<msg time="2025-09-09T16:56:37.780752" level="INFO">${uuid} = vX9IF3zw</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-09T16:56:37.780251" elapsed="0.000565"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-09T16:56:37.781682" level="INFO">&amp;{produto_update} = { nome=Produto Atualizado vX9IF3zw | preco=150 | descricao=Produto atualizado por teste | quantidade=30 }</msg>
<var>&amp;{produto_update}</var>
<arg>nome=Produto Atualizado ${uuid}</arg>
<arg>preco=150</arg>
<arg>descricao=Produto atualizado por teste</arg>
<arg>quantidade=30</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-09T16:56:37.781080" elapsed="0.000662"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-09T16:56:37.782324" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc0ND...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-09T16:56:37.782007" elapsed="0.000354"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:56:38.058217" level="INFO">PUT Request : url=http://54.147.59.9:3000/produtos/ZBJDGZ67Qu9JRNaD 
 path_url=/produtos/ZBJDGZ67Qu9JRNaD 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc0NDc3OTYsImV4cCI6MTc1NzQ0ODM5Nn0.OaQQ4WL0wyoveX3DmjKLrnleHb3HqRb6domhdwrNL5g', 'Content-Length': '120'} 
 body=b'{"nome": "Produto Atualizado vX9IF3zw", "preco": "150", "descricao": "Produto atualizado por teste", "quantidade": "30"}' 
 </msg>
<msg time="2025-09-09T16:56:38.058315" level="INFO">PUT Response : url=http://54.147.59.9:3000/produtos/ZBJDGZ67Qu9JRNaD 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Tue, 09 Sep 2025 19:56:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg time="2025-09-09T16:56:38.058441" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos/${PRODUTO_ID}</arg>
<arg>json=${produto_update}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:56:37.782513" elapsed="0.275966"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-09T16:56:38.059211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-09T16:56:38.058642" elapsed="0.000635"/>
</kw>
<doc>Atualizar produto deve retornar 200</doc>
<tag>produtos</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-09T16:56:37.776986" elapsed="0.282400"/>
</test>
<test id="s1-s3-t5" name="SRV-produtos-deletar-positivo" line="93">
<kw name="Skip If" owner="BuiltIn">
<arg>'${PRODUTO_ID}' == '${EMPTY}'</arg>
<arg>Produto não foi criado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-09T16:56:38.060016" elapsed="0.000660"/>
</kw>
<kw name="Skip If" owner="BuiltIn">
<arg>'${AUTH_TOKEN}' == '${EMPTY}'</arg>
<arg>Token não disponível</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-09T16:56:38.060804" elapsed="0.000584"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-09T16:56:38.061809" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc0ND...</msg>
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-09T16:56:38.061513" elapsed="0.000337"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:56:38.467665" level="INFO">DELETE Request : url=http://54.147.59.9:3000/produtos/ZBJDGZ67Qu9JRNaD 
 path_url=/produtos/ZBJDGZ67Qu9JRNaD 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhdGVzdEBxYS5jb20uYnIiLCJwYXNzd29yZCI6InFhdGVzdGUiLCJpYXQiOjE3NTc0NDc3OTYsImV4cCI6MTc1NzQ0ODM5Nn0.OaQQ4WL0wyoveX3DmjKLrnleHb3HqRb6domhdwrNL5g', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-09T16:56:38.467775" level="INFO">DELETE Response : url=http://54.147.59.9:3000/produtos/ZBJDGZ67Qu9JRNaD 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Tue, 09 Sep 2025 19:56:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg time="2025-09-09T16:56:38.467889" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/produtos/${PRODUTO_ID}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:56:38.061956" elapsed="0.405955"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} in [200, 204]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-09T16:56:38.468268" elapsed="0.000399"/>
</kw>
<doc>Deletar produto deve retornar 200</doc>
<tag>produtos</tag>
<tag>smoke</tag>
<status status="PASS" start="2025-09-09T16:56:38.059629" elapsed="0.409132"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-09-09T16:56:38.469141" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-09-09T16:56:38.469059" elapsed="0.000149"/>
</kw>
<status status="PASS" start="2025-09-09T16:56:36.628662" elapsed="1.840578"/>
</suite>
<suite id="s1-s4" name="Usuarios" source="c:\Users\ercli\IdeaProjects\COMPASS-UOL-PBAIJUN25\Documentos\Sprint 6\Semana 12\tests\suites\usuarios.robot">
<kw name="Create Session" owner="RequestsLibrary" type="SETUP">
<msg time="2025-09-09T16:56:38.473815" level="INFO">Creating Session using : alias=booker, url=http://54.147.59.9:3000, headers={'Content-Type': 'application/json', 'Accept': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>booker</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${BASE_HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-09-09T16:56:38.473620" elapsed="0.000361"/>
</kw>
<test id="s1-s4-t1" name="SRV-usuarios-criar-positivo" line="12">
<kw name="Generate Random String" owner="String">
<msg time="2025-09-09T16:56:38.474741" level="INFO">${uuid} = 8TR1gyCW</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-09T16:56:38.474451" elapsed="0.000324"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-09T16:56:38.475163" level="INFO">&amp;{usuario_data} = { nome=Usuario Teste 8TR1gyCW | email=teste8TR1gyCW@qa.com | password=teste123 | administrador=true }</msg>
<var>&amp;{usuario_data}</var>
<arg>nome=Usuario Teste ${uuid}</arg>
<arg>email=teste${uuid}@qa.com</arg>
<arg>password=teste123</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-09T16:56:38.474905" elapsed="0.000278"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:56:38.841477" level="INFO">POST Request : url=http://54.147.59.9:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '116'} 
 body=b'{"nome": "Usuario Teste 8TR1gyCW", "email": "teste8TR1gyCW@qa.com", "password": "teste123", "administrador": "true"}' 
 </msg>
<msg time="2025-09-09T16:56:38.841650" level="INFO">POST Response : url=http://54.147.59.9:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Tue, 09 Sep 2025 19:56:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "fjkzfAtOGHljy084"
} 
 </msg>
<msg time="2025-09-09T16:56:38.842212" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/usuarios</arg>
<arg>json=${usuario_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:56:38.475283" elapsed="0.367030"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-09T16:56:38.843535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-09T16:56:38.842603" elapsed="0.001051"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-09T16:56:38.844851" level="INFO">${body} = {'message': 'Cadastro realizado com sucesso', '_id': 'fjkzfAtOGHljy084'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-09T16:56:38.843882" elapsed="0.001025"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-09T16:56:38.845117" elapsed="0.000287"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-09T16:56:38.846837" level="INFO">${USUARIO_ID} = fjkzfAtOGHljy084</msg>
<arg>${USUARIO_ID}</arg>
<arg>${body['_id']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-09T16:56:38.845630" elapsed="0.001384"/>
</kw>
<doc>Criar usuário com email único deve retornar 201</doc>
<tag>smoke</tag>
<tag>usuarios</tag>
<status status="PASS" start="2025-09-09T16:56:38.474063" elapsed="0.373172"/>
</test>
<test id="s1-s4-t2" name="SRV-usuarios-obter-por-id-positivo" line="28">
<kw name="Skip If" owner="BuiltIn">
<arg>'${USUARIO_ID}' == '${EMPTY}'</arg>
<arg>Usuário não foi criado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-09T16:56:38.848456" elapsed="0.001139"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:56:39.055902" level="INFO">GET Request : url=http://54.147.59.9:3000/usuarios/fjkzfAtOGHljy084 
 path_url=/usuarios/fjkzfAtOGHljy084 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-09T16:56:39.056075" level="INFO">GET Response : url=http://54.147.59.9:3000/usuarios/fjkzfAtOGHljy084 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '165', 'Date': 'Tue, 09 Sep 2025 19:56:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Usuario Teste 8TR1gyCW",
    "email": "teste8TR1gyCW@qa.com",
    "password": "teste123",
    "administrador": "true",
    "_id": "fjkzfAtOGHljy084"
} 
 </msg>
<msg time="2025-09-09T16:56:39.056369" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/usuarios/${USUARIO_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:56:38.849849" elapsed="0.206575"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-09T16:56:39.057591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-09T16:56:39.056693" elapsed="0.001009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-09T16:56:39.058845" level="INFO">${body} = {'nome': 'Usuario Teste 8TR1gyCW', 'email': 'teste8TR1gyCW@qa.com', 'password': 'teste123', 'administrador': 'true', '_id': 'fjkzfAtOGHljy084'}</msg>
<var>${body}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-09T16:56:39.057916" elapsed="0.001107"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>nome</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-09T16:56:39.059238" elapsed="0.000264"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${body}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-09T16:56:39.059676" elapsed="0.000218"/>
</kw>
<doc>Obter usuário por ID deve retornar 200</doc>
<tag>smoke</tag>
<tag>usuarios</tag>
<status status="PASS" start="2025-09-09T16:56:38.847665" elapsed="0.212414"/>
</test>
<test id="s1-s4-t3" name="SRV-usuarios-atualizar-positivo" line="39">
<kw name="Skip If" owner="BuiltIn">
<arg>'${USUARIO_ID}' == '${EMPTY}'</arg>
<arg>Usuário não foi criado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-09T16:56:39.061079" elapsed="0.001061"/>
</kw>
<kw name="Generate Random String" owner="String">
<msg time="2025-09-09T16:56:39.062968" level="INFO">${uuid} = jxzFJphP</msg>
<var>${uuid}</var>
<arg>8</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-09-09T16:56:39.062410" elapsed="0.000623"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-09T16:56:39.063976" level="INFO">&amp;{usuario_update} = { nome=Usuario Atualizado jxzFJphP | email=atualizadojxzFJphP@qa.com | password=nova123 | administrador=true }</msg>
<var>&amp;{usuario_update}</var>
<arg>nome=Usuario Atualizado ${uuid}</arg>
<arg>email=atualizado${uuid}@qa.com</arg>
<arg>password=nova123</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-09T16:56:39.063290" elapsed="0.000756"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:56:39.249894" level="INFO">PUT Request : url=http://54.147.59.9:3000/usuarios/fjkzfAtOGHljy084 
 path_url=/usuarios/fjkzfAtOGHljy084 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '125'} 
 body=b'{"nome": "Usuario Atualizado jxzFJphP", "email": "atualizadojxzFJphP@qa.com", "password": "nova123", "administrador": "true"}' 
 </msg>
<msg time="2025-09-09T16:56:39.250010" level="INFO">PUT Response : url=http://54.147.59.9:3000/usuarios/fjkzfAtOGHljy084 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Tue, 09 Sep 2025 19:56:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg time="2025-09-09T16:56:39.250155" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/usuarios/${USUARIO_ID}</arg>
<arg>json=${usuario_update}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:56:39.064307" elapsed="0.185880"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-09T16:56:39.250942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-09T16:56:39.250369" elapsed="0.000661"/>
</kw>
<doc>Atualizar usuário deve retornar 200</doc>
<tag>smoke</tag>
<tag>usuarios</tag>
<status status="PASS" start="2025-09-09T16:56:39.060467" elapsed="0.190716"/>
</test>
<test id="s1-s4-t4" name="SRV-usuarios-deletar-positivo" line="54">
<kw name="Skip If" owner="BuiltIn">
<arg>'${USUARIO_ID}' == '${EMPTY}'</arg>
<arg>Usuário não foi criado</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-09-09T16:56:39.251919" elapsed="0.000688"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-09T16:56:39.511883" level="INFO">DELETE Request : url=http://54.147.59.9:3000/usuarios/fjkzfAtOGHljy084 
 path_url=/usuarios/fjkzfAtOGHljy084 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-09T16:56:39.511955" level="INFO">DELETE Response : url=http://54.147.59.9:3000/usuarios/fjkzfAtOGHljy084 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Tue, 09 Sep 2025 19:56:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg time="2025-09-09T16:56:39.512051" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>booker</arg>
<arg>/usuarios/${USUARIO_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-09T16:56:39.252777" elapsed="0.259292"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} in [200, 204]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-09-09T16:56:39.512200" elapsed="0.000409"/>
</kw>
<doc>Deletar usuário deve retornar 200</doc>
<tag>smoke</tag>
<tag>usuarios</tag>
<status status="PASS" start="2025-09-09T16:56:39.251446" elapsed="0.261249"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-09-09T16:56:39.513057" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-09-09T16:56:39.512992" elapsed="0.000114"/>
</kw>
<status status="PASS" start="2025-09-09T16:56:38.469615" elapsed="1.043518"/>
</suite>
<status status="PASS" start="2025-09-09T16:56:35.559354" elapsed="3.954156"/>
</suite>
<statistics>
<total>
<stat pass="11" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">health</stat>
<stat pass="1" fail="0" skip="0">login</stat>
<stat pass="5" fail="0" skip="0">produtos</stat>
<stat pass="11" fail="0" skip="0">smoke</stat>
<stat pass="4" fail="0" skip="0">usuarios</stat>
</tag>
<suite>
<stat name="Suites" id="s1" pass="11" fail="0" skip="0">Suites</stat>
<stat name="Health" id="s1-s1" pass="1" fail="0" skip="0">Suites.Health</stat>
<stat name="Login" id="s1-s2" pass="1" fail="0" skip="0">Suites.Login</stat>
<stat name="Produtos" id="s1-s3" pass="5" fail="0" skip="0">Suites.Produtos</stat>
<stat name="Usuarios" id="s1-s4" pass="4" fail="0" skip="0">Suites.Usuarios</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
